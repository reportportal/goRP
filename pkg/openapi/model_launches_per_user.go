/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LaunchesPerUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LaunchesPerUser{}

// LaunchesPerUser struct for LaunchesPerUser
type LaunchesPerUser struct {
	FullName *string `json:"fullName,omitempty"`
	Count    *int32  `json:"count,omitempty"`
}

// NewLaunchesPerUser instantiates a new LaunchesPerUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLaunchesPerUser() *LaunchesPerUser {
	this := LaunchesPerUser{}
	return &this
}

// NewLaunchesPerUserWithDefaults instantiates a new LaunchesPerUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLaunchesPerUserWithDefaults() *LaunchesPerUser {
	this := LaunchesPerUser{}
	return &this
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *LaunchesPerUser) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchesPerUser) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *LaunchesPerUser) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *LaunchesPerUser) SetFullName(v string) {
	o.FullName = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *LaunchesPerUser) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchesPerUser) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *LaunchesPerUser) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *LaunchesPerUser) SetCount(v int32) {
	o.Count = &v
}

func (o LaunchesPerUser) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LaunchesPerUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableLaunchesPerUser struct {
	value *LaunchesPerUser
	isSet bool
}

func (v NullableLaunchesPerUser) Get() *LaunchesPerUser {
	return v.value
}

func (v *NullableLaunchesPerUser) Set(val *LaunchesPerUser) {
	v.value = val
	v.isSet = true
}

func (v NullableLaunchesPerUser) IsSet() bool {
	return v.isSet
}

func (v *NullableLaunchesPerUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLaunchesPerUser(val *LaunchesPerUser) *NullableLaunchesPerUser {
	return &NullableLaunchesPerUser{value: val, isSet: true}
}

func (v NullableLaunchesPerUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLaunchesPerUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
