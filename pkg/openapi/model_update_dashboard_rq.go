/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateDashboardRQ type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDashboardRQ{}

// UpdateDashboardRQ struct for UpdateDashboardRQ
type UpdateDashboardRQ struct {
	Description   *string             `json:"description,omitempty"`
	Name          string              `json:"name"`
	UpdateWidgets []WidgetObjectModel `json:"updateWidgets,omitempty"`
}

type _UpdateDashboardRQ UpdateDashboardRQ

// NewUpdateDashboardRQ instantiates a new UpdateDashboardRQ object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDashboardRQ(name string) *UpdateDashboardRQ {
	this := UpdateDashboardRQ{}
	this.Name = name
	return &this
}

// NewUpdateDashboardRQWithDefaults instantiates a new UpdateDashboardRQ object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDashboardRQWithDefaults() *UpdateDashboardRQ {
	this := UpdateDashboardRQ{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateDashboardRQ) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDashboardRQ) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateDashboardRQ) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateDashboardRQ) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *UpdateDashboardRQ) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateDashboardRQ) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateDashboardRQ) SetName(v string) {
	o.Name = v
}

// GetUpdateWidgets returns the UpdateWidgets field value if set, zero value otherwise.
func (o *UpdateDashboardRQ) GetUpdateWidgets() []WidgetObjectModel {
	if o == nil || IsNil(o.UpdateWidgets) {
		var ret []WidgetObjectModel
		return ret
	}
	return o.UpdateWidgets
}

// GetUpdateWidgetsOk returns a tuple with the UpdateWidgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDashboardRQ) GetUpdateWidgetsOk() ([]WidgetObjectModel, bool) {
	if o == nil || IsNil(o.UpdateWidgets) {
		return nil, false
	}
	return o.UpdateWidgets, true
}

// HasUpdateWidgets returns a boolean if a field has been set.
func (o *UpdateDashboardRQ) HasUpdateWidgets() bool {
	if o != nil && !IsNil(o.UpdateWidgets) {
		return true
	}

	return false
}

// SetUpdateWidgets gets a reference to the given []WidgetObjectModel and assigns it to the UpdateWidgets field.
func (o *UpdateDashboardRQ) SetUpdateWidgets(v []WidgetObjectModel) {
	o.UpdateWidgets = v
}

func (o UpdateDashboardRQ) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDashboardRQ) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.UpdateWidgets) {
		toSerialize["updateWidgets"] = o.UpdateWidgets
	}
	return toSerialize, nil
}

func (o *UpdateDashboardRQ) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateDashboardRQ := _UpdateDashboardRQ{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateDashboardRQ)

	if err != nil {
		return err
	}

	*o = UpdateDashboardRQ(varUpdateDashboardRQ)

	return err
}

type NullableUpdateDashboardRQ struct {
	value *UpdateDashboardRQ
	isSet bool
}

func (v NullableUpdateDashboardRQ) Get() *UpdateDashboardRQ {
	return v.value
}

func (v *NullableUpdateDashboardRQ) Set(val *UpdateDashboardRQ) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDashboardRQ) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDashboardRQ) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDashboardRQ(val *UpdateDashboardRQ) *NullableUpdateDashboardRQ {
	return &NullableUpdateDashboardRQ{value: val, isSet: true}
}

func (v NullableUpdateDashboardRQ) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDashboardRQ) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
