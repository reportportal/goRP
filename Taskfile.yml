version: '3'

vars:
  OUTPUT_DIR: "pkg/openapi"
  CLIENT_FILE: "{{.OUTPUT_DIR}}/client.go"
  PACKAGE_NAME: "apiclient"
  SPEC_PATH: "openapi.json"
  MODIFIED_SPEC_PATH: "openapi-modified.json"
  # Detect OS for sed compatibility
  OS:
    sh: uname -s

tasks:
  create-output-dir:
    desc: "Create output directory if it doesn't exist"
    cmds:
      - mkdir -p {{.OUTPUT_DIR}}
    status:
      - test -d {{.OUTPUT_DIR}}

  clean:
    desc: "Remove generated files"
    cmds:
      - rm -rf {{.OUTPUT_DIR}}

  generate-openapi-client:
    depends: [ clean, create-output-dir ]
    desc: "Generate client code"
    cmds:
      - >-
        docker run --rm -v $(pwd)/{{.OUTPUT_DIR}}:/generated 
        -v $(pwd)/{{.MODIFIED_SPEC_PATH}}:/local/openapi.json openapitools/openapi-generator-cli:v7.12.0 generate 
        -i /local/openapi.json -g go -o /generated --package-name openapi 
        --additional-properties=withGoCodegenComment=true,enumClassPrefix=true,onlyGenerateClient=true,withGoMod=false 
        --git-repo-id gorp/v5/pkg/openapi --git-user-id reportportal
        --global-property modelDocs=false,apiDocs=false,apiTests=false

  preprocess:schema:
    desc: Preprocess OpenAPI schema using JQ to fix metadata field type
    cmds:
      - |
        echo "Preprocessing OpenAPI schema with JQ..."
        # Create a temporary modified schema using JQ in Docker
        docker run --rm \
          -v ${PWD}:/workdir \
          -w /workdir \
          ghcr.io/jqlang/jq \
          'walk(if type == "object" and .properties and .properties.metadata and .properties.metadata.type == "object" and .properties.metadata.additionalProperties and .properties.metadata.additionalProperties.type == "object" then .properties.metadata.additionalProperties = true else . end)' \
          {{.SPEC_PATH}} > {{.MODIFIED_SPEC_PATH}}
        echo "Modified schema saved to {{.MODIFIED_SPEC_PATH}}"