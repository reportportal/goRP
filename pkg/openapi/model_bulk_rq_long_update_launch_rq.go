/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the BulkRQLongUpdateLaunchRQ type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkRQLongUpdateLaunchRQ{}

// BulkRQLongUpdateLaunchRQ struct for BulkRQLongUpdateLaunchRQ
type BulkRQLongUpdateLaunchRQ struct {
	Entities map[string]UpdateLaunchRQ `json:"entities"`
}

type _BulkRQLongUpdateLaunchRQ BulkRQLongUpdateLaunchRQ

// NewBulkRQLongUpdateLaunchRQ instantiates a new BulkRQLongUpdateLaunchRQ object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkRQLongUpdateLaunchRQ(entities map[string]UpdateLaunchRQ) *BulkRQLongUpdateLaunchRQ {
	this := BulkRQLongUpdateLaunchRQ{}
	this.Entities = entities
	return &this
}

// NewBulkRQLongUpdateLaunchRQWithDefaults instantiates a new BulkRQLongUpdateLaunchRQ object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkRQLongUpdateLaunchRQWithDefaults() *BulkRQLongUpdateLaunchRQ {
	this := BulkRQLongUpdateLaunchRQ{}
	return &this
}

// GetEntities returns the Entities field value
func (o *BulkRQLongUpdateLaunchRQ) GetEntities() map[string]UpdateLaunchRQ {
	if o == nil {
		var ret map[string]UpdateLaunchRQ
		return ret
	}

	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value
// and a boolean to check if the value has been set.
func (o *BulkRQLongUpdateLaunchRQ) GetEntitiesOk() (map[string]UpdateLaunchRQ, bool) {
	if o == nil {
		return map[string]UpdateLaunchRQ{}, false
	}
	return o.Entities, true
}

// SetEntities sets field value
func (o *BulkRQLongUpdateLaunchRQ) SetEntities(v map[string]UpdateLaunchRQ) {
	o.Entities = v
}

func (o BulkRQLongUpdateLaunchRQ) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkRQLongUpdateLaunchRQ) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entities"] = o.Entities
	return toSerialize, nil
}

func (o *BulkRQLongUpdateLaunchRQ) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entities",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkRQLongUpdateLaunchRQ := _BulkRQLongUpdateLaunchRQ{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBulkRQLongUpdateLaunchRQ)

	if err != nil {
		return err
	}

	*o = BulkRQLongUpdateLaunchRQ(varBulkRQLongUpdateLaunchRQ)

	return err
}

type NullableBulkRQLongUpdateLaunchRQ struct {
	value *BulkRQLongUpdateLaunchRQ
	isSet bool
}

func (v NullableBulkRQLongUpdateLaunchRQ) Get() *BulkRQLongUpdateLaunchRQ {
	return v.value
}

func (v *NullableBulkRQLongUpdateLaunchRQ) Set(val *BulkRQLongUpdateLaunchRQ) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkRQLongUpdateLaunchRQ) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkRQLongUpdateLaunchRQ) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkRQLongUpdateLaunchRQ(val *BulkRQLongUpdateLaunchRQ) *NullableBulkRQLongUpdateLaunchRQ {
	return &NullableBulkRQLongUpdateLaunchRQ{value: val, isSet: true}
}

func (v NullableBulkRQLongUpdateLaunchRQ) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkRQLongUpdateLaunchRQ) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
