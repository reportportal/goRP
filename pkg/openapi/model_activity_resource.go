/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ActivityResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityResource{}

// ActivityResource struct for ActivityResource
type ActivityResource struct {
	// The unique ID of the activity
	Id int64 `json:"id"`
	// The user who performed the activity
	User string `json:"user"`
	// The ID of the object on which activity was performed
	LoggedObjectId int64 `json:"loggedObjectId"`
	// The time the activity was last modified
	LastModified time.Time `json:"lastModified"`
	// The type of action performed
	ActionType string `json:"actionType"`
	// The type of object on which the activity was performed
	ObjectType string `json:"objectType"`
	// The ID of the project in which the activity was performed
	ProjectId int64 `json:"projectId"`
	// The name of the project in which the activity was performed
	ProjectName *string `json:"projectName,omitempty"`
	// The details of the activity, for example history of value
	Details map[string]interface{} `json:"details,omitempty"`
	// The name of the object on which the activity was performed
	ObjectName *string `json:"objectName,omitempty"`
}

type _ActivityResource ActivityResource

// NewActivityResource instantiates a new ActivityResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityResource(id int64, user string, loggedObjectId int64, lastModified time.Time, actionType, objectType string, projectId int64) *ActivityResource {
	this := ActivityResource{}
	this.Id = id
	this.User = user
	this.LoggedObjectId = loggedObjectId
	this.LastModified = lastModified
	this.ActionType = actionType
	this.ObjectType = objectType
	this.ProjectId = projectId
	return &this
}

// NewActivityResourceWithDefaults instantiates a new ActivityResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityResourceWithDefaults() *ActivityResource {
	this := ActivityResource{}
	return &this
}

// GetId returns the Id field value
func (o *ActivityResource) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ActivityResource) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ActivityResource) SetId(v int64) {
	o.Id = v
}

// GetUser returns the User field value
func (o *ActivityResource) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *ActivityResource) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *ActivityResource) SetUser(v string) {
	o.User = v
}

// GetLoggedObjectId returns the LoggedObjectId field value
func (o *ActivityResource) GetLoggedObjectId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LoggedObjectId
}

// GetLoggedObjectIdOk returns a tuple with the LoggedObjectId field value
// and a boolean to check if the value has been set.
func (o *ActivityResource) GetLoggedObjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoggedObjectId, true
}

// SetLoggedObjectId sets field value
func (o *ActivityResource) SetLoggedObjectId(v int64) {
	o.LoggedObjectId = v
}

// GetLastModified returns the LastModified field value
func (o *ActivityResource) GetLastModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value
// and a boolean to check if the value has been set.
func (o *ActivityResource) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModified, true
}

// SetLastModified sets field value
func (o *ActivityResource) SetLastModified(v time.Time) {
	o.LastModified = v
}

// GetActionType returns the ActionType field value
func (o *ActivityResource) GetActionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value
// and a boolean to check if the value has been set.
func (o *ActivityResource) GetActionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionType, true
}

// SetActionType sets field value
func (o *ActivityResource) SetActionType(v string) {
	o.ActionType = v
}

// GetObjectType returns the ObjectType field value
func (o *ActivityResource) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *ActivityResource) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *ActivityResource) SetObjectType(v string) {
	o.ObjectType = v
}

// GetProjectId returns the ProjectId field value
func (o *ActivityResource) GetProjectId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ActivityResource) GetProjectIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ActivityResource) SetProjectId(v int64) {
	o.ProjectId = v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *ActivityResource) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResource) GetProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *ActivityResource) HasProjectName() bool {
	if o != nil && !IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *ActivityResource) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *ActivityResource) GetDetails() map[string]interface{} {
	if o == nil || IsNil(o.Details) {
		var ret map[string]interface{}
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResource) GetDetailsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Details) {
		return map[string]interface{}{}, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ActivityResource) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given map[string]interface{} and assigns it to the Details field.
func (o *ActivityResource) SetDetails(v map[string]interface{}) {
	o.Details = v
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *ActivityResource) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityResource) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *ActivityResource) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *ActivityResource) SetObjectName(v string) {
	o.ObjectName = &v
}

func (o ActivityResource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["user"] = o.User
	toSerialize["loggedObjectId"] = o.LoggedObjectId
	toSerialize["lastModified"] = o.LastModified
	toSerialize["actionType"] = o.ActionType
	toSerialize["objectType"] = o.ObjectType
	toSerialize["projectId"] = o.ProjectId
	if !IsNil(o.ProjectName) {
		toSerialize["projectName"] = o.ProjectName
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.ObjectName) {
		toSerialize["objectName"] = o.ObjectName
	}
	return toSerialize, nil
}

func (o *ActivityResource) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"user",
		"loggedObjectId",
		"lastModified",
		"actionType",
		"objectType",
		"projectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varActivityResource := _ActivityResource{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varActivityResource)

	if err != nil {
		return err
	}

	*o = ActivityResource(varActivityResource)

	return err
}

type NullableActivityResource struct {
	value *ActivityResource
	isSet bool
}

func (v NullableActivityResource) Get() *ActivityResource {
	return v.value
}

func (v *NullableActivityResource) Set(val *ActivityResource) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityResource) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityResource(val *ActivityResource) *NullableActivityResource {
	return &NullableActivityResource{value: val, isSet: true}
}

func (v NullableActivityResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
