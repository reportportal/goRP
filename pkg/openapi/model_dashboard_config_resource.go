/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DashboardConfigResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DashboardConfigResource{}

// DashboardConfigResource struct for DashboardConfigResource
type DashboardConfigResource struct {
	Widgets []WidgetConfigResource `json:"widgets,omitempty"`
}

// NewDashboardConfigResource instantiates a new DashboardConfigResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardConfigResource() *DashboardConfigResource {
	this := DashboardConfigResource{}
	return &this
}

// NewDashboardConfigResourceWithDefaults instantiates a new DashboardConfigResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardConfigResourceWithDefaults() *DashboardConfigResource {
	this := DashboardConfigResource{}
	return &this
}

// GetWidgets returns the Widgets field value if set, zero value otherwise.
func (o *DashboardConfigResource) GetWidgets() []WidgetConfigResource {
	if o == nil || IsNil(o.Widgets) {
		var ret []WidgetConfigResource
		return ret
	}
	return o.Widgets
}

// GetWidgetsOk returns a tuple with the Widgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardConfigResource) GetWidgetsOk() ([]WidgetConfigResource, bool) {
	if o == nil || IsNil(o.Widgets) {
		return nil, false
	}
	return o.Widgets, true
}

// HasWidgets returns a boolean if a field has been set.
func (o *DashboardConfigResource) HasWidgets() bool {
	if o != nil && !IsNil(o.Widgets) {
		return true
	}

	return false
}

// SetWidgets gets a reference to the given []WidgetConfigResource and assigns it to the Widgets field.
func (o *DashboardConfigResource) SetWidgets(v []WidgetConfigResource) {
	o.Widgets = v
}

func (o DashboardConfigResource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardConfigResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Widgets) {
		toSerialize["widgets"] = o.Widgets
	}
	return toSerialize, nil
}

type NullableDashboardConfigResource struct {
	value *DashboardConfigResource
	isSet bool
}

func (v NullableDashboardConfigResource) Get() *DashboardConfigResource {
	return v.value
}

func (v *NullableDashboardConfigResource) Set(val *DashboardConfigResource) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardConfigResource) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardConfigResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardConfigResource(val *DashboardConfigResource) *NullableDashboardConfigResource {
	return &NullableDashboardConfigResource{value: val, isSet: true}
}

func (v NullableDashboardConfigResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardConfigResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
