/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateUserRQFull type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserRQFull{}

// CreateUserRQFull struct for CreateUserRQFull
type CreateUserRQFull struct {
	Active         *bool   `json:"active,omitempty"`
	ExternalId     *string `json:"externalId,omitempty"`
	AccountType    *string `json:"accountType,omitempty"`
	Login          string  `json:"login" validate:"regexp=[a-zA-Z0-9-_.]+"`
	Password       *string `json:"password,omitempty" validate:"regexp=^(?=.*\\\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[^a-zA-Z\\\\d\\\\s])([^\\\\s]){8,256}$"`
	FullName       string  `json:"fullName" validate:"regexp=[\\\\pL0-9-_ \\\\.]+"`
	Email          string  `json:"email"`
	AccountRole    *string `json:"accountRole,omitempty"`
	ProjectRole    *string `json:"projectRole,omitempty"`
	DefaultProject *string `json:"defaultProject,omitempty"`
}

type _CreateUserRQFull CreateUserRQFull

// NewCreateUserRQFull instantiates a new CreateUserRQFull object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserRQFull(login string, fullName string, email string) *CreateUserRQFull {
	this := CreateUserRQFull{}
	var active bool = true
	this.Active = &active
	this.Login = login
	this.FullName = fullName
	this.Email = email
	return &this
}

// NewCreateUserRQFullWithDefaults instantiates a new CreateUserRQFull object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserRQFullWithDefaults() *CreateUserRQFull {
	this := CreateUserRQFull{}
	var active bool = true
	this.Active = &active
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CreateUserRQFull) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRQFull) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CreateUserRQFull) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CreateUserRQFull) SetActive(v bool) {
	o.Active = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *CreateUserRQFull) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRQFull) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *CreateUserRQFull) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *CreateUserRQFull) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *CreateUserRQFull) GetAccountType() string {
	if o == nil || IsNil(o.AccountType) {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRQFull) GetAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *CreateUserRQFull) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *CreateUserRQFull) SetAccountType(v string) {
	o.AccountType = &v
}

// GetLogin returns the Login field value
func (o *CreateUserRQFull) GetLogin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Login
}

// GetLoginOk returns a tuple with the Login field value
// and a boolean to check if the value has been set.
func (o *CreateUserRQFull) GetLoginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Login, true
}

// SetLogin sets field value
func (o *CreateUserRQFull) SetLogin(v string) {
	o.Login = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateUserRQFull) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRQFull) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateUserRQFull) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateUserRQFull) SetPassword(v string) {
	o.Password = &v
}

// GetFullName returns the FullName field value
func (o *CreateUserRQFull) GetFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *CreateUserRQFull) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *CreateUserRQFull) SetFullName(v string) {
	o.FullName = v
}

// GetEmail returns the Email field value
func (o *CreateUserRQFull) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateUserRQFull) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateUserRQFull) SetEmail(v string) {
	o.Email = v
}

// GetAccountRole returns the AccountRole field value if set, zero value otherwise.
func (o *CreateUserRQFull) GetAccountRole() string {
	if o == nil || IsNil(o.AccountRole) {
		var ret string
		return ret
	}
	return *o.AccountRole
}

// GetAccountRoleOk returns a tuple with the AccountRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRQFull) GetAccountRoleOk() (*string, bool) {
	if o == nil || IsNil(o.AccountRole) {
		return nil, false
	}
	return o.AccountRole, true
}

// HasAccountRole returns a boolean if a field has been set.
func (o *CreateUserRQFull) HasAccountRole() bool {
	if o != nil && !IsNil(o.AccountRole) {
		return true
	}

	return false
}

// SetAccountRole gets a reference to the given string and assigns it to the AccountRole field.
func (o *CreateUserRQFull) SetAccountRole(v string) {
	o.AccountRole = &v
}

// GetProjectRole returns the ProjectRole field value if set, zero value otherwise.
func (o *CreateUserRQFull) GetProjectRole() string {
	if o == nil || IsNil(o.ProjectRole) {
		var ret string
		return ret
	}
	return *o.ProjectRole
}

// GetProjectRoleOk returns a tuple with the ProjectRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRQFull) GetProjectRoleOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectRole) {
		return nil, false
	}
	return o.ProjectRole, true
}

// HasProjectRole returns a boolean if a field has been set.
func (o *CreateUserRQFull) HasProjectRole() bool {
	if o != nil && !IsNil(o.ProjectRole) {
		return true
	}

	return false
}

// SetProjectRole gets a reference to the given string and assigns it to the ProjectRole field.
func (o *CreateUserRQFull) SetProjectRole(v string) {
	o.ProjectRole = &v
}

// GetDefaultProject returns the DefaultProject field value if set, zero value otherwise.
func (o *CreateUserRQFull) GetDefaultProject() string {
	if o == nil || IsNil(o.DefaultProject) {
		var ret string
		return ret
	}
	return *o.DefaultProject
}

// GetDefaultProjectOk returns a tuple with the DefaultProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRQFull) GetDefaultProjectOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultProject) {
		return nil, false
	}
	return o.DefaultProject, true
}

// HasDefaultProject returns a boolean if a field has been set.
func (o *CreateUserRQFull) HasDefaultProject() bool {
	if o != nil && !IsNil(o.DefaultProject) {
		return true
	}

	return false
}

// SetDefaultProject gets a reference to the given string and assigns it to the DefaultProject field.
func (o *CreateUserRQFull) SetDefaultProject(v string) {
	o.DefaultProject = &v
}

func (o CreateUserRQFull) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserRQFull) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.AccountType) {
		toSerialize["accountType"] = o.AccountType
	}
	toSerialize["login"] = o.Login
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["fullName"] = o.FullName
	toSerialize["email"] = o.Email
	if !IsNil(o.AccountRole) {
		toSerialize["accountRole"] = o.AccountRole
	}
	if !IsNil(o.ProjectRole) {
		toSerialize["projectRole"] = o.ProjectRole
	}
	if !IsNil(o.DefaultProject) {
		toSerialize["defaultProject"] = o.DefaultProject
	}
	return toSerialize, nil
}

func (o *CreateUserRQFull) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"login",
		"fullName",
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUserRQFull := _CreateUserRQFull{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateUserRQFull)

	if err != nil {
		return err
	}

	*o = CreateUserRQFull(varCreateUserRQFull)

	return err
}

type NullableCreateUserRQFull struct {
	value *CreateUserRQFull
	isSet bool
}

func (v NullableCreateUserRQFull) Get() *CreateUserRQFull {
	return v.value
}

func (v *NullableCreateUserRQFull) Set(val *CreateUserRQFull) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserRQFull) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserRQFull) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserRQFull(val *CreateUserRQFull) *NullableCreateUserRQFull {
	return &NullableCreateUserRQFull{value: val, isSet: true}
}

func (v NullableCreateUserRQFull) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserRQFull) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
