/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateUserBidRS type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserBidRS{}

// CreateUserBidRS struct for CreateUserBidRS
type CreateUserBidRS struct {
	Message  *string `json:"message,omitempty"`
	Bid      *string `json:"bid,omitempty"`
	BackLink *string `json:"backLink,omitempty"`
}

// NewCreateUserBidRS instantiates a new CreateUserBidRS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserBidRS() *CreateUserBidRS {
	this := CreateUserBidRS{}
	return &this
}

// NewCreateUserBidRSWithDefaults instantiates a new CreateUserBidRS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserBidRSWithDefaults() *CreateUserBidRS {
	this := CreateUserBidRS{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CreateUserBidRS) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserBidRS) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CreateUserBidRS) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CreateUserBidRS) SetMessage(v string) {
	o.Message = &v
}

// GetBid returns the Bid field value if set, zero value otherwise.
func (o *CreateUserBidRS) GetBid() string {
	if o == nil || IsNil(o.Bid) {
		var ret string
		return ret
	}
	return *o.Bid
}

// GetBidOk returns a tuple with the Bid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserBidRS) GetBidOk() (*string, bool) {
	if o == nil || IsNil(o.Bid) {
		return nil, false
	}
	return o.Bid, true
}

// HasBid returns a boolean if a field has been set.
func (o *CreateUserBidRS) HasBid() bool {
	if o != nil && !IsNil(o.Bid) {
		return true
	}

	return false
}

// SetBid gets a reference to the given string and assigns it to the Bid field.
func (o *CreateUserBidRS) SetBid(v string) {
	o.Bid = &v
}

// GetBackLink returns the BackLink field value if set, zero value otherwise.
func (o *CreateUserBidRS) GetBackLink() string {
	if o == nil || IsNil(o.BackLink) {
		var ret string
		return ret
	}
	return *o.BackLink
}

// GetBackLinkOk returns a tuple with the BackLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserBidRS) GetBackLinkOk() (*string, bool) {
	if o == nil || IsNil(o.BackLink) {
		return nil, false
	}
	return o.BackLink, true
}

// HasBackLink returns a boolean if a field has been set.
func (o *CreateUserBidRS) HasBackLink() bool {
	if o != nil && !IsNil(o.BackLink) {
		return true
	}

	return false
}

// SetBackLink gets a reference to the given string and assigns it to the BackLink field.
func (o *CreateUserBidRS) SetBackLink(v string) {
	o.BackLink = &v
}

func (o CreateUserBidRS) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserBidRS) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Bid) {
		toSerialize["bid"] = o.Bid
	}
	if !IsNil(o.BackLink) {
		toSerialize["backLink"] = o.BackLink
	}
	return toSerialize, nil
}

type NullableCreateUserBidRS struct {
	value *CreateUserBidRS
	isSet bool
}

func (v NullableCreateUserBidRS) Get() *CreateUserBidRS {
	return v.value
}

func (v *NullableCreateUserBidRS) Set(val *CreateUserBidRS) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserBidRS) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserBidRS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserBidRS(val *CreateUserBidRS) *NullableCreateUserBidRS {
	return &NullableCreateUserBidRS{value: val, isSet: true}
}

func (v NullableCreateUserBidRS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserBidRS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
