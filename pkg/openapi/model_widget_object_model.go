/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WidgetObjectModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetObjectModel{}

// WidgetObjectModel struct for WidgetObjectModel
type WidgetObjectModel struct {
	WidgetName     *string                `json:"widgetName,omitempty"`
	WidgetId       int64                  `json:"widgetId"`
	WidgetType     *string                `json:"widgetType,omitempty"`
	WidgetSize     *Size                  `json:"widgetSize,omitempty"`
	WidgetPosition *Position              `json:"widgetPosition,omitempty"`
	WidgetOptions  map[string]interface{} `json:"widgetOptions,omitempty"`
}

type _WidgetObjectModel WidgetObjectModel

// NewWidgetObjectModel instantiates a new WidgetObjectModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetObjectModel(widgetId int64) *WidgetObjectModel {
	this := WidgetObjectModel{}
	this.WidgetId = widgetId
	return &this
}

// NewWidgetObjectModelWithDefaults instantiates a new WidgetObjectModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetObjectModelWithDefaults() *WidgetObjectModel {
	this := WidgetObjectModel{}
	return &this
}

// GetWidgetName returns the WidgetName field value if set, zero value otherwise.
func (o *WidgetObjectModel) GetWidgetName() string {
	if o == nil || IsNil(o.WidgetName) {
		var ret string
		return ret
	}
	return *o.WidgetName
}

// GetWidgetNameOk returns a tuple with the WidgetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetObjectModel) GetWidgetNameOk() (*string, bool) {
	if o == nil || IsNil(o.WidgetName) {
		return nil, false
	}
	return o.WidgetName, true
}

// HasWidgetName returns a boolean if a field has been set.
func (o *WidgetObjectModel) HasWidgetName() bool {
	if o != nil && !IsNil(o.WidgetName) {
		return true
	}

	return false
}

// SetWidgetName gets a reference to the given string and assigns it to the WidgetName field.
func (o *WidgetObjectModel) SetWidgetName(v string) {
	o.WidgetName = &v
}

// GetWidgetId returns the WidgetId field value
func (o *WidgetObjectModel) GetWidgetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.WidgetId
}

// GetWidgetIdOk returns a tuple with the WidgetId field value
// and a boolean to check if the value has been set.
func (o *WidgetObjectModel) GetWidgetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WidgetId, true
}

// SetWidgetId sets field value
func (o *WidgetObjectModel) SetWidgetId(v int64) {
	o.WidgetId = v
}

// GetWidgetType returns the WidgetType field value if set, zero value otherwise.
func (o *WidgetObjectModel) GetWidgetType() string {
	if o == nil || IsNil(o.WidgetType) {
		var ret string
		return ret
	}
	return *o.WidgetType
}

// GetWidgetTypeOk returns a tuple with the WidgetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetObjectModel) GetWidgetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.WidgetType) {
		return nil, false
	}
	return o.WidgetType, true
}

// HasWidgetType returns a boolean if a field has been set.
func (o *WidgetObjectModel) HasWidgetType() bool {
	if o != nil && !IsNil(o.WidgetType) {
		return true
	}

	return false
}

// SetWidgetType gets a reference to the given string and assigns it to the WidgetType field.
func (o *WidgetObjectModel) SetWidgetType(v string) {
	o.WidgetType = &v
}

// GetWidgetSize returns the WidgetSize field value if set, zero value otherwise.
func (o *WidgetObjectModel) GetWidgetSize() Size {
	if o == nil || IsNil(o.WidgetSize) {
		var ret Size
		return ret
	}
	return *o.WidgetSize
}

// GetWidgetSizeOk returns a tuple with the WidgetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetObjectModel) GetWidgetSizeOk() (*Size, bool) {
	if o == nil || IsNil(o.WidgetSize) {
		return nil, false
	}
	return o.WidgetSize, true
}

// HasWidgetSize returns a boolean if a field has been set.
func (o *WidgetObjectModel) HasWidgetSize() bool {
	if o != nil && !IsNil(o.WidgetSize) {
		return true
	}

	return false
}

// SetWidgetSize gets a reference to the given Size and assigns it to the WidgetSize field.
func (o *WidgetObjectModel) SetWidgetSize(v Size) {
	o.WidgetSize = &v
}

// GetWidgetPosition returns the WidgetPosition field value if set, zero value otherwise.
func (o *WidgetObjectModel) GetWidgetPosition() Position {
	if o == nil || IsNil(o.WidgetPosition) {
		var ret Position
		return ret
	}
	return *o.WidgetPosition
}

// GetWidgetPositionOk returns a tuple with the WidgetPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetObjectModel) GetWidgetPositionOk() (*Position, bool) {
	if o == nil || IsNil(o.WidgetPosition) {
		return nil, false
	}
	return o.WidgetPosition, true
}

// HasWidgetPosition returns a boolean if a field has been set.
func (o *WidgetObjectModel) HasWidgetPosition() bool {
	if o != nil && !IsNil(o.WidgetPosition) {
		return true
	}

	return false
}

// SetWidgetPosition gets a reference to the given Position and assigns it to the WidgetPosition field.
func (o *WidgetObjectModel) SetWidgetPosition(v Position) {
	o.WidgetPosition = &v
}

// GetWidgetOptions returns the WidgetOptions field value if set, zero value otherwise.
func (o *WidgetObjectModel) GetWidgetOptions() map[string]interface{} {
	if o == nil || IsNil(o.WidgetOptions) {
		var ret map[string]interface{}
		return ret
	}
	return o.WidgetOptions
}

// GetWidgetOptionsOk returns a tuple with the WidgetOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetObjectModel) GetWidgetOptionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.WidgetOptions) {
		return map[string]interface{}{}, false
	}
	return o.WidgetOptions, true
}

// HasWidgetOptions returns a boolean if a field has been set.
func (o *WidgetObjectModel) HasWidgetOptions() bool {
	if o != nil && !IsNil(o.WidgetOptions) {
		return true
	}

	return false
}

// SetWidgetOptions gets a reference to the given map[string]interface{} and assigns it to the WidgetOptions field.
func (o *WidgetObjectModel) SetWidgetOptions(v map[string]interface{}) {
	o.WidgetOptions = v
}

func (o WidgetObjectModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetObjectModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WidgetName) {
		toSerialize["widgetName"] = o.WidgetName
	}
	toSerialize["widgetId"] = o.WidgetId
	if !IsNil(o.WidgetType) {
		toSerialize["widgetType"] = o.WidgetType
	}
	if !IsNil(o.WidgetSize) {
		toSerialize["widgetSize"] = o.WidgetSize
	}
	if !IsNil(o.WidgetPosition) {
		toSerialize["widgetPosition"] = o.WidgetPosition
	}
	if !IsNil(o.WidgetOptions) {
		toSerialize["widgetOptions"] = o.WidgetOptions
	}
	return toSerialize, nil
}

func (o *WidgetObjectModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"widgetId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWidgetObjectModel := _WidgetObjectModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWidgetObjectModel)

	if err != nil {
		return err
	}

	*o = WidgetObjectModel(varWidgetObjectModel)

	return err
}

type NullableWidgetObjectModel struct {
	value *WidgetObjectModel
	isSet bool
}

func (v NullableWidgetObjectModel) Get() *WidgetObjectModel {
	return v.value
}

func (v *NullableWidgetObjectModel) Set(val *WidgetObjectModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetObjectModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetObjectModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetObjectModel(val *WidgetObjectModel) *NullableWidgetObjectModel {
	return &NullableWidgetObjectModel{value: val, isSet: true}
}

func (v NullableWidgetObjectModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetObjectModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
