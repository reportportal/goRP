/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StatisticsResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatisticsResource{}

// StatisticsResource struct for StatisticsResource
type StatisticsResource struct {
	Executions map[string]int32            `json:"executions,omitempty"`
	Defects    map[string]map[string]int32 `json:"defects,omitempty"`
}

// NewStatisticsResource instantiates a new StatisticsResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatisticsResource() *StatisticsResource {
	this := StatisticsResource{}
	return &this
}

// NewStatisticsResourceWithDefaults instantiates a new StatisticsResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatisticsResourceWithDefaults() *StatisticsResource {
	this := StatisticsResource{}
	return &this
}

// GetExecutions returns the Executions field value if set, zero value otherwise.
func (o *StatisticsResource) GetExecutions() map[string]int32 {
	if o == nil || IsNil(o.Executions) {
		var ret map[string]int32
		return ret
	}
	return o.Executions
}

// GetExecutionsOk returns a tuple with the Executions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsResource) GetExecutionsOk() (map[string]int32, bool) {
	if o == nil || IsNil(o.Executions) {
		return map[string]int32{}, false
	}
	return o.Executions, true
}

// HasExecutions returns a boolean if a field has been set.
func (o *StatisticsResource) HasExecutions() bool {
	if o != nil && !IsNil(o.Executions) {
		return true
	}

	return false
}

// SetExecutions gets a reference to the given map[string]int32 and assigns it to the Executions field.
func (o *StatisticsResource) SetExecutions(v map[string]int32) {
	o.Executions = v
}

// GetDefects returns the Defects field value if set, zero value otherwise.
func (o *StatisticsResource) GetDefects() map[string]map[string]int32 {
	if o == nil || IsNil(o.Defects) {
		var ret map[string]map[string]int32
		return ret
	}
	return o.Defects
}

// GetDefectsOk returns a tuple with the Defects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsResource) GetDefectsOk() (map[string]map[string]int32, bool) {
	if o == nil || IsNil(o.Defects) {
		return map[string]map[string]int32{}, false
	}
	return o.Defects, true
}

// HasDefects returns a boolean if a field has been set.
func (o *StatisticsResource) HasDefects() bool {
	if o != nil && !IsNil(o.Defects) {
		return true
	}

	return false
}

// SetDefects gets a reference to the given map[string]map[string]int32 and assigns it to the Defects field.
func (o *StatisticsResource) SetDefects(v map[string]map[string]int32) {
	o.Defects = v
}

func (o StatisticsResource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatisticsResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Executions) {
		toSerialize["executions"] = o.Executions
	}
	if !IsNil(o.Defects) {
		toSerialize["defects"] = o.Defects
	}
	return toSerialize, nil
}

type NullableStatisticsResource struct {
	value *StatisticsResource
	isSet bool
}

func (v NullableStatisticsResource) Get() *StatisticsResource {
	return v.value
}

func (v *NullableStatisticsResource) Set(val *StatisticsResource) {
	v.value = val
	v.isSet = true
}

func (v NullableStatisticsResource) IsSet() bool {
	return v.isSet
}

func (v *NullableStatisticsResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatisticsResource(val *StatisticsResource) *NullableStatisticsResource {
	return &NullableStatisticsResource{value: val, isSet: true}
}

func (v NullableStatisticsResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatisticsResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
