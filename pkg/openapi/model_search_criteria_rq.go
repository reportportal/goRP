/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SearchCriteriaRQ type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCriteriaRQ{}

// SearchCriteriaRQ struct for SearchCriteriaRQ
type SearchCriteriaRQ struct {
	SearchCriterias []SearchCriteria `json:"search_criterias"`
}

type _SearchCriteriaRQ SearchCriteriaRQ

// NewSearchCriteriaRQ instantiates a new SearchCriteriaRQ object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCriteriaRQ(searchCriterias []SearchCriteria) *SearchCriteriaRQ {
	this := SearchCriteriaRQ{}
	this.SearchCriterias = searchCriterias
	return &this
}

// NewSearchCriteriaRQWithDefaults instantiates a new SearchCriteriaRQ object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCriteriaRQWithDefaults() *SearchCriteriaRQ {
	this := SearchCriteriaRQ{}
	return &this
}

// GetSearchCriterias returns the SearchCriterias field value
func (o *SearchCriteriaRQ) GetSearchCriterias() []SearchCriteria {
	if o == nil {
		var ret []SearchCriteria
		return ret
	}

	return o.SearchCriterias
}

// GetSearchCriteriasOk returns a tuple with the SearchCriterias field value
// and a boolean to check if the value has been set.
func (o *SearchCriteriaRQ) GetSearchCriteriasOk() ([]SearchCriteria, bool) {
	if o == nil {
		return nil, false
	}
	return o.SearchCriterias, true
}

// SetSearchCriterias sets field value
func (o *SearchCriteriaRQ) SetSearchCriterias(v []SearchCriteria) {
	o.SearchCriterias = v
}

func (o SearchCriteriaRQ) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCriteriaRQ) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["search_criterias"] = o.SearchCriterias
	return toSerialize, nil
}

func (o *SearchCriteriaRQ) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"search_criterias",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSearchCriteriaRQ := _SearchCriteriaRQ{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSearchCriteriaRQ)

	if err != nil {
		return err
	}

	*o = SearchCriteriaRQ(varSearchCriteriaRQ)

	return err
}

type NullableSearchCriteriaRQ struct {
	value *SearchCriteriaRQ
	isSet bool
}

func (v NullableSearchCriteriaRQ) Get() *SearchCriteriaRQ {
	return v.value
}

func (v *NullableSearchCriteriaRQ) Set(val *SearchCriteriaRQ) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCriteriaRQ) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCriteriaRQ) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCriteriaRQ(val *SearchCriteriaRQ) *NullableSearchCriteriaRQ {
	return &NullableSearchCriteriaRQ{value: val, isSet: true}
}

func (v NullableSearchCriteriaRQ) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCriteriaRQ) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
