/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the FinishExecutionRQ type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinishExecutionRQ{}

// FinishExecutionRQ struct for FinishExecutionRQ
type FinishExecutionRQ struct {
	Attributes  []ItemAttributesRQ `json:"attributes,omitempty"`
	EndTime     time.Time          `json:"endTime"`
	Status      *string            `json:"status,omitempty"`
	Description *string            `json:"description,omitempty"`
}

type _FinishExecutionRQ FinishExecutionRQ

// NewFinishExecutionRQ instantiates a new FinishExecutionRQ object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinishExecutionRQ(endTime time.Time) *FinishExecutionRQ {
	this := FinishExecutionRQ{}
	this.EndTime = endTime
	return &this
}

// NewFinishExecutionRQWithDefaults instantiates a new FinishExecutionRQ object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinishExecutionRQWithDefaults() *FinishExecutionRQ {
	this := FinishExecutionRQ{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *FinishExecutionRQ) GetAttributes() []ItemAttributesRQ {
	if o == nil || IsNil(o.Attributes) {
		var ret []ItemAttributesRQ
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinishExecutionRQ) GetAttributesOk() ([]ItemAttributesRQ, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *FinishExecutionRQ) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []ItemAttributesRQ and assigns it to the Attributes field.
func (o *FinishExecutionRQ) SetAttributes(v []ItemAttributesRQ) {
	o.Attributes = v
}

// GetEndTime returns the EndTime field value
func (o *FinishExecutionRQ) GetEndTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *FinishExecutionRQ) GetEndTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *FinishExecutionRQ) SetEndTime(v time.Time) {
	o.EndTime = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FinishExecutionRQ) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinishExecutionRQ) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FinishExecutionRQ) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FinishExecutionRQ) SetStatus(v string) {
	o.Status = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FinishExecutionRQ) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinishExecutionRQ) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FinishExecutionRQ) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FinishExecutionRQ) SetDescription(v string) {
	o.Description = &v
}

func (o FinishExecutionRQ) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinishExecutionRQ) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	toSerialize["endTime"] = o.EndTime
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

func (o *FinishExecutionRQ) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endTime",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFinishExecutionRQ := _FinishExecutionRQ{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFinishExecutionRQ)

	if err != nil {
		return err
	}

	*o = FinishExecutionRQ(varFinishExecutionRQ)

	return err
}

type NullableFinishExecutionRQ struct {
	value *FinishExecutionRQ
	isSet bool
}

func (v NullableFinishExecutionRQ) Get() *FinishExecutionRQ {
	return v.value
}

func (v *NullableFinishExecutionRQ) Set(val *FinishExecutionRQ) {
	v.value = val
	v.isSet = true
}

func (v NullableFinishExecutionRQ) IsSet() bool {
	return v.isSet
}

func (v *NullableFinishExecutionRQ) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinishExecutionRQ(val *FinishExecutionRQ) *NullableFinishExecutionRQ {
	return &NullableFinishExecutionRQ{value: val, isSet: true}
}

func (v NullableFinishExecutionRQ) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinishExecutionRQ) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
