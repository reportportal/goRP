/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ChartStatisticsContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChartStatisticsContent{}

// ChartStatisticsContent struct for ChartStatisticsContent
type ChartStatisticsContent struct {
	Id        *int64            `json:"id,omitempty"`
	Number    *int32            `json:"number,omitempty"`
	Name      *string           `json:"name,omitempty"`
	StartTime *time.Time        `json:"startTime,omitempty"`
	Values    map[string]string `json:"values,omitempty"`
}

// NewChartStatisticsContent instantiates a new ChartStatisticsContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChartStatisticsContent() *ChartStatisticsContent {
	this := ChartStatisticsContent{}
	return &this
}

// NewChartStatisticsContentWithDefaults instantiates a new ChartStatisticsContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChartStatisticsContentWithDefaults() *ChartStatisticsContent {
	this := ChartStatisticsContent{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChartStatisticsContent) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartStatisticsContent) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChartStatisticsContent) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ChartStatisticsContent) SetId(v int64) {
	o.Id = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *ChartStatisticsContent) GetNumber() int32 {
	if o == nil || IsNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartStatisticsContent) GetNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *ChartStatisticsContent) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *ChartStatisticsContent) SetNumber(v int32) {
	o.Number = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ChartStatisticsContent) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartStatisticsContent) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ChartStatisticsContent) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ChartStatisticsContent) SetName(v string) {
	o.Name = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ChartStatisticsContent) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartStatisticsContent) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ChartStatisticsContent) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *ChartStatisticsContent) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ChartStatisticsContent) GetValues() map[string]string {
	if o == nil || IsNil(o.Values) {
		var ret map[string]string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChartStatisticsContent) GetValuesOk() (map[string]string, bool) {
	if o == nil || IsNil(o.Values) {
		return map[string]string{}, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ChartStatisticsContent) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given map[string]string and assigns it to the Values field.
func (o *ChartStatisticsContent) SetValues(v map[string]string) {
	o.Values = v
}

func (o ChartStatisticsContent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChartStatisticsContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableChartStatisticsContent struct {
	value *ChartStatisticsContent
	isSet bool
}

func (v NullableChartStatisticsContent) Get() *ChartStatisticsContent {
	return v.value
}

func (v *NullableChartStatisticsContent) Set(val *ChartStatisticsContent) {
	v.value = val
	v.isSet = true
}

func (v NullableChartStatisticsContent) IsSet() bool {
	return v.isSet
}

func (v *NullableChartStatisticsContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChartStatisticsContent(val *ChartStatisticsContent) *NullableChartStatisticsContent {
	return &NullableChartStatisticsContent{value: val, isSet: true}
}

func (v NullableChartStatisticsContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChartStatisticsContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
