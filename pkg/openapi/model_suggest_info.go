/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SuggestInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuggestInfo{}

// SuggestInfo struct for SuggestInfo
type SuggestInfo struct {
	Project            *int64   `json:"project,omitempty"`
	TestItem           *int64   `json:"testItem,omitempty"`
	TestItemLogId      *int64   `json:"testItemLogId,omitempty"`
	LaunchId           *int64   `json:"launchId,omitempty"`
	LaunchName         *string  `json:"launchName,omitempty"`
	LaunchNumber       *int64   `json:"launchNumber,omitempty"`
	IssueType          *string  `json:"issueType,omitempty"`
	RelevantItem       *int64   `json:"relevantItem,omitempty"`
	RelevantLogId      *int64   `json:"relevantLogId,omitempty"`
	IsMergedLog        *bool    `json:"isMergedLog,omitempty"`
	MatchScore         *float32 `json:"matchScore,omitempty"`
	ResultPosition     *int32   `json:"resultPosition,omitempty"`
	EsScore            *float32 `json:"esScore,omitempty"`
	EsPosition         *int32   `json:"esPosition,omitempty"`
	ModelFeatureNames  *string  `json:"modelFeatureNames,omitempty"`
	ModelFeatureValues *string  `json:"modelFeatureValues,omitempty"`
	ModelInfo          *string  `json:"modelInfo,omitempty"`
	UsedLogLines       *int32   `json:"usedLogLines,omitempty"`
	MinShouldMatch     *int32   `json:"minShouldMatch,omitempty"`
	ProcessedTime      *float32 `json:"processedTime,omitempty"`
	UserChoice         *int32   `json:"userChoice,omitempty"`
	MethodName         *string  `json:"methodName,omitempty"`
	ClusterId          *int64   `json:"clusterId,omitempty"`
}

// NewSuggestInfo instantiates a new SuggestInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuggestInfo() *SuggestInfo {
	this := SuggestInfo{}
	return &this
}

// NewSuggestInfoWithDefaults instantiates a new SuggestInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuggestInfoWithDefaults() *SuggestInfo {
	this := SuggestInfo{}
	return &this
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *SuggestInfo) GetProject() int64 {
	if o == nil || IsNil(o.Project) {
		var ret int64
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetProjectOk() (*int64, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *SuggestInfo) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given int64 and assigns it to the Project field.
func (o *SuggestInfo) SetProject(v int64) {
	o.Project = &v
}

// GetTestItem returns the TestItem field value if set, zero value otherwise.
func (o *SuggestInfo) GetTestItem() int64 {
	if o == nil || IsNil(o.TestItem) {
		var ret int64
		return ret
	}
	return *o.TestItem
}

// GetTestItemOk returns a tuple with the TestItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetTestItemOk() (*int64, bool) {
	if o == nil || IsNil(o.TestItem) {
		return nil, false
	}
	return o.TestItem, true
}

// HasTestItem returns a boolean if a field has been set.
func (o *SuggestInfo) HasTestItem() bool {
	if o != nil && !IsNil(o.TestItem) {
		return true
	}

	return false
}

// SetTestItem gets a reference to the given int64 and assigns it to the TestItem field.
func (o *SuggestInfo) SetTestItem(v int64) {
	o.TestItem = &v
}

// GetTestItemLogId returns the TestItemLogId field value if set, zero value otherwise.
func (o *SuggestInfo) GetTestItemLogId() int64 {
	if o == nil || IsNil(o.TestItemLogId) {
		var ret int64
		return ret
	}
	return *o.TestItemLogId
}

// GetTestItemLogIdOk returns a tuple with the TestItemLogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetTestItemLogIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TestItemLogId) {
		return nil, false
	}
	return o.TestItemLogId, true
}

// HasTestItemLogId returns a boolean if a field has been set.
func (o *SuggestInfo) HasTestItemLogId() bool {
	if o != nil && !IsNil(o.TestItemLogId) {
		return true
	}

	return false
}

// SetTestItemLogId gets a reference to the given int64 and assigns it to the TestItemLogId field.
func (o *SuggestInfo) SetTestItemLogId(v int64) {
	o.TestItemLogId = &v
}

// GetLaunchId returns the LaunchId field value if set, zero value otherwise.
func (o *SuggestInfo) GetLaunchId() int64 {
	if o == nil || IsNil(o.LaunchId) {
		var ret int64
		return ret
	}
	return *o.LaunchId
}

// GetLaunchIdOk returns a tuple with the LaunchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetLaunchIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LaunchId) {
		return nil, false
	}
	return o.LaunchId, true
}

// HasLaunchId returns a boolean if a field has been set.
func (o *SuggestInfo) HasLaunchId() bool {
	if o != nil && !IsNil(o.LaunchId) {
		return true
	}

	return false
}

// SetLaunchId gets a reference to the given int64 and assigns it to the LaunchId field.
func (o *SuggestInfo) SetLaunchId(v int64) {
	o.LaunchId = &v
}

// GetLaunchName returns the LaunchName field value if set, zero value otherwise.
func (o *SuggestInfo) GetLaunchName() string {
	if o == nil || IsNil(o.LaunchName) {
		var ret string
		return ret
	}
	return *o.LaunchName
}

// GetLaunchNameOk returns a tuple with the LaunchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetLaunchNameOk() (*string, bool) {
	if o == nil || IsNil(o.LaunchName) {
		return nil, false
	}
	return o.LaunchName, true
}

// HasLaunchName returns a boolean if a field has been set.
func (o *SuggestInfo) HasLaunchName() bool {
	if o != nil && !IsNil(o.LaunchName) {
		return true
	}

	return false
}

// SetLaunchName gets a reference to the given string and assigns it to the LaunchName field.
func (o *SuggestInfo) SetLaunchName(v string) {
	o.LaunchName = &v
}

// GetLaunchNumber returns the LaunchNumber field value if set, zero value otherwise.
func (o *SuggestInfo) GetLaunchNumber() int64 {
	if o == nil || IsNil(o.LaunchNumber) {
		var ret int64
		return ret
	}
	return *o.LaunchNumber
}

// GetLaunchNumberOk returns a tuple with the LaunchNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetLaunchNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.LaunchNumber) {
		return nil, false
	}
	return o.LaunchNumber, true
}

// HasLaunchNumber returns a boolean if a field has been set.
func (o *SuggestInfo) HasLaunchNumber() bool {
	if o != nil && !IsNil(o.LaunchNumber) {
		return true
	}

	return false
}

// SetLaunchNumber gets a reference to the given int64 and assigns it to the LaunchNumber field.
func (o *SuggestInfo) SetLaunchNumber(v int64) {
	o.LaunchNumber = &v
}

// GetIssueType returns the IssueType field value if set, zero value otherwise.
func (o *SuggestInfo) GetIssueType() string {
	if o == nil || IsNil(o.IssueType) {
		var ret string
		return ret
	}
	return *o.IssueType
}

// GetIssueTypeOk returns a tuple with the IssueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetIssueTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IssueType) {
		return nil, false
	}
	return o.IssueType, true
}

// HasIssueType returns a boolean if a field has been set.
func (o *SuggestInfo) HasIssueType() bool {
	if o != nil && !IsNil(o.IssueType) {
		return true
	}

	return false
}

// SetIssueType gets a reference to the given string and assigns it to the IssueType field.
func (o *SuggestInfo) SetIssueType(v string) {
	o.IssueType = &v
}

// GetRelevantItem returns the RelevantItem field value if set, zero value otherwise.
func (o *SuggestInfo) GetRelevantItem() int64 {
	if o == nil || IsNil(o.RelevantItem) {
		var ret int64
		return ret
	}
	return *o.RelevantItem
}

// GetRelevantItemOk returns a tuple with the RelevantItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetRelevantItemOk() (*int64, bool) {
	if o == nil || IsNil(o.RelevantItem) {
		return nil, false
	}
	return o.RelevantItem, true
}

// HasRelevantItem returns a boolean if a field has been set.
func (o *SuggestInfo) HasRelevantItem() bool {
	if o != nil && !IsNil(o.RelevantItem) {
		return true
	}

	return false
}

// SetRelevantItem gets a reference to the given int64 and assigns it to the RelevantItem field.
func (o *SuggestInfo) SetRelevantItem(v int64) {
	o.RelevantItem = &v
}

// GetRelevantLogId returns the RelevantLogId field value if set, zero value otherwise.
func (o *SuggestInfo) GetRelevantLogId() int64 {
	if o == nil || IsNil(o.RelevantLogId) {
		var ret int64
		return ret
	}
	return *o.RelevantLogId
}

// GetRelevantLogIdOk returns a tuple with the RelevantLogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetRelevantLogIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RelevantLogId) {
		return nil, false
	}
	return o.RelevantLogId, true
}

// HasRelevantLogId returns a boolean if a field has been set.
func (o *SuggestInfo) HasRelevantLogId() bool {
	if o != nil && !IsNil(o.RelevantLogId) {
		return true
	}

	return false
}

// SetRelevantLogId gets a reference to the given int64 and assigns it to the RelevantLogId field.
func (o *SuggestInfo) SetRelevantLogId(v int64) {
	o.RelevantLogId = &v
}

// GetIsMergedLog returns the IsMergedLog field value if set, zero value otherwise.
func (o *SuggestInfo) GetIsMergedLog() bool {
	if o == nil || IsNil(o.IsMergedLog) {
		var ret bool
		return ret
	}
	return *o.IsMergedLog
}

// GetIsMergedLogOk returns a tuple with the IsMergedLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetIsMergedLogOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMergedLog) {
		return nil, false
	}
	return o.IsMergedLog, true
}

// HasIsMergedLog returns a boolean if a field has been set.
func (o *SuggestInfo) HasIsMergedLog() bool {
	if o != nil && !IsNil(o.IsMergedLog) {
		return true
	}

	return false
}

// SetIsMergedLog gets a reference to the given bool and assigns it to the IsMergedLog field.
func (o *SuggestInfo) SetIsMergedLog(v bool) {
	o.IsMergedLog = &v
}

// GetMatchScore returns the MatchScore field value if set, zero value otherwise.
func (o *SuggestInfo) GetMatchScore() float32 {
	if o == nil || IsNil(o.MatchScore) {
		var ret float32
		return ret
	}
	return *o.MatchScore
}

// GetMatchScoreOk returns a tuple with the MatchScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetMatchScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.MatchScore) {
		return nil, false
	}
	return o.MatchScore, true
}

// HasMatchScore returns a boolean if a field has been set.
func (o *SuggestInfo) HasMatchScore() bool {
	if o != nil && !IsNil(o.MatchScore) {
		return true
	}

	return false
}

// SetMatchScore gets a reference to the given float32 and assigns it to the MatchScore field.
func (o *SuggestInfo) SetMatchScore(v float32) {
	o.MatchScore = &v
}

// GetResultPosition returns the ResultPosition field value if set, zero value otherwise.
func (o *SuggestInfo) GetResultPosition() int32 {
	if o == nil || IsNil(o.ResultPosition) {
		var ret int32
		return ret
	}
	return *o.ResultPosition
}

// GetResultPositionOk returns a tuple with the ResultPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetResultPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.ResultPosition) {
		return nil, false
	}
	return o.ResultPosition, true
}

// HasResultPosition returns a boolean if a field has been set.
func (o *SuggestInfo) HasResultPosition() bool {
	if o != nil && !IsNil(o.ResultPosition) {
		return true
	}

	return false
}

// SetResultPosition gets a reference to the given int32 and assigns it to the ResultPosition field.
func (o *SuggestInfo) SetResultPosition(v int32) {
	o.ResultPosition = &v
}

// GetEsScore returns the EsScore field value if set, zero value otherwise.
func (o *SuggestInfo) GetEsScore() float32 {
	if o == nil || IsNil(o.EsScore) {
		var ret float32
		return ret
	}
	return *o.EsScore
}

// GetEsScoreOk returns a tuple with the EsScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetEsScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.EsScore) {
		return nil, false
	}
	return o.EsScore, true
}

// HasEsScore returns a boolean if a field has been set.
func (o *SuggestInfo) HasEsScore() bool {
	if o != nil && !IsNil(o.EsScore) {
		return true
	}

	return false
}

// SetEsScore gets a reference to the given float32 and assigns it to the EsScore field.
func (o *SuggestInfo) SetEsScore(v float32) {
	o.EsScore = &v
}

// GetEsPosition returns the EsPosition field value if set, zero value otherwise.
func (o *SuggestInfo) GetEsPosition() int32 {
	if o == nil || IsNil(o.EsPosition) {
		var ret int32
		return ret
	}
	return *o.EsPosition
}

// GetEsPositionOk returns a tuple with the EsPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetEsPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.EsPosition) {
		return nil, false
	}
	return o.EsPosition, true
}

// HasEsPosition returns a boolean if a field has been set.
func (o *SuggestInfo) HasEsPosition() bool {
	if o != nil && !IsNil(o.EsPosition) {
		return true
	}

	return false
}

// SetEsPosition gets a reference to the given int32 and assigns it to the EsPosition field.
func (o *SuggestInfo) SetEsPosition(v int32) {
	o.EsPosition = &v
}

// GetModelFeatureNames returns the ModelFeatureNames field value if set, zero value otherwise.
func (o *SuggestInfo) GetModelFeatureNames() string {
	if o == nil || IsNil(o.ModelFeatureNames) {
		var ret string
		return ret
	}
	return *o.ModelFeatureNames
}

// GetModelFeatureNamesOk returns a tuple with the ModelFeatureNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetModelFeatureNamesOk() (*string, bool) {
	if o == nil || IsNil(o.ModelFeatureNames) {
		return nil, false
	}
	return o.ModelFeatureNames, true
}

// HasModelFeatureNames returns a boolean if a field has been set.
func (o *SuggestInfo) HasModelFeatureNames() bool {
	if o != nil && !IsNil(o.ModelFeatureNames) {
		return true
	}

	return false
}

// SetModelFeatureNames gets a reference to the given string and assigns it to the ModelFeatureNames field.
func (o *SuggestInfo) SetModelFeatureNames(v string) {
	o.ModelFeatureNames = &v
}

// GetModelFeatureValues returns the ModelFeatureValues field value if set, zero value otherwise.
func (o *SuggestInfo) GetModelFeatureValues() string {
	if o == nil || IsNil(o.ModelFeatureValues) {
		var ret string
		return ret
	}
	return *o.ModelFeatureValues
}

// GetModelFeatureValuesOk returns a tuple with the ModelFeatureValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetModelFeatureValuesOk() (*string, bool) {
	if o == nil || IsNil(o.ModelFeatureValues) {
		return nil, false
	}
	return o.ModelFeatureValues, true
}

// HasModelFeatureValues returns a boolean if a field has been set.
func (o *SuggestInfo) HasModelFeatureValues() bool {
	if o != nil && !IsNil(o.ModelFeatureValues) {
		return true
	}

	return false
}

// SetModelFeatureValues gets a reference to the given string and assigns it to the ModelFeatureValues field.
func (o *SuggestInfo) SetModelFeatureValues(v string) {
	o.ModelFeatureValues = &v
}

// GetModelInfo returns the ModelInfo field value if set, zero value otherwise.
func (o *SuggestInfo) GetModelInfo() string {
	if o == nil || IsNil(o.ModelInfo) {
		var ret string
		return ret
	}
	return *o.ModelInfo
}

// GetModelInfoOk returns a tuple with the ModelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetModelInfoOk() (*string, bool) {
	if o == nil || IsNil(o.ModelInfo) {
		return nil, false
	}
	return o.ModelInfo, true
}

// HasModelInfo returns a boolean if a field has been set.
func (o *SuggestInfo) HasModelInfo() bool {
	if o != nil && !IsNil(o.ModelInfo) {
		return true
	}

	return false
}

// SetModelInfo gets a reference to the given string and assigns it to the ModelInfo field.
func (o *SuggestInfo) SetModelInfo(v string) {
	o.ModelInfo = &v
}

// GetUsedLogLines returns the UsedLogLines field value if set, zero value otherwise.
func (o *SuggestInfo) GetUsedLogLines() int32 {
	if o == nil || IsNil(o.UsedLogLines) {
		var ret int32
		return ret
	}
	return *o.UsedLogLines
}

// GetUsedLogLinesOk returns a tuple with the UsedLogLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetUsedLogLinesOk() (*int32, bool) {
	if o == nil || IsNil(o.UsedLogLines) {
		return nil, false
	}
	return o.UsedLogLines, true
}

// HasUsedLogLines returns a boolean if a field has been set.
func (o *SuggestInfo) HasUsedLogLines() bool {
	if o != nil && !IsNil(o.UsedLogLines) {
		return true
	}

	return false
}

// SetUsedLogLines gets a reference to the given int32 and assigns it to the UsedLogLines field.
func (o *SuggestInfo) SetUsedLogLines(v int32) {
	o.UsedLogLines = &v
}

// GetMinShouldMatch returns the MinShouldMatch field value if set, zero value otherwise.
func (o *SuggestInfo) GetMinShouldMatch() int32 {
	if o == nil || IsNil(o.MinShouldMatch) {
		var ret int32
		return ret
	}
	return *o.MinShouldMatch
}

// GetMinShouldMatchOk returns a tuple with the MinShouldMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetMinShouldMatchOk() (*int32, bool) {
	if o == nil || IsNil(o.MinShouldMatch) {
		return nil, false
	}
	return o.MinShouldMatch, true
}

// HasMinShouldMatch returns a boolean if a field has been set.
func (o *SuggestInfo) HasMinShouldMatch() bool {
	if o != nil && !IsNil(o.MinShouldMatch) {
		return true
	}

	return false
}

// SetMinShouldMatch gets a reference to the given int32 and assigns it to the MinShouldMatch field.
func (o *SuggestInfo) SetMinShouldMatch(v int32) {
	o.MinShouldMatch = &v
}

// GetProcessedTime returns the ProcessedTime field value if set, zero value otherwise.
func (o *SuggestInfo) GetProcessedTime() float32 {
	if o == nil || IsNil(o.ProcessedTime) {
		var ret float32
		return ret
	}
	return *o.ProcessedTime
}

// GetProcessedTimeOk returns a tuple with the ProcessedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetProcessedTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.ProcessedTime) {
		return nil, false
	}
	return o.ProcessedTime, true
}

// HasProcessedTime returns a boolean if a field has been set.
func (o *SuggestInfo) HasProcessedTime() bool {
	if o != nil && !IsNil(o.ProcessedTime) {
		return true
	}

	return false
}

// SetProcessedTime gets a reference to the given float32 and assigns it to the ProcessedTime field.
func (o *SuggestInfo) SetProcessedTime(v float32) {
	o.ProcessedTime = &v
}

// GetUserChoice returns the UserChoice field value if set, zero value otherwise.
func (o *SuggestInfo) GetUserChoice() int32 {
	if o == nil || IsNil(o.UserChoice) {
		var ret int32
		return ret
	}
	return *o.UserChoice
}

// GetUserChoiceOk returns a tuple with the UserChoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetUserChoiceOk() (*int32, bool) {
	if o == nil || IsNil(o.UserChoice) {
		return nil, false
	}
	return o.UserChoice, true
}

// HasUserChoice returns a boolean if a field has been set.
func (o *SuggestInfo) HasUserChoice() bool {
	if o != nil && !IsNil(o.UserChoice) {
		return true
	}

	return false
}

// SetUserChoice gets a reference to the given int32 and assigns it to the UserChoice field.
func (o *SuggestInfo) SetUserChoice(v int32) {
	o.UserChoice = &v
}

// GetMethodName returns the MethodName field value if set, zero value otherwise.
func (o *SuggestInfo) GetMethodName() string {
	if o == nil || IsNil(o.MethodName) {
		var ret string
		return ret
	}
	return *o.MethodName
}

// GetMethodNameOk returns a tuple with the MethodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetMethodNameOk() (*string, bool) {
	if o == nil || IsNil(o.MethodName) {
		return nil, false
	}
	return o.MethodName, true
}

// HasMethodName returns a boolean if a field has been set.
func (o *SuggestInfo) HasMethodName() bool {
	if o != nil && !IsNil(o.MethodName) {
		return true
	}

	return false
}

// SetMethodName gets a reference to the given string and assigns it to the MethodName field.
func (o *SuggestInfo) SetMethodName(v string) {
	o.MethodName = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *SuggestInfo) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId) {
		var ret int64
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestInfo) GetClusterIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *SuggestInfo) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given int64 and assigns it to the ClusterId field.
func (o *SuggestInfo) SetClusterId(v int64) {
	o.ClusterId = &v
}

func (o SuggestInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuggestInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.TestItem) {
		toSerialize["testItem"] = o.TestItem
	}
	if !IsNil(o.TestItemLogId) {
		toSerialize["testItemLogId"] = o.TestItemLogId
	}
	if !IsNil(o.LaunchId) {
		toSerialize["launchId"] = o.LaunchId
	}
	if !IsNil(o.LaunchName) {
		toSerialize["launchName"] = o.LaunchName
	}
	if !IsNil(o.LaunchNumber) {
		toSerialize["launchNumber"] = o.LaunchNumber
	}
	if !IsNil(o.IssueType) {
		toSerialize["issueType"] = o.IssueType
	}
	if !IsNil(o.RelevantItem) {
		toSerialize["relevantItem"] = o.RelevantItem
	}
	if !IsNil(o.RelevantLogId) {
		toSerialize["relevantLogId"] = o.RelevantLogId
	}
	if !IsNil(o.IsMergedLog) {
		toSerialize["isMergedLog"] = o.IsMergedLog
	}
	if !IsNil(o.MatchScore) {
		toSerialize["matchScore"] = o.MatchScore
	}
	if !IsNil(o.ResultPosition) {
		toSerialize["resultPosition"] = o.ResultPosition
	}
	if !IsNil(o.EsScore) {
		toSerialize["esScore"] = o.EsScore
	}
	if !IsNil(o.EsPosition) {
		toSerialize["esPosition"] = o.EsPosition
	}
	if !IsNil(o.ModelFeatureNames) {
		toSerialize["modelFeatureNames"] = o.ModelFeatureNames
	}
	if !IsNil(o.ModelFeatureValues) {
		toSerialize["modelFeatureValues"] = o.ModelFeatureValues
	}
	if !IsNil(o.ModelInfo) {
		toSerialize["modelInfo"] = o.ModelInfo
	}
	if !IsNil(o.UsedLogLines) {
		toSerialize["usedLogLines"] = o.UsedLogLines
	}
	if !IsNil(o.MinShouldMatch) {
		toSerialize["minShouldMatch"] = o.MinShouldMatch
	}
	if !IsNil(o.ProcessedTime) {
		toSerialize["processedTime"] = o.ProcessedTime
	}
	if !IsNil(o.UserChoice) {
		toSerialize["userChoice"] = o.UserChoice
	}
	if !IsNil(o.MethodName) {
		toSerialize["methodName"] = o.MethodName
	}
	if !IsNil(o.ClusterId) {
		toSerialize["clusterId"] = o.ClusterId
	}
	return toSerialize, nil
}

type NullableSuggestInfo struct {
	value *SuggestInfo
	isSet bool
}

func (v NullableSuggestInfo) Get() *SuggestInfo {
	return v.value
}

func (v *NullableSuggestInfo) Set(val *SuggestInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSuggestInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSuggestInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuggestInfo(val *SuggestInfo) *NullableSuggestInfo {
	return &NullableSuggestInfo{value: val, isSet: true}
}

func (v NullableSuggestInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuggestInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
