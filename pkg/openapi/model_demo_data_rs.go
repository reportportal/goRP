/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DemoDataRs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DemoDataRs{}

// DemoDataRs struct for DemoDataRs
type DemoDataRs struct {
	DashboardId *int64  `json:"dashboardId,omitempty"`
	LaunchIds   []int64 `json:"launchIds,omitempty"`
}

// NewDemoDataRs instantiates a new DemoDataRs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDemoDataRs() *DemoDataRs {
	this := DemoDataRs{}
	return &this
}

// NewDemoDataRsWithDefaults instantiates a new DemoDataRs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDemoDataRsWithDefaults() *DemoDataRs {
	this := DemoDataRs{}
	return &this
}

// GetDashboardId returns the DashboardId field value if set, zero value otherwise.
func (o *DemoDataRs) GetDashboardId() int64 {
	if o == nil || IsNil(o.DashboardId) {
		var ret int64
		return ret
	}
	return *o.DashboardId
}

// GetDashboardIdOk returns a tuple with the DashboardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemoDataRs) GetDashboardIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DashboardId) {
		return nil, false
	}
	return o.DashboardId, true
}

// HasDashboardId returns a boolean if a field has been set.
func (o *DemoDataRs) HasDashboardId() bool {
	if o != nil && !IsNil(o.DashboardId) {
		return true
	}

	return false
}

// SetDashboardId gets a reference to the given int64 and assigns it to the DashboardId field.
func (o *DemoDataRs) SetDashboardId(v int64) {
	o.DashboardId = &v
}

// GetLaunchIds returns the LaunchIds field value if set, zero value otherwise.
func (o *DemoDataRs) GetLaunchIds() []int64 {
	if o == nil || IsNil(o.LaunchIds) {
		var ret []int64
		return ret
	}
	return o.LaunchIds
}

// GetLaunchIdsOk returns a tuple with the LaunchIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemoDataRs) GetLaunchIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.LaunchIds) {
		return nil, false
	}
	return o.LaunchIds, true
}

// HasLaunchIds returns a boolean if a field has been set.
func (o *DemoDataRs) HasLaunchIds() bool {
	if o != nil && !IsNil(o.LaunchIds) {
		return true
	}

	return false
}

// SetLaunchIds gets a reference to the given []int64 and assigns it to the LaunchIds field.
func (o *DemoDataRs) SetLaunchIds(v []int64) {
	o.LaunchIds = v
}

func (o DemoDataRs) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DemoDataRs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DashboardId) {
		toSerialize["dashboardId"] = o.DashboardId
	}
	if !IsNil(o.LaunchIds) {
		toSerialize["launchIds"] = o.LaunchIds
	}
	return toSerialize, nil
}

type NullableDemoDataRs struct {
	value *DemoDataRs
	isSet bool
}

func (v NullableDemoDataRs) Get() *DemoDataRs {
	return v.value
}

func (v *NullableDemoDataRs) Set(val *DemoDataRs) {
	v.value = val
	v.isSet = true
}

func (v NullableDemoDataRs) IsSet() bool {
	return v.isSet
}

func (v *NullableDemoDataRs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDemoDataRs(val *DemoDataRs) *NullableDemoDataRs {
	return &NullableDemoDataRs{value: val, isSet: true}
}

func (v NullableDemoDataRs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDemoDataRs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
