openapi: 3.1.0
info:
  contact:
    email: support@reportportal.io
    name: Support
  description: ReportPortal API documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  title: ReportPortal
  version: develop-322
servers:
- url: /api
security:
- bearerAuth: []
tags:
- description: Activities API collection
  name: Activity
- description: Activity Events API collection
  name: Activity Event
- description: Bug Tracking Systems API collection
  name: Bug Tracking System
- description: Dashboards API collection
  name: Dashboard
- description: Demo data API collection
  name: Demo Data
- description: Files Storage API collection
  name: File Storage
- description: Group API collection
  name: Groups
- description: Integrations API collection
  name: Integration
- description: Launches API collection
  name: Launch
- description: Launches Async API collection
  name: Launch Async
- description: Logs API collection
  name: Log
- description: Logs Async API collection
  name: Log Async
- description: Onboardings API collection
  name: Onboarding
- description: Plugins API collection
  name: Plugin
- description: Plugins Public API collection
  name: Plugin Public
- description: Projects API collection
  name: Project
- description: Project Settings API collection
  name: Project Settings
- description: Generated project API collection
  name: Projects
- description: Settings API collection
  name: Settings
- description: Test Items API collection
  name: Test Item
- description: Test Items Async API collection
  name: Test Item Async
- description: Users API collection
  name: User
- description: User Filters API collection
  name: User Filter
- description: Widgets API collection
  name: Widget
paths:
  /v1/settings/analytics:
    post:
      operationId: saveAnalyticsSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsResource'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update analytics settings
      tags:
      - Settings
    put:
      operationId: saveAnalyticsSettings_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsResource'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update analytics settings
      tags:
      - Settings
  /v2/{projectName}/launch/{launchId}/finish:
    put:
      description: Finish launch for specified project
      operationId: finishLaunch
      parameters:
      - explode: false
        in: path
        name: launchId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishExecutionRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinishLaunchRS'
          description: OK
      summary: Finish Launch
      tags:
      - Launch Async
  /v2/{projectName}/item/{testItemId}:
    put:
      description: Finish test item
      operationId: finishTestItem
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: testItemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishTestItemRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Finish Test Item
      tags:
      - Test Item Async
  /v2/{projectName}/item/{testItemId}/:
    put:
      description: Finish test item
      operationId: finishTestItem_1
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: testItemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishTestItemRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Finish Test Item
      tags:
      - Test Item Async
  /v1/{projectName}/widget/{widgetId}:
    get:
      operationId: getWidget
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: widgetId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetResource'
          description: OK
      summary: Get widget by ID
      tags:
      - Widget
    put:
      operationId: updateWidget
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: widgetId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update specified widget
      tags:
      - Widget
  /v1/{projectName}/settings/sub-type:
    post:
      operationId: createProjectIssueSubType
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIssueSubTypeRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueSubTypeCreatedRS'
          description: Created
      summary: Creation of custom project specific issue sub-type
      tags:
      - Project Settings
    put:
      operationId: updateProjectIssueSubType
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueSubTypeRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update of custom project specific issue sub-type
      tags:
      - Project Settings
  /v1/{projectName}/settings/pattern/{id}:
    delete:
      operationId: deletePatternTemplate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete pattern template for items' log messages pattern analysis
      tags:
      - Project Settings
    put:
      operationId: updatePatternTemplate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePatternTemplateRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update pattern template for items' log messages pattern analysis
      tags:
      - Project Settings
  /v1/{projectName}/settings/notification:
    get:
      description: Only for users assigned to specified project
      operationId: getNotifications
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SenderCaseDTO'
                type: array
          description: OK
      summary: Returns notifications config of specified project
      tags:
      - Project Settings
    post:
      description: Only for users with PROJECT_MANAGER or ADMIN roles
      operationId: createNotification
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SenderCaseDTO'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
          description: Created
      summary: Creates notification for specified project
      tags:
      - Project Settings
    put:
      description: Only for users with PROJECT_MANAGER or ADMIN roles
      operationId: updateNotification
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SenderCaseDTO'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: Created
      summary: Updates notification for specified project
      tags:
      - Project Settings
  /v1/{projectName}/launch/{launchId}/update:
    put:
      operationId: updateLaunch
      parameters:
      - explode: false
        in: path
        name: launchId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLaunchRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Updates launch for specified project
      tags:
      - Launch
  /v1/{projectName}/launch/{launchId}/stop:
    put:
      operationId: forceFinishLaunch
      parameters:
      - explode: false
        in: path
        name: launchId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishExecutionRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Force finish launch for specified project
      tags:
      - Launch
  /v1/{projectName}/launch/{launchId}/finish:
    put:
      operationId: finishLaunch_1
      parameters:
      - explode: false
        in: path
        name: launchId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishExecutionRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinishLaunchRS'
          description: OK
      summary: Finish launch for specified project
      tags:
      - Launch
  /v1/{projectName}/launch/update:
    put:
      operationId: updateLaunches
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRQLongUpdateLaunchRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
                type: array
          description: OK
      summary: Updates launches for specified project
      tags:
      - Launch
  /v1/{projectName}/launch/stop:
    put:
      operationId: bulkForceFinish
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRQLongFinishExecutionRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
                type: array
          description: OK
      summary: Force finish launch
      tags:
      - Launch
  /v1/{projectName}/launch/info:
    put:
      operationId: bulkUpdate
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkInfoUpdateRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Bulk update attributes and description
      tags:
      - Launch
  /v1/{projectName}/item:
    delete:
      operationId: deleteTestItems
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
                type: array
          description: OK
      summary: Delete test items by specified ids
      tags:
      - Test Item
    get:
      operationId: getTestItems
      parameters:
      - explode: true
        in: query
        name: filterId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: isLatest
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: launchesLimit
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'uuid'
        explode: true
        in: query
        name: filter.eq.uuid
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'attributeValue'
        explode: true
        in: query
        name: filter.eq.attributeValue
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'levelAttribute'
        explode: true
        in: query
        name: filter.eq.levelAttribute
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'status'
        explode: true
        in: query
        name: filter.eq.status
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'startTime'
        explode: true
        in: query
        name: filter.eq.startTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'issueType'
        explode: true
        in: query
        name: filter.eq.issueType
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'clusterId'
        explode: true
        in: query
        name: filter.eq.clusterId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'path'
        explode: true
        in: query
        name: filter.eq.path
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'issueGroupId'
        explode: true
        in: query
        name: filter.eq.issueGroupId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'hasRetries'
        explode: true
        in: query
        name: filter.eq.hasRetries
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'issueTypeId'
        explode: true
        in: query
        name: filter.eq.issueTypeId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'value'
        explode: true
        in: query
        name: filter.eq.value
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'duration'
        explode: true
        in: query
        name: filter.eq.duration
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'compositeAttribute'
        explode: true
        in: query
        name: filter.has.compositeAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'endTime'
        explode: true
        in: query
        name: filter.eq.endTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'statistics$executions$passed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$passed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'autoAnalyzed'
        explode: true
        in: query
        name: filter.eq.autoAnalyzed
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'locator'
        explode: true
        in: query
        name: filter.eq.locator
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'description'
        explode: true
        in: query
        name: filter.eq.description
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$executions$failed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$failed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'testCaseHash'
        explode: true
        in: query
        name: filter.eq.testCaseHash
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$system_issue$si001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$system_issue$si001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'hasStats'
        explode: true
        in: query
        name: filter.eq.hasStats
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'statistics$executions$total'
        explode: true
        in: query
        name: filter.eq.statistics$executions$total
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$executions$skipped'
        explode: true
        in: query
        name: filter.eq.statistics$executions$skipped
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'lastModified'
        explode: true
        in: query
        name: filter.eq.lastModified
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$defects$product_bug$pb001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$product_bug$pb001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$automation_bug$ab001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$automation_bug$ab001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'type'
        explode: true
        in: query
        name: filter.eq.type
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'issueId'
        explode: true
        in: query
        name: filter.eq.issueId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'mode'
        explode: true
        in: query
        name: filter.eq.mode
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'testCaseId'
        explode: true
        in: query
        name: filter.eq.testCaseId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'uniqueId'
        explode: true
        in: query
        name: filter.eq.uniqueId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'compositeSystemAttribute'
        explode: true
        in: query
        name: filter.has.compositeSystemAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'issueComment'
        explode: true
        in: query
        name: filter.eq.issueComment
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'ignoreAnalyzer'
        explode: true
        in: query
        name: filter.eq.ignoreAnalyzer
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'launchId'
        explode: true
        in: query
        name: filter.eq.launchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$no_defect$nd001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$no_defect$nd001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'hasChildren'
        explode: true
        in: query
        name: filter.eq.hasChildren
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'patternName'
        explode: true
        in: query
        name: filter.eq.patternName
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'retryParentId'
        explode: true
        in: query
        name: filter.eq.retryParentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'ticketId'
        explode: true
        in: query
        name: filter.eq.ticketId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'attributeKey'
        explode: true
        in: query
        name: filter.eq.attributeKey
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'key'
        explode: true
        in: query
        name: filter.eq.key
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'parentId'
        explode: true
        in: query
        name: filter.eq.parentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$to_investigate$ti001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$to_investigate$ti001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTestItemResource'
          description: OK
      summary: Find test items by specified filter
      tags:
      - Test Item
    post:
      operationId: startRootItem
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
          description: Created
      summary: Start a root test item
      tags:
      - Test Item
    put:
      operationId: defineTestItemIssueType
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefineIssueRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Issue'
                type: array
          description: OK
      summary: Update issues of specified test items
      tags:
      - Test Item
  /v1/{projectName}/item/{testItemId}:
    put:
      operationId: finishTestItem_2
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: testItemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishTestItemRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Finish test item
      tags:
      - Test Item
  /v1/{projectName}/item/{testItemId}/:
    put:
      operationId: finishTestItem_3
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: testItemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishTestItemRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Finish test item
      tags:
      - Test Item
  /v1/{projectName}/item/{itemId}/update:
    put:
      operationId: updateTestItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTestItemRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update test item
      tags:
      - Test Item
  /v1/{projectName}/item/suggest/choice:
    put:
      operationId: handleSuggestChoose
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SuggestInfo'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Handle user choice from suggested items
      tags:
      - Test Item
  /v1/{projectName}/item/issue/unlink:
    put:
      operationId: unlinkExternalIssues
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnlinkExternalIssueRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
                type: array
          description: OK
      summary: Unlink external issue for specified test items
      tags:
      - Test Item
  /v1/{projectName}/item/issue/link:
    put:
      operationId: linkExternalIssues
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkExternalIssueRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
                type: array
          description: OK
      summary: Attach external issue for specified test items
      tags:
      - Test Item
  /v1/{projectName}/item/info:
    put:
      operationId: bulkUpdate_1
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkInfoUpdateRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Bulk update attributes and description
      tags:
      - Test Item
  /v1/{projectName}/filter:
    get:
      operationId: getAllFilters
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'owner'
        explode: true
        in: query
        name: filter.eq.owner
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageUserFilterResource'
          description: OK
      summary: Get filters
      tags:
      - User Filter
    post:
      operationId: createFilter
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserFilterRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
          description: Created
      summary: Create user filter
      tags:
      - User Filter
    put:
      operationId: updateUserFilters
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionsRQBulkUpdateFilterRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
                type: array
          description: OK
      summary: Update list of user filters
      tags:
      - User Filter
  /v1/{projectName}/filter/{filterId}:
    delete:
      operationId: deleteFilter
      parameters:
      - explode: false
        in: path
        name: filterId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete specified user filter by id
      tags:
      - User Filter
    get:
      operationId: getFilter
      parameters:
      - explode: false
        in: path
        name: filterId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFilterResource'
          description: OK
      summary: Get specified user filter by id
      tags:
      - User Filter
    put:
      operationId: updateUserFilter
      parameters:
      - explode: false
        in: path
        name: filterId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserFilterRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update specified user filter
      tags:
      - User Filter
  /v1/{projectName}/dashboard/{dashboardId}:
    delete:
      operationId: deleteDashboard
      parameters:
      - explode: false
        in: path
        name: dashboardId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete specified dashboard by ID for specified project
      tags:
      - Dashboard
    get:
      operationId: getDashboard
      parameters:
      - explode: false
        in: path
        name: dashboardId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardResource'
          description: OK
      summary: Get specified dashboard by ID for specified project
      tags:
      - Dashboard
    put:
      operationId: updateDashboard
      parameters:
      - explode: false
        in: path
        name: dashboardId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDashboardRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update specified dashboard for specified project
      tags:
      - Dashboard
  /v1/{projectName}/dashboard/{dashboardId}/add:
    put:
      operationId: addWidget
      parameters:
      - explode: false
        in: path
        name: dashboardId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWidgetRq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Add widget to specified dashboard
      tags:
      - Dashboard
  /v1/settings:
    get:
      operationId: getServerSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
          description: OK
      summary: Get server settings
      tags:
      - Settings
    put:
      operationId: updateServerSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingsRq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update server settings with specified key
      tags:
      - Settings
  /v1/project/{projectName}:
    get:
      description: Only for users that are assigned to the project
      operationId: getProject
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResource'
          description: OK
      summary: Get information about project
      tags:
      - Project
    put:
      operationId: updateProject
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update project
      tags:
      - Project
  /v1/project/{projectName}/unassign:
    put:
      operationId: unassignProjectUsers
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnassignUsersRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Unassign users
      tags:
      - Project
  /v1/project/{projectName}/preference/{filterId}:
    delete:
      description: Only for logged-in user
      operationId: removeUserPreference
      parameters:
      - explode: false
        in: path
        name: filterId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete logged-in user preferences
      tags:
      - Project
    put:
      description: Only for logged-in user
      operationId: addUserPreference
      parameters:
      - explode: false
        in: path
        name: filterId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Edit logged-in user preferences
      tags:
      - Project
  /v1/project/{projectName}/notification:
    put:
      operationId: updateProjectNotificationConfig
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectNotificationConfigDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update project notifications configuration
      tags:
      - Project
  /v1/project/{projectName}/index:
    delete:
      operationId: deleteProjectIndex
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete project index from ML
      tags:
      - Project
    put:
      operationId: indexProjectData
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Starts reindex all project data in ML
      tags:
      - Project
  /v1/project/{projectName}/assign:
    put:
      operationId: assignProjectUsers
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignUsersRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Assign users
      tags:
      - Project
  /v1/plugin/{projectName}/{pluginName}/common/{command}:
    put:
      operationId: executePluginCommand
      parameters:
      - explode: false
        in: path
        name: command
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pluginName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: {}
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      summary: Execute command to the plugin instance
      tags:
      - Plugin
  /v1/plugin/{pluginId}:
    delete:
      operationId: deletePlugin
      parameters:
      - explode: false
        in: path
        name: pluginId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete plugin by id
      tags:
      - Plugin
    put:
      operationId: updatePluginState
      parameters:
      - explode: false
        in: path
        name: pluginId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePluginStateRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update ReportPortal plugin state
      tags:
      - Plugin
  /v1/plugin/public/{pluginName}/{command}:
    put:
      operationId: executePublicPluginCommand
      parameters:
      - explode: false
        in: path
        name: command
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pluginName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      summary: Execute public command without authentication
      tags:
      - Plugin Public
  /v1/integration/{projectName}/{integrationId}:
    delete:
      operationId: deleteProjectIntegration
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete project integration instance
      tags:
      - Integration
    get:
      operationId: getProjectIntegration
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationResource'
          description: OK
      summary: Get integration instance
      tags:
      - Integration
    put:
      operationId: updateProjectIntegration
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update project integration instance
      tags:
      - Integration
  /v1/integration/{projectName}/{integrationId}/{command}:
    put:
      operationId: executeIntegrationCommand
      parameters:
      - explode: false
        in: path
        name: command
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      summary: Execute command to the integration instance
      tags:
      - Integration
  /v1/integration/{integrationId}:
    delete:
      operationId: deleteGlobalIntegration
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete global integration instance
      tags:
      - Integration
    get:
      operationId: getGlobalIntegration
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationResource'
          description: OK
      summary: Get global ReportPortal integration instance
      tags:
      - Integration
    put:
      operationId: updateGlobalIntegration
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Update global ReportPortal integration instance
      tags:
      - Integration
  /users/{login}:
    get:
      description: Only for administrators and profile's owner
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: login
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResource'
          description: OK
      summary: Return information about specified user
      tags:
      - User
    put:
      description: Only for administrators and profile's owner
      operationId: editUser
      parameters:
      - explode: false
        in: path
        name: login
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUserRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Edit specified user
      tags:
      - User
  /projects/{project_name}/groups/{group_id}:
    delete:
      description: "Delete group from project by id.  ### Authority  - `ADMINISTRATOR`\
        \ - `PROJECT MANAGER`"
      operationId: deleteGroupFromProjectById
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - description: Project name.
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Delete group from project by id
      tags:
      - Projects
    get:
      description: "Get group by id from project.  ### Authority  - `ADMINISTRATOR`\
        \ - `PROJECT MANAGER`"
      operationId: getProjectGroupById
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - description: Project name.
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroupInfo'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProjectGroupInfo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Get group by id
      tags:
      - Projects
    put:
      description: "Add or update group to project with permission.  ### Authority\
        \  - `ADMINISTRATOR` - `PROJECT MANAGER`"
      operationId: addGroupToProjectById
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - description: Project name.
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProjectToGroupByIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulUpdate'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/SuccessfulUpdate'
          description: Successful update response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Add or update group to project
      tags:
      - Projects
  /groups/{group_id}:
    delete:
      description: "Delete a group by ID.  ### Authority  - `ADMINISTRATOR`"
      operationId: deleteGroup
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Delete group
      tags:
      - Groups
    get:
      description: "Get a group by ID.  ### Authority  - `ADMINISTRATOR`"
      operationId: getGroupById
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInfo'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GroupInfo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Get group
      tags:
      - Groups
    put:
      description: "Update a group by ID.  ### Authority  - `ADMINISTRATOR`"
      operationId: updateGroup
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulUpdate'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/SuccessfulUpdate'
          description: Successful update response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Update group
      tags:
      - Groups
  /groups/{group_id}/users/{user_id}:
    delete:
      description: "Delete a user from a group.  ### Authority  - `ADMINISTRATOR`"
      operationId: deleteUserFromGroupById
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - description: User identifier.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Delete group user
      tags:
      - Groups
    get:
      description: "Get all users of group.  ### Authority  - `ADMINISTRATOR`"
      operationId: getGroupUserById
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - description: User identifier.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserInfo'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GroupUserInfo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Get group user
      tags:
      - Groups
    put:
      description: "Add user into group.  ### Authority  - `ADMINISTRATOR`"
      operationId: addUserToGroupById
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - description: User identifier.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulUpdate'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/SuccessfulUpdate'
          description: Successful update response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Add group user
      tags:
      - Groups
  /groups/{group_id}/projects/{project_id}:
    delete:
      description: "Delete project from group.  ### Authority  - `ADMINISTRATOR`"
      operationId: deleteProjectFromGroupById
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - description: Project identifier.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Delete group project
      tags:
      - Groups
    get:
      description: "Get project of group.  ### Authority  - `ADMINISTRATOR`"
      operationId: getGroupProjectById
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - description: Project identifier.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProjectInfo'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GroupProjectInfo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Get group project
      tags:
      - Groups
    put:
      description: "Add or update project in group.  ### Authority  - `ADMINISTRATOR`"
      operationId: addProjectToGroupById
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - description: Project identifier.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProjectToGroupByIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulUpdate'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/SuccessfulUpdate'
          description: Successful update response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Add or update group project
      tags:
      - Groups
  /v2/{projectName}/log:
    post:
      description: Create log (batching operation)
      operationId: createLog
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createLog_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSaveOperatingRS'
          description: OK
      summary: Create Log
      tags:
      - Log Async
  /v2/{projectName}/log/entry:
    post:
      description: Create log
      operationId: createLogEntry
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveLogRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
          description: Created
      summary: Create Log Entry
      tags:
      - Log Async
  /v2/{projectName}/launch:
    post:
      operationId: startLaunch
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartLaunchRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartLaunchRS'
          description: Created
      summary: Starts launch for specified project
      tags:
      - Launch Async
  /v2/{projectName}/launch/merge:
    post:
      description: This operation merges a set of launches into a common one. The
        IDs of the launches to be merged should be provided in the 'launches' field
        of the request body.
      operationId: mergeLaunchesOldUuid
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeLaunchesRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchResourceOld'
            application/x.reportportal.launch.v2+json:
              schema:
                $ref: '#/components/schemas/LaunchResource'
          description: "Successful response with dates in timestamp format. Response\
            \ with dates in ISO-8601 format if the custom header 'Accept: application/x.reportportal.launch.v2+json'\
            \ is used."
      summary: Merge set of specified launches in common one
      tags:
      - Launch Async
  /v2/{projectName}/item/{parentItem}:
    post:
      description: Start a child test item
      operationId: startChildItem
      parameters:
      - explode: false
        in: path
        name: parentItem
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
          description: Created
      summary: Start Child Item
      tags:
      - Test Item Async
  /v2/{projectName}/item/{parentItem}/:
    post:
      description: Start a child test item
      operationId: startChildItem_1
      parameters:
      - explode: false
        in: path
        name: parentItem
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
          description: Created
      summary: Start Child Item
      tags:
      - Test Item Async
  /v2/{projectName}/item:
    post:
      description: Start a root test item
      operationId: startRootItem_1
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
          description: Created
      summary: Start Root Item
      tags:
      - Test Item Async
  /v2/{projectName}/item/:
    post:
      description: Start a root test item
      operationId: startRootItem_2
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
          description: Created
      summary: Start Root Item
      tags:
      - Test Item Async
  /v1/{projectName}/widget:
    post:
      operationId: createWidget
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
          description: Created
      summary: Create a new widget
      tags:
      - Widget
  /v1/{projectName}/widget/preview:
    post:
      operationId: getWidgetPreview
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetPreviewRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
          description: OK
      summary: Get widget preview
      tags:
      - Widget
  /v1/{projectName}/settings/pattern:
    post:
      operationId: createPatternTemplate
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatternTemplateRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
          description: Created
      summary: Create pattern template for items' log messages pattern analysis
      tags:
      - Project Settings
  /v1/{projectName}/log:
    get:
      operationId: getLogs
      parameters:
      - explode: true
        in: query
        name: filter.under.path
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'item'
        explode: true
        in: query
        name: filter.eq.item
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'level'
        explode: true
        in: query
        name: filter.eq.level
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'message'
        explode: true
        in: query
        name: filter.eq.message
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'path'
        explode: true
        in: query
        name: filter.eq.path
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'autoAnalyzed'
        explode: true
        in: query
        name: filter.eq.autoAnalyzed
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'launchId'
        explode: true
        in: query
        name: filter.eq.launchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'launch'
        explode: true
        in: query
        name: filter.eq.launch
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'status'
        explode: true
        in: query
        name: filter.eq.status
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'retryParentId'
        explode: true
        in: query
        name: filter.eq.retryParentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'logId'
        explode: true
        in: query
        name: filter.eq.logId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'lastModified'
        explode: true
        in: query
        name: filter.eq.lastModified
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'binaryContent'
        explode: true
        in: query
        name: filter.eq.binaryContent
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'logTime'
        explode: true
        in: query
        name: filter.eq.logTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'retryParentLaunchId'
        explode: true
        in: query
        name: filter.eq.retryParentLaunchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageLogResource'
          description: OK
      summary: Get logs by filter
      tags:
      - Log
    post:
      operationId: createLog_1
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createLog_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSaveOperatingRS'
          description: OK
      summary: Create log (batching operation)
      tags:
      - Log
  /v1/{projectName}/log/under:
    post:
      operationId: getLogsUnder
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLogsUnderRq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/LogResource'
          description: OK
      summary: Get logs under items
      tags:
      - Log
  /v1/{projectName}/log/search/{itemId}:
    post:
      operationId: searchLogs
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchLogRq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchLogRs'
                type: array
          description: OK
      summary: Search test items with similar error logs
      tags:
      - Log
  /v1/{projectName}/log/entry:
    post:
      operationId: createLogEntry_1
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveLogRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
          description: Created
      summary: Create log
      tags:
      - Log
  /v1/{projectName}/launch:
    delete:
      operationId: deleteLaunches
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBulkRS'
          description: OK
      summary: Delete specified launches by ids
      tags:
      - Launch
    get:
      operationId: getProjectLaunches
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'statistics$defects$product_bug$pb001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$product_bug$pb001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'uuid'
        explode: true
        in: query
        name: filter.eq.uuid
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$automation_bug$ab001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$automation_bug$ab001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'attributeKey'
        explode: true
        in: query
        name: filter.eq.attributeKey
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'userId'
        explode: true
        in: query
        name: filter.eq.userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'status'
        explode: true
        in: query
        name: filter.eq.status
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'startTime'
        explode: true
        in: query
        name: filter.eq.startTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'mode'
        explode: true
        in: query
        name: filter.eq.mode
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'hasRetries'
        explode: true
        in: query
        name: filter.eq.hasRetries
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'number'
        explode: true
        in: query
        name: filter.eq.number
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'lastModified'
        explode: true
        in: query
        name: filter.eq.lastModified
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'compositeAttribute'
        explode: true
        in: query
        name: filter.has.compositeAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'endTime'
        explode: true
        in: query
        name: filter.eq.endTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'statistics$executions$passed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$passed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$defects$no_defect$nd001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$no_defect$nd001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'description'
        explode: true
        in: query
        name: filter.eq.description
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'user'
        explode: true
        in: query
        name: filter.eq.user
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$executions$failed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$failed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$system_issue$si001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$system_issue$si001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'attributeValue'
        explode: true
        in: query
        name: filter.eq.attributeValue
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$executions$total'
        explode: true
        in: query
        name: filter.eq.statistics$executions$total
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$executions$skipped'
        explode: true
        in: query
        name: filter.eq.statistics$executions$skipped
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$to_investigate$ti001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$to_investigate$ti001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageLaunchResource'
          description: OK
      summary: Get list of project launches by filter
      tags:
      - Launch
    post:
      operationId: startLaunch_1
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartLaunchRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartLaunchRS'
          description: Created
      summary: Starts launch for specified project
      tags:
      - Launch
  /v1/{projectName}/launch/merge:
    post:
      description: This operation merges a set of launches into a common one. The
        IDs of the launches to be merged should be provided in the 'launches' field
        of the request body.
      operationId: mergeLaunchesOldUuid_1
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeLaunchesRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchResourceOld'
            application/x.reportportal.launch.v2+json:
              schema:
                $ref: '#/components/schemas/LaunchResource'
          description: "Successful response with dates in timestamp format. Response\
            \ with dates in ISO-8601 format if the custom header 'Accept: application/x.reportportal.launch.v2+json'\
            \ is used."
      summary: Merge set of specified launches in common one
      tags:
      - Launch
  /v1/{projectName}/launch/cluster:
    post:
      operationId: createClusters
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClustersRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Create launch clusters
      tags:
      - Launch
  /v1/{projectName}/launch/analyze:
    post:
      operationId: startLaunchAnalyzer
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeLaunchRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Start launch auto-analyzer on demand
      tags:
      - Launch
  /v1/{projectName}/item/{parentItem}:
    post:
      operationId: startChildItem_2
      parameters:
      - explode: false
        in: path
        name: parentItem
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
          description: Created
      summary: Start a child test item
      tags:
      - Test Item
  /v1/{projectName}/item/{parentItem}/:
    post:
      operationId: startChildItem_3
      parameters:
      - explode: false
        in: path
        name: parentItem
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
          description: Created
      summary: Start a child test item
      tags:
      - Test Item
  /v1/{projectName}/item/:
    post:
      operationId: startRootItem_3
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
          description: Created
      summary: Start a root test item
      tags:
      - Test Item
  /v1/{projectName}/dashboard:
    get:
      operationId: getAllDashboards
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'creationDate'
        explode: true
        in: query
        name: filter.eq.creationDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'owner'
        explode: true
        in: query
        name: filter.eq.owner
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDashboardResource'
          description: OK
      summary: Get all permitted dashboard resources for specified project
      tags:
      - Dashboard
    post:
      operationId: createDashboard
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDashboardRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
          description: Created
      summary: Create dashboard for specified project
      tags:
      - Dashboard
  /v1/{projectName}/dashboard/preconfigured:
    post:
      operationId: createPreconfigured
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardPreconfiguredRq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
          description: OK
      summary: Create Dashboard with provided configuration including its widgets
        and filters if any
      tags:
      - Dashboard
  /v1/project:
    delete:
      description: Could be deleted only by users with administrator role
      operationId: deleteProject
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBulkRS'
          description: OK
      summary: Delete multiple projects
      tags:
      - Project
    post:
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
          description: Created
      summary: Create new project
      tags:
      - Project
  /v1/plugin:
    get:
      operationId: getPlugins
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IntegrationTypeResource'
                type: array
          description: OK
      summary: Get all available plugins
      tags:
      - Plugin
    post:
      operationId: uploadPlugin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadPlugin_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
          description: Created
      summary: Upload new ReportPortal plugin
      tags:
      - Plugin
  /v1/plugin/{projectName}/{pluginName}/import:
    post:
      operationId: executeImportPluginCommand
      parameters:
      - explode: false
        in: path
        name: pluginName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/executeImportPluginCommand_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      summary: Send report to the specified plugin for importing
      tags:
      - Plugin
  /v1/integration/{projectName}/{pluginName}:
    post:
      operationId: createProjectIntegration
      parameters:
      - explode: false
        in: path
        name: pluginName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
          description: Created
      summary: Create project ReportPortal integration instance
      tags:
      - Integration
  /v1/integration/{pluginName}:
    post:
      operationId: createGlobalIntegration
      parameters:
      - explode: false
        in: path
        name: pluginName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
          description: Created
      summary: Create global ReportPortal integration instance
      tags:
      - Integration
  /v1/demo/{projectName}/generate:
    post:
      operationId: generate
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoDataRq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoDataRs'
          description: OK
      summary: generate
      tags:
      - Demo Data
  /v1/data/photo:
    delete:
      operationId: deletePhoto
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete user's photo
      tags:
      - File Storage
    get:
      operationId: getMyPhoto
      parameters:
      - explode: true
        in: query
        name: loadThumbnail
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          description: OK
      summary: Get photo of current user
      tags:
      - File Storage
    post:
      operationId: uploadPhoto
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadPlugin_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Upload user's photo
      tags:
      - File Storage
  /v1/data/clean:
    post:
      operationId: removeAttachmentsByCsv
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadPlugin_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Remove attachments from file storage according to uploaded csv file
      tags:
      - File Storage
  /v1/bts/{projectName}/{integrationId}/ticket:
    post:
      operationId: createIssue
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTicketRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: Created
      summary: Post ticket to the bts integration
      tags:
      - Bug Tracking System
  /v1/activities/searches:
    post:
      operationId: getActivities
      parameters:
      - explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          maximum: 300
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: order
        required: true
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCriteriaRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResponseActivityEventResource'
          description: OK
      summary: Get activities by search criteria
      tags:
      - Activity Event
  /users:
    delete:
      operationId: deleteUsers
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBulkRS'
          description: OK
      summary: Delete specified users by ids
      tags:
      - User
    get:
      operationId: getMyself
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResource'
          description: OK
      summary: Return information about current logged-in user
      tags:
      - User
    post:
      description: Allowable only for users with administrator role
      operationId: createUserByAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRQFull'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserRS'
          description: Created
      summary: Create specified user
      tags:
      - User
  /users/{userId}/api-keys:
    get:
      operationId: getUsersApiKeys
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysRS'
          description: OK
      summary: Get List of users Api Keys
      tags:
      - User
    post:
      operationId: createApiKey
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyRS'
          description: Created
      summary: Create new Api Key for current user
      tags:
      - User
  /users/registration:
    get:
      operationId: getUserBidInfo
      parameters:
      - explode: true
        in: query
        name: uuid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBidRS'
          description: OK
      summary: Get User Bid Info
      tags:
      - User
    post:
      operationId: createUser
      parameters:
      - explode: true
        in: query
        name: uuid
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRQConfirm'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserRS'
          description: Created
      summary: Activate invitation and create user in system
      tags:
      - User
  /users/password/restore:
    post:
      operationId: restorePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePasswordRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Create a restore password request
      tags:
      - User
  /users/password/reset:
    post:
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Reset password
      tags:
      - User
  /users/password/change:
    post:
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRQ'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Change own password
      tags:
      - User
  /users/bid:
    post:
      operationId: createUserBid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRQ'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserBidRS'
          description: Created
      summary: Register invitation for user who will be created
      tags:
      - User
  /groups:
    get:
      description: "Get instance groups with optional filtering and sorting.  ###\
        \ Authority  - `ADMINISTRATOR`"
      operationId: getGroups
      parameters:
      - description: The limit used for this page of results. This will be the same
          as the limit query parameter unless it exceeded the maximum value allowed
          for this API endpoint.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 300
          format: int32
          maximum: 1000
          minimum: 0
          type: integer
        style: form
      - description: The offset used for this page of results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Indicate sorting direction.
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: ASC
          type: string
        style: form
      - description: Indicate sort by field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPage'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GroupPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Get all groups
      tags:
      - Groups
    post:
      description: "Create a group.  ### Authority  - `ADMINISTRATOR`"
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInfo'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GroupInfo'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Create a group
      tags:
      - Groups
  /v1/{projectName}/widget/names/all:
    get:
      operationId: getWidgetNames
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'description'
        explode: true
        in: query
        name: filter.eq.description
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'owner'
        explode: true
        in: query
        name: filter.eq.owner
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageObject'
          description: OK
      summary: Load all widget names which belong to a user
      tags:
      - Widget
  /v1/{projectName}/widget/multilevel/{widgetId}:
    get:
      operationId: getWidget_1
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: params
        required: true
        schema:
          $ref: '#/components/schemas/MultiValueMapStringString'
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: widgetId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetResource'
          description: OK
      summary: Get multilevel widget by ID
      tags:
      - Widget
  /v1/{projectName}/settings:
    get:
      description: Only for users that are assigned to the project
      operationId: getProjectSettings
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSettingsResource'
          description: OK
      summary: Get project specific issue sub-types
      tags:
      - Project Settings
  /v1/{projectName}/log/{logId}:
    delete:
      operationId: deleteLog
      parameters:
      - explode: false
        in: path
        name: logId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete log
      tags:
      - Log
    get:
      operationId: getLog
      parameters:
      - explode: false
        in: path
        name: logId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResource'
          description: OK
      summary: Get log by ID
      tags:
      - Log
  /v1/{projectName}/log/{logId}/page:
    get:
      operationId: getPageNumber
      parameters:
      - explode: false
        in: path
        name: logId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'item'
        explode: true
        in: query
        name: filter.eq.item
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'level'
        explode: true
        in: query
        name: filter.eq.level
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'message'
        explode: true
        in: query
        name: filter.eq.message
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'path'
        explode: true
        in: query
        name: filter.eq.path
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'autoAnalyzed'
        explode: true
        in: query
        name: filter.eq.autoAnalyzed
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'launchId'
        explode: true
        in: query
        name: filter.eq.launchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'launch'
        explode: true
        in: query
        name: filter.eq.launch
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'status'
        explode: true
        in: query
        name: filter.eq.status
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'retryParentId'
        explode: true
        in: query
        name: filter.eq.retryParentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'logId'
        explode: true
        in: query
        name: filter.eq.logId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'lastModified'
        explode: true
        in: query
        name: filter.eq.lastModified
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'binaryContent'
        explode: true
        in: query
        name: filter.eq.binaryContent
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'logTime'
        explode: true
        in: query
        name: filter.eq.logTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'retryParentLaunchId'
        explode: true
        in: query
        name: filter.eq.retryParentLaunchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
          description: OK
      summary: Get logs by filter
      tags:
      - Log
  /v1/{projectName}/log/uuid/{logId}:
    get:
      deprecated: true
      operationId: getLogByUuid
      parameters:
      - explode: false
        in: path
        name: logId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResource'
          description: OK
      summary: Get log by UUID (Will be removed in version 6.0)
      tags:
      - Log
  /v1/{projectName}/log/nested/{parentId}:
    get:
      operationId: getNestedItems
      parameters:
      - explode: true
        in: query
        name: params
        required: true
        schema:
          additionalProperties:
            type: string
        style: form
      - explode: false
        in: path
        name: parentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'item'
        explode: true
        in: query
        name: filter.eq.item
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'level'
        explode: true
        in: query
        name: filter.eq.level
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'message'
        explode: true
        in: query
        name: filter.eq.message
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'path'
        explode: true
        in: query
        name: filter.eq.path
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'autoAnalyzed'
        explode: true
        in: query
        name: filter.eq.autoAnalyzed
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'launchId'
        explode: true
        in: query
        name: filter.eq.launchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'launch'
        explode: true
        in: query
        name: filter.eq.launch
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'status'
        explode: true
        in: query
        name: filter.eq.status
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'retryParentId'
        explode: true
        in: query
        name: filter.eq.retryParentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'logId'
        explode: true
        in: query
        name: filter.eq.logId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'lastModified'
        explode: true
        in: query
        name: filter.eq.lastModified
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'binaryContent'
        explode: true
        in: query
        name: filter.eq.binaryContent
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'logTime'
        explode: true
        in: query
        name: filter.eq.logTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'retryParentLaunchId'
        explode: true
        in: query
        name: filter.eq.retryParentLaunchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageObject'
          description: OK
      summary: Get nested steps with logs for the parent Test Item
      tags:
      - Log
  /v1/{projectName}/log/locations/{parentId}:
    get:
      operationId: getErrorPage
      parameters:
      - explode: true
        in: query
        name: params
        required: true
        schema:
          additionalProperties:
            type: string
        style: form
      - explode: false
        in: path
        name: parentId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'item'
        explode: true
        in: query
        name: filter.eq.item
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'level'
        explode: true
        in: query
        name: filter.eq.level
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'message'
        explode: true
        in: query
        name: filter.eq.message
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'path'
        explode: true
        in: query
        name: filter.eq.path
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'autoAnalyzed'
        explode: true
        in: query
        name: filter.eq.autoAnalyzed
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'launchId'
        explode: true
        in: query
        name: filter.eq.launchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'launch'
        explode: true
        in: query
        name: filter.eq.launch
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'status'
        explode: true
        in: query
        name: filter.eq.status
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'retryParentId'
        explode: true
        in: query
        name: filter.eq.retryParentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'logId'
        explode: true
        in: query
        name: filter.eq.logId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'lastModified'
        explode: true
        in: query
        name: filter.eq.lastModified
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'binaryContent'
        explode: true
        in: query
        name: filter.eq.binaryContent
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'logTime'
        explode: true
        in: query
        name: filter.eq.logTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'retryParentLaunchId'
        explode: true
        in: query
        name: filter.eq.retryParentLaunchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PagedLogResource'
                type: array
          description: OK
      summary: Get next or previous log in test item
      tags:
      - Log
  /v1/{projectName}/launch/{launchId}:
    delete:
      operationId: deleteLaunch
      parameters:
      - explode: false
        in: path
        name: launchId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete specified launch by ID
      tags:
      - Launch
    get:
      operationId: getLaunch
      parameters:
      - explode: false
        in: path
        name: launchId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchResource'
          description: OK
      summary: Get specified launch by ID
      tags:
      - Launch
  /v1/{projectName}/launch/{launchId}/report:
    get:
      description: "Only following formats are supported: pdf (by default), xls, html."
      operationId: getLaunchReport
      parameters:
      - explode: false
        in: path
        name: launchId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - pdf
          - xls
          - html
          type: string
        style: form
      responses:
        "200":
          description: OK
      summary: Export specified launch
      tags:
      - Launch
  /v1/{projectName}/launch/uuid/{launchId}:
    get:
      operationId: getLaunchByUuidOldTimestamp
      parameters:
      - explode: false
        in: path
        name: launchId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchResourceOld'
            application/x.reportportal.launch.v2+json:
              schema:
                $ref: '#/components/schemas/LaunchResource'
          description: "Successful response with dates in timestamp format. Response\
            \ with dates in ISO-8601 format if the custom header 'Accept: application/x.reportportal.launch.v2+json'\
            \ is used."
      summary: Get specified launch by UUID
      tags:
      - Launch
  /v1/{projectName}/launch/status:
    get:
      operationId: getStatuses
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
          description: OK
      summary: Get Statuses
      tags:
      - Launch
  /v1/{projectName}/launch/owners:
    get:
      operationId: getAllOwners
      parameters:
      - explode: true
        in: query
        name: filter.cnt.user
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: mode
        required: false
        schema:
          default: DEFAULT
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get all unique owners of project launches
      tags:
      - Launch
  /v1/{projectName}/launch/names:
    get:
      operationId: getAllLaunchNames
      parameters:
      - explode: true
        in: query
        name: filter.cnt.name
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get launch names of project
      tags:
      - Launch
  /v1/{projectName}/launch/mode:
    get:
      operationId: getDebugLaunches
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'statistics$defects$product_bug$pb001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$product_bug$pb001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'uuid'
        explode: true
        in: query
        name: filter.eq.uuid
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$automation_bug$ab001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$automation_bug$ab001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'attributeKey'
        explode: true
        in: query
        name: filter.eq.attributeKey
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'userId'
        explode: true
        in: query
        name: filter.eq.userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'status'
        explode: true
        in: query
        name: filter.eq.status
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'startTime'
        explode: true
        in: query
        name: filter.eq.startTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'mode'
        explode: true
        in: query
        name: filter.eq.mode
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'hasRetries'
        explode: true
        in: query
        name: filter.eq.hasRetries
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'number'
        explode: true
        in: query
        name: filter.eq.number
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'lastModified'
        explode: true
        in: query
        name: filter.eq.lastModified
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'compositeAttribute'
        explode: true
        in: query
        name: filter.has.compositeAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'endTime'
        explode: true
        in: query
        name: filter.eq.endTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'statistics$executions$passed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$passed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$defects$no_defect$nd001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$no_defect$nd001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'description'
        explode: true
        in: query
        name: filter.eq.description
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'user'
        explode: true
        in: query
        name: filter.eq.user
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$executions$failed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$failed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$system_issue$si001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$system_issue$si001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'attributeValue'
        explode: true
        in: query
        name: filter.eq.attributeValue
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$executions$total'
        explode: true
        in: query
        name: filter.eq.statistics$executions$total
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$executions$skipped'
        explode: true
        in: query
        name: filter.eq.statistics$executions$skipped
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$to_investigate$ti001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$to_investigate$ti001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageLaunchResource'
          description: OK
      summary: Get launches of specified project from DEBUG mode
      tags:
      - Launch
  /v1/{projectName}/launch/latest:
    get:
      operationId: getLatestLaunches
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'statistics$defects$product_bug$pb001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$product_bug$pb001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'uuid'
        explode: true
        in: query
        name: filter.eq.uuid
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$automation_bug$ab001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$automation_bug$ab001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'attributeKey'
        explode: true
        in: query
        name: filter.eq.attributeKey
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'userId'
        explode: true
        in: query
        name: filter.eq.userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'status'
        explode: true
        in: query
        name: filter.eq.status
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'startTime'
        explode: true
        in: query
        name: filter.eq.startTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'mode'
        explode: true
        in: query
        name: filter.eq.mode
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'hasRetries'
        explode: true
        in: query
        name: filter.eq.hasRetries
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'number'
        explode: true
        in: query
        name: filter.eq.number
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'lastModified'
        explode: true
        in: query
        name: filter.eq.lastModified
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'compositeAttribute'
        explode: true
        in: query
        name: filter.has.compositeAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'endTime'
        explode: true
        in: query
        name: filter.eq.endTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'statistics$executions$passed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$passed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$defects$no_defect$nd001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$no_defect$nd001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'description'
        explode: true
        in: query
        name: filter.eq.description
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'user'
        explode: true
        in: query
        name: filter.eq.user
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$executions$failed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$failed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$system_issue$si001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$system_issue$si001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'attributeValue'
        explode: true
        in: query
        name: filter.eq.attributeValue
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$executions$total'
        explode: true
        in: query
        name: filter.eq.statistics$executions$total
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$executions$skipped'
        explode: true
        in: query
        name: filter.eq.statistics$executions$skipped
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$to_investigate$ti001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$to_investigate$ti001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageLaunchResource'
          description: OK
      summary: Get list of latest project launches by filter
      tags:
      - Launch
  /v1/{projectName}/launch/compare:
    get:
      operationId: compareLaunches
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/ChartStatisticsContent'
          description: OK
      summary: Compare launches
      tags:
      - Launch
  /v1/{projectName}/launch/cluster/{launchId}:
    get:
      operationId: getClusters
      parameters:
      - explode: false
        in: path
        name: launchId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageClusterInfoResource'
          description: OK
      summary: Get all index clusters of the launch
      tags:
      - Launch
  /v1/{projectName}/launch/attribute/values:
    get:
      operationId: getAttributeValues
      parameters:
      - explode: true
        in: query
        name: filter.cnt.attributeValue
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter.eq.attributeKey
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get all unique attribute values of project launches
      tags:
      - Launch
  /v1/{projectName}/launch/attribute/keys:
    get:
      operationId: getAttributeKeys
      parameters:
      - explode: true
        in: query
        name: filter.cnt.attributeKey
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get all unique attribute keys of project launches
      tags:
      - Launch
  /v1/{projectName}/item/{itemId}:
    delete:
      operationId: deleteTestItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete test item
      tags:
      - Test Item
    get:
      operationId: getTestItem
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestItemResource'
          description: OK
      summary: Find test item by ID
      tags:
      - Test Item
  /v1/{projectName}/item/v2:
    get:
      operationId: getTestItemsV2
      parameters:
      - explode: true
        in: query
        name: params
        required: true
        schema:
          additionalProperties:
            type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'uuid'
        explode: true
        in: query
        name: filter.eq.uuid
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'attributeValue'
        explode: true
        in: query
        name: filter.eq.attributeValue
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'levelAttribute'
        explode: true
        in: query
        name: filter.eq.levelAttribute
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'status'
        explode: true
        in: query
        name: filter.eq.status
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'startTime'
        explode: true
        in: query
        name: filter.eq.startTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'issueType'
        explode: true
        in: query
        name: filter.eq.issueType
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'clusterId'
        explode: true
        in: query
        name: filter.eq.clusterId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'path'
        explode: true
        in: query
        name: filter.eq.path
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'issueGroupId'
        explode: true
        in: query
        name: filter.eq.issueGroupId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'hasRetries'
        explode: true
        in: query
        name: filter.eq.hasRetries
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'issueTypeId'
        explode: true
        in: query
        name: filter.eq.issueTypeId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'value'
        explode: true
        in: query
        name: filter.eq.value
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'duration'
        explode: true
        in: query
        name: filter.eq.duration
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'compositeAttribute'
        explode: true
        in: query
        name: filter.has.compositeAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'endTime'
        explode: true
        in: query
        name: filter.eq.endTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'statistics$executions$passed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$passed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'autoAnalyzed'
        explode: true
        in: query
        name: filter.eq.autoAnalyzed
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'locator'
        explode: true
        in: query
        name: filter.eq.locator
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'description'
        explode: true
        in: query
        name: filter.eq.description
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$executions$failed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$failed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'testCaseHash'
        explode: true
        in: query
        name: filter.eq.testCaseHash
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$system_issue$si001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$system_issue$si001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'hasStats'
        explode: true
        in: query
        name: filter.eq.hasStats
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'statistics$executions$total'
        explode: true
        in: query
        name: filter.eq.statistics$executions$total
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$executions$skipped'
        explode: true
        in: query
        name: filter.eq.statistics$executions$skipped
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'lastModified'
        explode: true
        in: query
        name: filter.eq.lastModified
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$defects$product_bug$pb001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$product_bug$pb001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$automation_bug$ab001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$automation_bug$ab001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'type'
        explode: true
        in: query
        name: filter.eq.type
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'issueId'
        explode: true
        in: query
        name: filter.eq.issueId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'mode'
        explode: true
        in: query
        name: filter.eq.mode
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'testCaseId'
        explode: true
        in: query
        name: filter.eq.testCaseId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'uniqueId'
        explode: true
        in: query
        name: filter.eq.uniqueId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'compositeSystemAttribute'
        explode: true
        in: query
        name: filter.has.compositeSystemAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'issueComment'
        explode: true
        in: query
        name: filter.eq.issueComment
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'ignoreAnalyzer'
        explode: true
        in: query
        name: filter.eq.ignoreAnalyzer
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'launchId'
        explode: true
        in: query
        name: filter.eq.launchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$no_defect$nd001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$no_defect$nd001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'hasChildren'
        explode: true
        in: query
        name: filter.eq.hasChildren
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'patternName'
        explode: true
        in: query
        name: filter.eq.patternName
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'retryParentId'
        explode: true
        in: query
        name: filter.eq.retryParentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'ticketId'
        explode: true
        in: query
        name: filter.eq.ticketId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'attributeKey'
        explode: true
        in: query
        name: filter.eq.attributeKey
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'key'
        explode: true
        in: query
        name: filter.eq.key
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'parentId'
        explode: true
        in: query
        name: filter.eq.parentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$to_investigate$ti001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$to_investigate$ti001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTestItemResource'
          description: OK
      summary: Find test items by specified filter
      tags:
      - Test Item
  /v1/{projectName}/item/uuid/{itemId}:
    get:
      operationId: getTestItemByUuidTimestamp
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestItemResourceOld'
            application/x.reportportal.test.v2+json:
              schema:
                $ref: '#/components/schemas/TestItemResource'
          description: "Successful response with dates in timestamp format. Response\
            \ with dates in ISO-8601 format if the custom header 'Accept: application/x.reportportal.test.v2+json'\
            \ is used."
      summary: Find test item by UUID
      tags:
      - Test Item
  /v1/{projectName}/item/ticket/ids:
    get:
      operationId: getTicketIds
      parameters:
      - explode: true
        in: query
        name: launch
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: term
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get tickets that contains a term as a part inside for specified launch
      tags:
      - Test Item
  /v1/{projectName}/item/ticket/ids/all:
    get:
      operationId: getTicketIdsForProject
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: term
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get tickets that contains a term as a part inside for specified launch
      tags:
      - Test Item
  /v1/{projectName}/item/suggest/{itemId}:
    get:
      operationId: getSuggestedItems
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SuggestedItem'
                type: array
          description: OK
      summary: Search suggested items in analyzer for provided one
      tags:
      - Test Item
  /v1/{projectName}/item/suggest/cluster/{clusterId}:
    get:
      operationId: getSuggestedClusterItems
      parameters:
      - explode: false
        in: path
        name: clusterId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SuggestedItem'
                type: array
          description: OK
      summary: Search suggested items in analyzer for provided one
      tags:
      - Test Item
  /v1/{projectName}/item/step/attribute/values:
    get:
      operationId: getAttributeValues_1
      parameters:
      - explode: true
        in: query
        name: filter.cnt.attributeValue
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter.eq.attributeKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get all unique attribute values of step items under specified project
      tags:
      - Test Item
  /v1/{projectName}/item/step/attribute/keys:
    get:
      operationId: getAttributeKeys_1
      parameters:
      - explode: true
        in: query
        name: filter.cnt.attributeKey
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get all unique attribute keys of step items under specified project
      tags:
      - Test Item
  /v1/{projectName}/item/statistics:
    get:
      operationId: getTestItems_1
      parameters:
      - explode: true
        in: query
        name: params
        required: true
        schema:
          additionalProperties:
            type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'uuid'
        explode: true
        in: query
        name: filter.eq.uuid
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'attributeValue'
        explode: true
        in: query
        name: filter.eq.attributeValue
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'levelAttribute'
        explode: true
        in: query
        name: filter.eq.levelAttribute
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'status'
        explode: true
        in: query
        name: filter.eq.status
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'startTime'
        explode: true
        in: query
        name: filter.eq.startTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'issueType'
        explode: true
        in: query
        name: filter.eq.issueType
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'clusterId'
        explode: true
        in: query
        name: filter.eq.clusterId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'path'
        explode: true
        in: query
        name: filter.eq.path
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'issueGroupId'
        explode: true
        in: query
        name: filter.eq.issueGroupId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'hasRetries'
        explode: true
        in: query
        name: filter.eq.hasRetries
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'issueTypeId'
        explode: true
        in: query
        name: filter.eq.issueTypeId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'value'
        explode: true
        in: query
        name: filter.eq.value
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'duration'
        explode: true
        in: query
        name: filter.eq.duration
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'compositeAttribute'
        explode: true
        in: query
        name: filter.has.compositeAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'endTime'
        explode: true
        in: query
        name: filter.eq.endTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'statistics$executions$passed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$passed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'autoAnalyzed'
        explode: true
        in: query
        name: filter.eq.autoAnalyzed
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'locator'
        explode: true
        in: query
        name: filter.eq.locator
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'description'
        explode: true
        in: query
        name: filter.eq.description
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$executions$failed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$failed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'testCaseHash'
        explode: true
        in: query
        name: filter.eq.testCaseHash
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$system_issue$si001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$system_issue$si001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'hasStats'
        explode: true
        in: query
        name: filter.eq.hasStats
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'statistics$executions$total'
        explode: true
        in: query
        name: filter.eq.statistics$executions$total
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$executions$skipped'
        explode: true
        in: query
        name: filter.eq.statistics$executions$skipped
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'lastModified'
        explode: true
        in: query
        name: filter.eq.lastModified
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$defects$product_bug$pb001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$product_bug$pb001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$automation_bug$ab001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$automation_bug$ab001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'type'
        explode: true
        in: query
        name: filter.eq.type
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'issueId'
        explode: true
        in: query
        name: filter.eq.issueId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'mode'
        explode: true
        in: query
        name: filter.eq.mode
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'testCaseId'
        explode: true
        in: query
        name: filter.eq.testCaseId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'uniqueId'
        explode: true
        in: query
        name: filter.eq.uniqueId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'compositeSystemAttribute'
        explode: true
        in: query
        name: filter.has.compositeSystemAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'issueComment'
        explode: true
        in: query
        name: filter.eq.issueComment
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'ignoreAnalyzer'
        explode: true
        in: query
        name: filter.eq.ignoreAnalyzer
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'launchId'
        explode: true
        in: query
        name: filter.eq.launchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$no_defect$nd001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$no_defect$nd001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'hasChildren'
        explode: true
        in: query
        name: filter.eq.hasChildren
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'patternName'
        explode: true
        in: query
        name: filter.eq.patternName
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'retryParentId'
        explode: true
        in: query
        name: filter.eq.retryParentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'ticketId'
        explode: true
        in: query
        name: filter.eq.ticketId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'attributeKey'
        explode: true
        in: query
        name: filter.eq.attributeKey
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'key'
        explode: true
        in: query
        name: filter.eq.key
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'parentId'
        explode: true
        in: query
        name: filter.eq.parentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$to_investigate$ti001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$to_investigate$ti001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResource'
          description: OK
      summary: Find accumulated statistics of items by specified filter
      tags:
      - Test Item
  /v1/{projectName}/item/search:
    get:
      operationId: getTestItems_2
      parameters:
      - explode: true
        in: query
        name: filter.cnt.name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter.has.compositeAttribute
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter.in.status
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTestItemResource'
          description: OK
      summary: Search test items by either name or attribute
      tags:
      - Test Item
  /v1/{projectName}/item/items:
    get:
      operationId: getTestItems_3
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TestItemResource'
                type: array
          description: OK
      summary: Get test items by specified ids
      tags:
      - Test Item
  /v1/{projectName}/item/history:
    get:
      operationId: getItemsHistory
      parameters:
      - explode: true
        in: query
        name: filterId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: historyDepth
        required: false
        schema:
          default: 5
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: isLatest
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: launchesLimit
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'uuid'
        explode: true
        in: query
        name: filter.eq.uuid
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'attributeValue'
        explode: true
        in: query
        name: filter.eq.attributeValue
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'levelAttribute'
        explode: true
        in: query
        name: filter.eq.levelAttribute
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'status'
        explode: true
        in: query
        name: filter.eq.status
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'startTime'
        explode: true
        in: query
        name: filter.eq.startTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'issueType'
        explode: true
        in: query
        name: filter.eq.issueType
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'clusterId'
        explode: true
        in: query
        name: filter.eq.clusterId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'path'
        explode: true
        in: query
        name: filter.eq.path
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'issueGroupId'
        explode: true
        in: query
        name: filter.eq.issueGroupId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'hasRetries'
        explode: true
        in: query
        name: filter.eq.hasRetries
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'issueTypeId'
        explode: true
        in: query
        name: filter.eq.issueTypeId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'value'
        explode: true
        in: query
        name: filter.eq.value
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'duration'
        explode: true
        in: query
        name: filter.eq.duration
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'compositeAttribute'
        explode: true
        in: query
        name: filter.has.compositeAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'endTime'
        explode: true
        in: query
        name: filter.eq.endTime
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'statistics$executions$passed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$passed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'autoAnalyzed'
        explode: true
        in: query
        name: filter.eq.autoAnalyzed
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'locator'
        explode: true
        in: query
        name: filter.eq.locator
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'description'
        explode: true
        in: query
        name: filter.eq.description
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$executions$failed'
        explode: true
        in: query
        name: filter.eq.statistics$executions$failed
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'testCaseHash'
        explode: true
        in: query
        name: filter.eq.testCaseHash
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$system_issue$si001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$system_issue$si001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'hasStats'
        explode: true
        in: query
        name: filter.eq.hasStats
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'statistics$executions$total'
        explode: true
        in: query
        name: filter.eq.statistics$executions$total
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$executions$skipped'
        explode: true
        in: query
        name: filter.eq.statistics$executions$skipped
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'lastModified'
        explode: true
        in: query
        name: filter.eq.lastModified
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'statistics$defects$product_bug$pb001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$product_bug$pb001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$automation_bug$ab001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$automation_bug$ab001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'type'
        explode: true
        in: query
        name: filter.eq.type
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'issueId'
        explode: true
        in: query
        name: filter.eq.issueId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'mode'
        explode: true
        in: query
        name: filter.eq.mode
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'testCaseId'
        explode: true
        in: query
        name: filter.eq.testCaseId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'uniqueId'
        explode: true
        in: query
        name: filter.eq.uniqueId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'compositeSystemAttribute'
        explode: true
        in: query
        name: filter.has.compositeSystemAttribute
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'issueComment'
        explode: true
        in: query
        name: filter.eq.issueComment
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'ignoreAnalyzer'
        explode: true
        in: query
        name: filter.eq.ignoreAnalyzer
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'launchId'
        explode: true
        in: query
        name: filter.eq.launchId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$no_defect$nd001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$no_defect$nd001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'hasChildren'
        explode: true
        in: query
        name: filter.eq.hasChildren
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'patternName'
        explode: true
        in: query
        name: filter.eq.patternName
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'retryParentId'
        explode: true
        in: query
        name: filter.eq.retryParentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'ticketId'
        explode: true
        in: query
        name: filter.eq.ticketId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'attributeKey'
        explode: true
        in: query
        name: filter.eq.attributeKey
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'key'
        explode: true
        in: query
        name: filter.eq.key
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'parentId'
        explode: true
        in: query
        name: filter.eq.parentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'statistics$defects$to_investigate$ti001'
        explode: true
        in: query
        name: filter.eq.statistics$defects$to_investigate$ti001
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTestItemHistoryElement'
          description: OK
      summary: Load history of test items
      tags:
      - Test Item
  /v1/{projectName}/item/attribute/values:
    get:
      operationId: getAttributeValues_2
      parameters:
      - explode: true
        in: query
        name: filter.cnt.attributeValue
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter.eq.attributeKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: launch
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get all unique attribute values on the project
      tags:
      - Test Item
  /v1/{projectName}/item/attribute/keys:
    get:
      operationId: getUniqueAttributeKeys
      parameters:
      - explode: true
        in: query
        name: filter.cnt.attributeKey
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: launch
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get all unique attribute keys on the project
      tags:
      - Test Item
  /v1/{projectName}/item/attribute/keys/all:
    get:
      operationId: getAttributeKeysForProject
      parameters:
      - explode: true
        in: query
        name: filter.cnt.attributeKey
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filterId
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: isLatest
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: launchesLimit
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get all unique attribute keys of specified launch
      tags:
      - Test Item
  /v1/{projectName}/filter/names:
    get:
      operationId: getAllFiltersNames
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'owner'
        explode: true
        in: query
        name: filter.eq.owner
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOwnedEntityResource'
          description: OK
      summary: Get available filter names
      tags:
      - User Filter
  /v1/{projectName}/filter/filters:
    get:
      operationId: getUserFilters
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserFilterResource'
                type: array
          description: OK
      summary: Get list of specified user filters
      tags:
      - User Filter
  /v1/{projectName}/dashboard/{dashboardId}/config:
    get:
      operationId: getDashboardConfig
      parameters:
      - explode: false
        in: path
        name: dashboardId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardConfigResource'
          description: OK
      summary: Get Dashboard configuration including its widgets and filters if any
      tags:
      - Dashboard
  /v1/{projectName}/activity/{activityId}:
    get:
      description: Fetches the activity details by its ID for a specific project.
      operationId: getActivity
      parameters:
      - description: The ID of the activity to be searched
        explode: false
        in: path
        name: activityId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The name of the project for which the activity should be searched
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful operation:
                  description: Successful operation
                  value:
                    id: 1
                    user: superadmin
                    loggedObjectId: 22
                    lastModified: 2024-03-29T15:03:54.156904Z
                    actionType: finishLaunch
                    objectType: LAUNCH
                    projectId: 1
                    details:
                      history: []
                    objectName: 1 step (failed) - filled description
              schema:
                $ref: '#/components/schemas/ActivityResource'
          description: Successful operation. Returns the Activity
        "400":
          content:
            application/json:
              examples:
                Bad request:
                  description: Bad request
                  value:
                    timestamp: 2024-05-20T07:12:15.698+00:00
                    status: 400
                    error: Bad Request
                    path: /v1/superadmin_personal/activity/1test
              schema:
                $ref: '#/components/schemas/ErrorRS'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                Unauthorized:
                  description: Unauthorized
                  value:
                    error: unauthorized
                    error_description: Full authentication is required to access this
                      resource.
              schema:
                $ref: '#/components/schemas/ErrorRS'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  description: Access Denied
                  value:
                    error: access_denied
                    error_description: You do not have enough permissions
              schema:
                $ref: '#/components/schemas/ErrorRS'
          description: Access Denied
        "404":
          content:
            application/json:
              examples:
                Activity not found:
                  description: Activity not found
                  value:
                    errorCode: 40411
                    message: Activity '1' not found. Did you use correct Activity
                      ID?
              schema:
                $ref: '#/components/schemas/ErrorRS'
          description: Activity not found
        "500":
          content:
            application/json:
              examples:
                Unclassified error:
                  description: Unclassified error
                  value:
                    errorCode: 5000
                    message: Unclassified error
              schema:
                $ref: '#/components/schemas/ErrorRS'
          description: Internal server error
      summary: Get an activity by its ID in a specific project
      tags:
      - Activity
  /v1/{projectName}/activity/item/{itemId}:
    get:
      description: |
        Fetches a list of item activities for a specific project.
        <p>Action field can have these values:</p>
        <ul>
        <li>'create'</li>
        <li>'update'</li>
        <li>'delete'</li>
        <li>'bulkCreate'</li>
        <li>'bulkUpdate'</li>
        <li>'bulkDelete'</li>
        <li>'analyze'</li>
        <li>'start'</li>
        <li>'finish'</li>
        <li>'post'</li>
        <li>'link'</li>
        <li>'unlink'</li>
        <li>'assign'</li>
        <li>'unassign'</li>
        <li>'generate'</li>
        <li>'match'</li>
        <li>'changeRole'</li>
        <li>'updateUserRole'</li>
        </ul>
        <p>Priority field can have these values:</p>
        <ul>
        <li>'critical'</li>
        <li>'high'</li>
        <li>'medium'</li>
        <li>'low'</li>
        <li>'info'</li>
        </ul>
        <p>Object type field can have these values:</p>
        <ul>
        <li>'launch'</li>
        <li>'dashboard'</li>
        <li>'defectType'</li>
        <li>'emailConfig'</li>
        <li>'filter'</li>
        <li>'import'</li>
        <li>'integration'</li>
        <li>'itemIssue'</li>
        <li>'project'</li>
        <li>'sharing'</li>
        <li>'user'</li>
        <li>'widget'</li>
        <li>'pattern'</li>
        <li>'index'</li>
        <li>'plugin'</li>
        <li>'invitationLink'</li>
        </ul>
        <p>Subject type field can have these values:</p>
        <ul>
        <li>'user'</li>
        <li>'application'</li>
        <li>'rule'</li>
        <li>'custom'</li>
        </ul>
        <p> You can filter by different operators:
        <ul>
        <li>eq (Equals condition)</li>
        <li>ne (Not equals condition)</li>
        <li>cnt (Contains condition)</li>
        <li>under</li>
        <li>level (Number of labels in path)</li>
        <li>ex (Exists condition)</li>
        <li>in (Accepts filter value as comma-separated list)</li>
        <li>ea (Equals any. Accepts filter value as comma-separated list)</li>
        <li>has (Accepts filter value as comma-separated list. Returns 'TRUE' of all
        provided values exist in collection)</li>
        <li>any (Overlap condition between two arrays)</li>
        <li>gt (Greater than condition)</li>
        <li>gte (Greater than or Equals condition)</li>
        <li>lt (Lower than condition)</li>
        <li>lte (Lower than or Equals condition)</li>
        <li>btw (Between condition. Include boundaries. 'Between' condition applicable only for
        positive Numbers, Dates or specific TimeStamp values)</li>
        </ul>
      operationId: getTestItemActivities
      parameters:
      - description: The ID of the test item for which all its activities should be
          searched
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The name of the project for which the activities should be searched
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'action'
        explode: true
        in: query
        name: filter.eq.action
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'objectId'
        explode: true
        in: query
        name: filter.eq.objectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'subjectName'
        explode: true
        in: query
        name: filter.eq.subjectName
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectName'
        explode: true
        in: query
        name: filter.eq.projectName
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'user'
        explode: true
        in: query
        name: filter.eq.user
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'createdAt'
        explode: true
        in: query
        name: filter.eq.createdAt
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'objectName'
        explode: true
        in: query
        name: filter.eq.objectName
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'subjectType'
        explode: true
        in: query
        name: filter.eq.subjectType
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'priority'
        explode: true
        in: query
        name: filter.eq.priority
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'subjectId'
        explode: true
        in: query
        name: filter.eq.subjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'eventName'
        explode: true
        in: query
        name: filter.eq.eventName
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'objectType'
        explode: true
        in: query
        name: filter.eq.objectType
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful operation:
                  description: Successful operation
                  value:
                    content:
                    - id: 1
                      created_at: 2024-03-29T12:29:54.772Z
                      event_name: updateItem
                      object_id: 1153
                      object_name: Step-1(A)
                      object_type: itemIssue
                      project_id: 1
                      project_name: superadmin_personal
                      subject_name: superadmin
                      subject_type: user
                      subject_id: "1"
                      details:
                        history:
                        - field: status
                          oldValue: SKIPPED
                          newValue: FAILED
                    page:
                      number: 1
                      size: 20
                      totalElements: 1
                      totalPages: 1
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful operation. Returns a list of activities.
        "400":
          content:
            application/json:
              examples:
                Bad request:
                  description: Bad request
                  value:
                    timestamp: 2024-05-20T07:03:53.007+00:00
                    status: 400
                    error: Bad Request
                    path: /v1/superadmin_personal/activity/item/1test
              schema:
                $ref: '#/components/schemas/ErrorRS'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                Unauthorized:
                  description: Unauthorized
                  value:
                    error: unauthorized
                    error_description: Full authentication is required to access this
                      resource.
              schema:
                $ref: '#/components/schemas/ErrorRS'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  description: Access Denied
                  value:
                    error: access_denied
                    error_description: You do not have enough permissions
              schema:
                $ref: '#/components/schemas/ErrorRS'
          description: Access Denied
        "404":
          content:
            application/json:
              examples:
                Test item not found:
                  description: Test item not found
                  value:
                    errorCode: 4043
                    message: Test Item '1' not found. Did you use correct Test Item
                      ID?
              schema:
                $ref: '#/components/schemas/ErrorRS'
          description: Test item not found or Launch not found
        "500":
          content:
            application/json:
              examples:
                Unclassified error:
                  description: Unclassified error
                  value:
                    errorCode: 5000
                    message: Unclassified error
              schema:
                enum:
                - INCORRECT_REQUEST
                - BINARY_DATA_CANNOT_BE_SAVED
                - ACCESS_DENIED
                - ADDRESS_LOCKED
                - PROJECT_NOT_FOUND
                - LAUNCH_NOT_FOUND
                - TEST_SUITE_NOT_FOUND
                - TEST_ITEM_NOT_FOUND
                - LOG_NOT_FOUND
                - ROLE_NOT_FOUND
                - USER_NOT_FOUND
                - WIDGET_NOT_FOUND
                - WIDGET_NOT_FOUND_IN_DASHBOARD
                - DASHBOARD_NOT_FOUND
                - USER_FILTER_NOT_FOUND
                - ACTIVITY_NOT_FOUND
                - UNABLE_TO_CREATE_WIDGET
                - INTEGRATION_NOT_FOUND
                - PROJECT_NOT_CONFIGURED
                - SERVER_SETTINGS_NOT_FOUND
                - ISSUE_TYPE_NOT_FOUND
                - PROJECT_SETTINGS_NOT_FOUND
                - TICKET_NOT_FOUND
                - AUTH_INTEGRATION_NOT_FOUND
                - WIDGET_NOT_FOUND_IN_PROJECT
                - USER_FILTER_NOT_FOUND_IN_PROJECT
                - DASHBOARD_NOT_FOUND_IN_PROJECT
                - PATTERN_TEMPLATE_NOT_FOUND_IN_PROJECT
                - TEST_ITEM_OR_LAUNCH_NOT_FOUND
                - ANALYZER_NOT_FOUND
                - ATTACHMENT_NOT_FOUND
                - UNABLE_TO_LOAD_BINARY_DATA
                - CLUSTER_NOT_FOUND
                - ORGANIZATION_NOT_FOUND
                - NOT_FOUND
                - INCORRECT_FILTER_PARAMETERS
                - INCORRECT_SORTING_PARAMETERS
                - INCORRECT_INTEGRATION_NAME
                - UNABLE_MODIFY_SHARABLE_RESOURCE
                - INCORRECT_AUTHENTICATION_TYPE
                - UNABLE_POST_TICKET
                - UNABLE_INTERACT_WITH_INTEGRATION
                - UNABLE_ASSIGN_UNASSIGN_USER_TO_PROJECT
                - EMAIL_CONFIGURATION_IS_INCORRECT
                - PROJECT_UPDATE_NOT_ALLOWED
                - UNABLE_TO_UPDATE_YOURSELF_ROLE
                - FORBIDDEN_OPERATION
                - RESOURCE_ALREADY_EXISTS
                - ROLE_ALREADY_EXISTS_ERROR
                - USER_ALREADY_EXISTS
                - USER_FILTER_ALREADY_EXISTS
                - PROJECT_ALREADY_EXISTS
                - DASHBOARD_UPDATE_ERROR
                - UNABLE_LOAD_WIDGET_CONTENT
                - UNABLE_ADD_TO_FAVORITE
                - INTEGRATION_ALREADY_EXISTS
                - SERVER_SETTINGS_ALREADY_EXISTS
                - UNABLE_REMOVE_FROM_FAVORITE
                - LAUNCH_IS_NOT_FINISHED
                - TEST_ITEM_IS_NOT_FINISHED
                - INCORRECT_FINISH_STATUS
                - BAD_REQUEST_ERROR
                - BAD_SAVE_LOG_REQUEST
                - REPORTING_ITEM_ALREADY_FINISHED
                - AMBIGUOUS_TEST_ITEM_STATUS
                - FAILED_TEST_ITEM_ISSUE_TYPE_DEFINITION
                - FINISH_TIME_EARLIER_THAN_START_TIME
                - FINISH_ITEM_NOT_ALLOWED
                - FINISH_LAUNCH_NOT_ALLOWED
                - START_ITEM_NOT_ALLOWED
                - CHILD_START_TIME_EARLIER_THAN_PARENT
                - UNSUPPORTED_TEST_ITEM_TYPE
                - LOGGING_IS_NOT_ALLOWED
                - BAD_SAVE_WIDGET_REQUEST
                - BAD_UPDATE_WIDGET_REQUEST
                - UNABLE_LOAD_TEST_ITEM_HISTORY
                - BAD_SAVE_USER_FILTER_REQUEST
                - RETRIES_HANDLER_ERROR
                - IMPORT_FILE_ERROR
                - PARSING_XML_ERROR
                - OBJECT_RETRIEVAL_ERROR
                - PLUGIN_UPLOAD_ERROR
                - PLUGIN_REMOVE_ERROR
                - UNABLE_TO_SAVE_CHILD_ITEM_FOR_THE_RETRY
                - PATTERN_ANALYSIS_ERROR
                - PROJECT_DOESNT_CONTAIN_USER
                - UNCLASSIFIED_REPORT_PORTAL_ERROR
                - BAD_UPDATE_PREFERENCE_REQUEST
                - UNSUPPORTED_MERGE_STRATEGY_TYPE
                - DEMO_DATA_GENERATION_ERROR
                - UNCLASSIFIED_ERROR
                type: string
          description: Internal server error
      summary: Get a list of item activities for a specific project
      tags:
      - Activity
  /v1/project/{projectName}/widget/{widgetCode}:
    get:
      operationId: getProjectWidget
      parameters:
      - explode: true
        in: query
        name: interval
        required: false
        schema:
          default: 3M
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: widgetCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
          description: OK
      summary: Get Project Widget
      tags:
      - Project
  /v1/project/{projectName}/users:
    get:
      operationId: getProjectUsers
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'fullName'
        explode: true
        in: query
        name: filter.eq.fullName
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'uuid'
        explode: true
        in: query
        name: filter.eq.uuid
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'email'
        explode: true
        in: query
        name: filter.eq.email
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'role'
        explode: true
        in: query
        name: filter.eq.role
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'synchronizationDate'
        explode: true
        in: query
        name: filter.eq.synchronizationDate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'expired'
        explode: true
        in: query
        name: filter.eq.expired
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'project'
        explode: true
        in: query
        name: filter.eq.project
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'type'
        explode: true
        in: query
        name: filter.eq.type
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'user'
        explode: true
        in: query
        name: filter.eq.user
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'active'
        explode: true
        in: query
        name: filter.eq.active
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'lastLogin'
        explode: true
        in: query
        name: filter.eq.lastLogin
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'externalId'
        explode: true
        in: query
        name: filter.eq.externalId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageUserResource'
          description: OK
      summary: Get users assigned on current project
      tags:
      - Project
  /v1/project/{projectName}/usernames:
    get:
      description: Only for users that are members of the project
      operationId: getProjectUsers_1
      parameters:
      - explode: true
        in: query
        name: filter.cnt.users
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Load project users by filter
      tags:
      - Project
  /v1/project/{projectName}/usernames/search:
    get:
      operationId: searchForUser
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: term
        required: true
        schema:
          type: string
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSearchUserResource'
          description: OK
      summary: Search For User
      tags:
      - Project
  /v1/project/{projectName}/preference:
    get:
      description: Only for logged-in user
      operationId: getUserPreference
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferenceResource'
          description: OK
      summary: Load logged-in user preferences
      tags:
      - Project
  /v1/project/{projectName}/preference/:
    get:
      description: Only for logged-in user
      operationId: getUserPreference_1
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferenceResource'
          description: OK
      summary: Load logged-in user preferences
      tags:
      - Project
  /v1/project/{projectName}/assignable:
    get:
      description: Only for users with project manager permissions
      operationId: getUsersForAssign
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: Filters by 'fullName'
        explode: true
        in: query
        name: filter.eq.fullName
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'uuid'
        explode: true
        in: query
        name: filter.eq.uuid
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'email'
        explode: true
        in: query
        name: filter.eq.email
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'role'
        explode: true
        in: query
        name: filter.eq.role
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'synchronizationDate'
        explode: true
        in: query
        name: filter.eq.synchronizationDate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'expired'
        explode: true
        in: query
        name: filter.eq.expired
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'project'
        explode: true
        in: query
        name: filter.eq.project
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'type'
        explode: true
        in: query
        name: filter.eq.type
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'user'
        explode: true
        in: query
        name: filter.eq.user
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'active'
        explode: true
        in: query
        name: filter.eq.active
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'lastLogin'
        explode: true
        in: query
        name: filter.eq.lastLogin
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'externalId'
        explode: true
        in: query
        name: filter.eq.externalId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageUserResource'
          description: OK
      summary: Load users which can be assigned to specified project
      tags:
      - Project
  /v1/project/names:
    get:
      operationId: getAllProjectNames
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get All Project Names
      tags:
      - Project
  /v1/project/names/search:
    get:
      operationId: searchProjectNames
      parameters:
      - explode: true
        in: query
        name: term
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Search Project Names
      tags:
      - Project
  /v1/project/list:
    get:
      operationId: getAllProjectsInfo
      parameters:
      - description: Filters by 'creationDate'
        explode: true
        in: query
        name: filter.eq.creationDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'usersQuantity'
        explode: true
        in: query
        name: filter.eq.usersQuantity
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'organization'
        explode: true
        in: query
        name: filter.eq.organization
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'launchesQuantity'
        explode: true
        in: query
        name: filter.eq.launchesQuantity
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'type'
        explode: true
        in: query
        name: filter.eq.type
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'lastRun'
        explode: true
        in: query
        name: filter.eq.lastRun
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageProjectInfoResource'
          description: OK
      summary: Get All Projects Info
      tags:
      - Project
  /v1/project/list/{projectName}:
    get:
      operationId: getProjectInfo
      parameters:
      - explode: true
        in: query
        name: interval
        required: false
        schema:
          default: 3M
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInfoResource'
          description: OK
      summary: Get Project Info
      tags:
      - Project
  /v1/project/export:
    get:
      description: Allowable only for users with administrator role
      operationId: exportProjects
      parameters:
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - csv
          type: string
        style: form
      - description: Filters by 'creationDate'
        explode: true
        in: query
        name: filter.eq.creationDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filters by 'usersQuantity'
        explode: true
        in: query
        name: filter.eq.usersQuantity
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'name'
        explode: true
        in: query
        name: filter.eq.name
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'organization'
        explode: true
        in: query
        name: filter.eq.organization
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'launchesQuantity'
        explode: true
        in: query
        name: filter.eq.launchesQuantity
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'type'
        explode: true
        in: query
        name: filter.eq.type
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'lastRun'
        explode: true
        in: query
        name: filter.eq.lastRun
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          description: OK
      summary: Exports information about all projects
      tags:
      - Project
  /v1/project/analyzer/status:
    get:
      operationId: getAnalyzerIndexingStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: boolean
          description: OK
      summary: Get Analyzer Indexing Status
      tags:
      - Project
  /v1/plugin/public:
    get:
      operationId: getPlugins_1
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IntegrationTypeResource'
                type: array
          description: OK
      summary: Get all available public plugins
      tags:
      - Plugin Public
  /v1/plugin/public/{pluginName}/file/{name}:
    get:
      operationId: getPublicFile
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pluginName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      summary: Get public plugin file without authentication
      tags:
      - Plugin Public
  /v1/onboarding:
    get:
      operationId: onBoarding
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: GENERAL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      summary: "Return onboarding information for page if available, -1 otherwise"
      tags:
      - Onboarding
  /v1/integration/{projectName}/{integrationId}/connection/test:
    get:
      operationId: testIntegrationConnection
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
      summary: Test connection to the integration through the project config
      tags:
      - Integration
  /v1/integration/{integrationId}/connection/test:
    get:
      operationId: testIntegrationConnection_1
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
      summary: Test connection to the global integration
      tags:
      - Integration
  /v1/integration/project/{projectName}/all:
    get:
      operationId: getProjectIntegrations
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IntegrationResource'
                type: array
          description: OK
      summary: Get available project integrations
      tags:
      - Integration
  /v1/integration/project/{projectName}/all/{pluginName}:
    get:
      operationId: getProjectIntegrations_1
      parameters:
      - explode: false
        in: path
        name: pluginName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IntegrationResource'
                type: array
          description: OK
      summary: Get available project integrations for plugin
      tags:
      - Integration
  /v1/integration/global/all/{pluginName}:
    get:
      operationId: getGlobalIntegrations
      parameters:
      - explode: false
        in: path
        name: pluginName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IntegrationResource'
                type: array
          description: OK
      summary: Get available global integrations for plugin
      tags:
      - Integration
  /v1/integration/global/all:
    get:
      operationId: getGlobalIntegrations_1
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IntegrationResource'
                type: array
          description: OK
      summary: Get available global integrations
      tags:
      - Integration
  /v1/integration/global/all/:
    get:
      operationId: getGlobalIntegrations_2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IntegrationResource'
                type: array
          description: OK
      summary: Get available global integrations
      tags:
      - Integration
  /v1/data/{projectName}/{dataId}:
    get:
      operationId: getFile
      parameters:
      - explode: false
        in: path
        name: dataId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      summary: Get file
      tags:
      - File Storage
  /v1/data/{projectName}/userphoto:
    get:
      operationId: getUserPhoto
      parameters:
      - explode: true
        in: query
        name: loadThumbnail
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: login
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      summary: Get user's photo
      tags:
      - File Storage
  /v1/bts/{projectName}/{integrationId}/issue_types:
    get:
      operationId: getAllowableIssueTypes
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get list of allowable issue types for bug tracking system
      tags:
      - Bug Tracking System
  /v1/bts/{projectName}/{integrationId}/fields-set:
    get:
      operationId: getSetOfIntegrationSystemFields
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: issueType
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PostFormField'
                type: array
          description: OK
      summary: Get list of fields required for posting ticket in concrete integration
      tags:
      - Bug Tracking System
  /v1/bts/{projectName}/ticket/{ticketId}:
    get:
      operationId: getTicket
      parameters:
      - explode: true
        in: query
        name: btsProject
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: btsUrl
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: OK
      summary: Get ticket from the bts integration
      tags:
      - Bug Tracking System
  /v1/bts/{integrationId}/issue_types:
    get:
      operationId: getAllowableIssueTypes_1
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get list of existed issue types in bts
      tags:
      - Bug Tracking System
  /v1/bts/{integrationId}/fields-set:
    get:
      operationId: getSetOfIntegrationSystemFields_1
      parameters:
      - explode: false
        in: path
        name: integrationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: issueType
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PostFormField'
                type: array
          description: OK
      summary: Get list of fields required for posting ticket
      tags:
      - Bug Tracking System
  /v1/activities/{projectName}/subjectName:
    get:
      description: Only for current project
      operationId: getProjectSubjectName
      parameters:
      - explode: true
        in: query
        name: filter.cnt.subjectName
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Load project activities subjectNames by filter
      tags:
      - Activity Event
  /users/{userName}/projects:
    get:
      operationId: getUserProjects
      parameters:
      - explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/AssignedProject'
          description: OK
      summary: Get User Projects
      tags:
      - User
  /users/search:
    get:
      operationId: findUsers
      parameters:
      - explode: true
        in: query
        name: term
        required: true
        schema:
          type: string
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageUserResource'
          description: OK
      summary: Find Users
      tags:
      - User
  /users/registration/info:
    get:
      operationId: validateInfo
      parameters:
      - explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YesNoRS'
          description: OK
      summary: Validate Info
      tags:
      - User
  /users/password/reset/{uuid}:
    get:
      operationId: isRestorePasswordBidExist
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YesNoRS'
          description: OK
      summary: Check if a restore password bid exists
      tags:
      - User
  /users/export:
    get:
      description: Allowable only for users with administrator role
      operationId: export
      parameters:
      - explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - csv
          type: string
        style: form
      - description: Filters by 'fullName'
        explode: true
        in: query
        name: filter.eq.fullName
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'uuid'
        explode: true
        in: query
        name: filter.eq.uuid
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'email'
        explode: true
        in: query
        name: filter.eq.email
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'role'
        explode: true
        in: query
        name: filter.eq.role
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'synchronizationDate'
        explode: true
        in: query
        name: filter.eq.synchronizationDate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'expired'
        explode: true
        in: query
        name: filter.eq.expired
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'project'
        explode: true
        in: query
        name: filter.eq.project
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'type'
        explode: true
        in: query
        name: filter.eq.type
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'user'
        explode: true
        in: query
        name: filter.eq.user
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'active'
        explode: true
        in: query
        name: filter.eq.active
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'lastLogin'
        explode: true
        in: query
        name: filter.eq.lastLogin
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'externalId'
        explode: true
        in: query
        name: filter.eq.externalId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          description: OK
      summary: Exports information about all users
      tags:
      - User
  /users/all:
    get:
      description: Allowable only for users with administrator role
      operationId: getUsers
      parameters:
      - description: Filters by 'fullName'
        explode: true
        in: query
        name: filter.eq.fullName
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'uuid'
        explode: true
        in: query
        name: filter.eq.uuid
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'email'
        explode: true
        in: query
        name: filter.eq.email
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'id'
        explode: true
        in: query
        name: filter.eq.id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'role'
        explode: true
        in: query
        name: filter.eq.role
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'synchronizationDate'
        explode: true
        in: query
        name: filter.eq.synchronizationDate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'expired'
        explode: true
        in: query
        name: filter.eq.expired
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'project'
        explode: true
        in: query
        name: filter.eq.project
        required: false
        schema:
          items: {}
          type: array
        style: form
      - description: Filters by 'type'
        explode: true
        in: query
        name: filter.eq.type
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'user'
        explode: true
        in: query
        name: filter.eq.user
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'active'
        explode: true
        in: query
        name: filter.eq.active
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters by 'lastLogin'
        explode: true
        in: query
        name: filter.eq.lastLogin
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filters by 'externalId'
        explode: true
        in: query
        name: filter.eq.externalId
        required: false
        schema:
          type: string
        style: form
      - description: Filters by 'projectId'
        explode: true
        in: query
        name: filter.eq.projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Results page you want to retrieve (0..N)
        explode: true
        in: query
        name: page.page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: page.size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sorting criteria in the format: property, (asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: page.sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageUserResource'
          description: OK
      summary: Return information about all users
      tags:
      - User
  /users/:
    get:
      operationId: getMyself_1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResource'
          description: OK
      summary: Return information about current logged-in user
      tags:
      - User
  /projects/{project_name}/groups:
    get:
      description: "Get all groups of project.  ### Authority  - `ADMINISTRATOR` -\
        \ `PROJECT MANAGER` - `MEMBETR` - `OPERATOR`"
      operationId: getGroupsOfProject
      parameters:
      - description: The limit used for this page of results. This will be the same
          as the limit query parameter unless it exceeded the maximum value allowed
          for this API endpoint.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 300
          format: int32
          maximum: 1000
          minimum: 0
          type: integer
        style: form
      - description: The offset used for this page of results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Project name.
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroupsPage'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProjectGroupsPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Get all groups of project
      tags:
      - Projects
  /groups/{group_id}/users:
    get:
      description: "Get all users of group.  ### Authority  - `ADMINISTRATOR`"
      operationId: getGroupUsers
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - description: The limit used for this page of results. This will be the same
          as the limit query parameter unless it exceeded the maximum value allowed
          for this API endpoint.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 300
          format: int32
          maximum: 1000
          minimum: 0
          type: integer
        style: form
      - description: The offset used for this page of results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUsersPage'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GroupUsersPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Get all group users
      tags:
      - Groups
  /groups/{group_id}/projects:
    get:
      description: "Get all projects of group.  ### Authority  - `ADMINISTRATOR`"
      operationId: getGroupProjects
      parameters:
      - description: Group identifier.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - description: The limit used for this page of results. This will be the same
          as the limit query parameter unless it exceeded the maximum value allowed
          for this API endpoint.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 300
          format: int32
          maximum: 1000
          minimum: 0
          type: integer
        style: form
      - description: The offset used for this page of results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProjectsPage'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GroupProjectsPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: Error problem response
      security:
      - BearerAuth: []
      summary: Get all group projects
      tags:
      - Groups
  /v1/{projectName}/settings/sub-type/{id}:
    delete:
      operationId: deleteProjectIssueSubType
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete custom project specific issue sub-type
      tags:
      - Project Settings
  /v1/{projectName}/settings/notification/{notificationId}:
    delete:
      description: Only for users with PROJECT_MANAGER or ADMIN roles
      operationId: deleteNotification
      parameters:
      - explode: false
        in: path
        name: notificationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Deletes notification for specified project
      tags:
      - Project Settings
  /v1/{projectName}/dashboard/{dashboardId}/{widgetId}:
    delete:
      operationId: removeWidget
      parameters:
      - explode: false
        in: path
        name: dashboardId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: widgetId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Remove widget from specified dashboard
      tags:
      - Dashboard
  /v1/project/{projectId}:
    delete:
      description: Could be deleted only by users with administrator role
      operationId: deleteProject_1
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete project
      tags:
      - Project
  /v1/integration/{projectName}/all/{type}:
    delete:
      operationId: deleteAllProjectIntegrations
      parameters:
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete all integrations assigned to specified project
      tags:
      - Integration
  /v1/integration/all/{type}:
    delete:
      operationId: deleteAllIntegrations
      parameters:
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete all global integrations by type
      tags:
      - Integration
  /users/{userId}/api-keys/{keyId}:
    delete:
      operationId: deleteApiKey
      parameters:
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete specified Api Key
      tags:
      - User
  /users/{id}:
    delete:
      operationId: deleteUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
          description: OK
      summary: Delete specified user
      tags:
      - User
components:
  schemas:
    AnalyticsResource:
      example:
        type: type
        enabled: true
      properties:
        enabled:
          type: boolean
        type:
          type: string
      required:
      - type
    OperationCompletionRS:
      example:
        message: message
      properties:
        message:
          type: string
    FinishExecutionRQ:
      example:
        description: description
        attributes:
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        endTime: 2000-01-23T04:56:07.000+00:00
        status: "PASSED, FAILED, STOPPED, SKIPPED, INTERRUPTED, CANCELLED, INFO, WARN"
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributesRQ'
          maxItems: 256
          minItems: 0
          type: array
          uniqueItems: true
        endTime:
          format: date-time
          type: string
        status:
          enum:
          - "PASSED, FAILED, STOPPED, SKIPPED, INTERRUPTED, CANCELLED, INFO, WARN"
          type: string
        description:
          type: string
      required:
      - endTime
    ItemAttributesRQ:
      example:
        system: false
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          maxLength: 2147483647
          minLength: 1
          type: string
        system:
          example: false
          type: boolean
      required:
      - value
    FinishLaunchRS:
      example:
        number: 0
        link: link
        id: id
      properties:
        id:
          type: string
        number:
          format: int64
          type: integer
        link:
          type: string
    ExternalSystemIssue:
      example:
        pluginName: pluginName
        btsProject: btsProject
        submitDate: 2000-01-23T04:56:07.000+00:00
        btsUrl: btsUrl
        ticketId: ticketId
        url: url
      properties:
        ticketId:
          type: string
        submitDate:
          format: date-time
          type: string
        btsUrl:
          type: string
        btsProject:
          type: string
        url:
          type: string
        pluginName:
          type: string
      required:
      - btsProject
      - btsUrl
      - ticketId
      - url
    FinishTestItemRQ:
      example:
        issue:
          issueType: issueType
          autoAnalyzed: true
          ignoreAnalyzer: true
          comment: comment
          externalSystemIssues:
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
        retryOf: retryOf
        description: description
        attributes:
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        endTime: 2000-01-23T04:56:07.000+00:00
        launchUuid: launchUuid
        retry: true
        status: "PASSED, FAILED, STOPPED, SKIPPED, INTERRUPTED, CANCELLED, INFO, WARN"
        testCaseId: testCaseId
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributesRQ'
          maxItems: 256
          minItems: 0
          type: array
          uniqueItems: true
        endTime:
          format: date-time
          type: string
        status:
          enum:
          - "PASSED, FAILED, STOPPED, SKIPPED, INTERRUPTED, CANCELLED, INFO, WARN"
          type: string
        description:
          type: string
        issue:
          $ref: '#/components/schemas/Issue'
        retry:
          type: boolean
        launchUuid:
          type: string
        testCaseId:
          type: string
        retryOf:
          type: string
      required:
      - endTime
      - launchUuid
    Issue:
      example:
        issueType: issueType
        autoAnalyzed: true
        ignoreAnalyzer: true
        comment: comment
        externalSystemIssues:
        - pluginName: pluginName
          btsProject: btsProject
          submitDate: 2000-01-23T04:56:07.000+00:00
          btsUrl: btsUrl
          ticketId: ticketId
          url: url
        - pluginName: pluginName
          btsProject: btsProject
          submitDate: 2000-01-23T04:56:07.000+00:00
          btsUrl: btsUrl
          ticketId: ticketId
          url: url
        - pluginName: pluginName
          btsProject: btsProject
          submitDate: 2000-01-23T04:56:07.000+00:00
          btsUrl: btsUrl
          ticketId: ticketId
          url: url
        - pluginName: pluginName
          btsProject: btsProject
          submitDate: 2000-01-23T04:56:07.000+00:00
          btsUrl: btsUrl
          ticketId: ticketId
          url: url
        - pluginName: pluginName
          btsProject: btsProject
          submitDate: 2000-01-23T04:56:07.000+00:00
          btsUrl: btsUrl
          ticketId: ticketId
          url: url
      properties:
        issueType:
          type: string
        comment:
          maxLength: 65536
          minLength: 0
          type: string
        autoAnalyzed:
          type: boolean
        ignoreAnalyzer:
          type: boolean
        externalSystemIssues:
          items:
            $ref: '#/components/schemas/ExternalSystemIssue'
          maxItems: 300
          minItems: 0
          type: array
          uniqueItems: true
      required:
      - issueType
    ContentParameters:
      example:
        widgetOptions:
          key: "{}"
        contentFields:
        - contentFields
        - contentFields
        itemsCount: 6
      properties:
        contentFields:
          items:
            type: string
          type: array
        itemsCount:
          format: int32
          type: integer
        widgetOptions:
          additionalProperties:
            type: object
    WidgetRQ:
      example:
        filterIds:
        - 0
        - 0
        name: name
        description: description
        contentParameters:
          widgetOptions:
            key: "{}"
          contentFields:
          - contentFields
          - contentFields
          itemsCount: 6
        widgetType: "oldLineChart, investigatedTrend, launchStatistics, statisticTrend,\
          \ casesTrend, notPassed, overallStatistics, uniqueBugTable, bugTrend, activityStream,\
          \ launchesComparisonChart, launchesDurationChart, launchesTable, topTestCases,\
          \ flakyTestCases, passingRateSummary, passingRatePerLaunch, productStatus,\
          \ mostTimeConsuming, cumulative, topPatternTemplates, componentHealthCheck,\
          \ componentHealthCheckTable, testCaseSearch"
      properties:
        description:
          maxLength: 1500
          minLength: 0
          type: string
        name:
          type: string
        widgetType:
          enum:
          - "oldLineChart, investigatedTrend, launchStatistics, statisticTrend, casesTrend,\
            \ notPassed, overallStatistics, uniqueBugTable, bugTrend, activityStream,\
            \ launchesComparisonChart, launchesDurationChart, launchesTable, topTestCases,\
            \ flakyTestCases, passingRateSummary, passingRatePerLaunch, productStatus,\
            \ mostTimeConsuming, cumulative, topPatternTemplates, componentHealthCheck,\
            \ componentHealthCheckTable, testCaseSearch"
          type: string
        contentParameters:
          $ref: '#/components/schemas/ContentParameters'
        filterIds:
          items:
            format: int64
            type: integer
          type: array
      required:
      - name
      - widgetType
    UpdateIssueSubTypeRQ:
      example:
        ids:
        - color: string
          shortName: string
          locator: locator
          typeRef: typeRef
          longName: longName
        - color: string
          shortName: string
          locator: locator
          typeRef: typeRef
          longName: longName
      properties:
        ids:
          items:
            $ref: '#/components/schemas/UpdateOneIssueSubTypeRQ'
          type: array
      required:
      - ids
    UpdateOneIssueSubTypeRQ:
      example:
        color: string
        shortName: string
        locator: locator
        typeRef: typeRef
        longName: longName
      properties:
        locator:
          type: string
        typeRef:
          type: string
        longName:
          maxLength: 55
          minLength: 3
          type: string
        shortName:
          example: string
          maxLength: 4
          minLength: 1
          type: string
        color:
          example: string
          maxLength: 55
          minLength: 3
          pattern: "#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
          type: string
      required:
      - color
      - locator
      - longName
      - shortName
      - typeRef
    UpdatePatternTemplateRQ:
      example:
        name: name
        enabled: true
      properties:
        name:
          maxLength: 55
          minLength: 1
          type: string
        enabled:
          type: boolean
      required:
      - enabled
      - name
    ItemAttributeResource:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          maxLength: 2147483647
          minLength: 1
          type: string
      required:
      - value
    SenderCaseDTO:
      example:
        attributesOperator: "AND, OR"
        launchNames:
        - launchNames
        - launchNames
        recipients:
        - recipients
        - recipients
        ruleName: ruleName
        ruleDetails:
          key: "{}"
        sendCase: always
        attributes:
        - value: value
          key: key
        - value: value
          key: key
        id: 0
        type: type
        enabled: true
      properties:
        id:
          format: int64
          type: integer
        ruleName:
          type: string
        recipients:
          items:
            type: string
          type: array
        sendCase:
          enum:
          - always
          - failed
          - toInvestigate
          - more10
          - more20
          - more50
          type: string
        launchNames:
          items:
            type: string
          type: array
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
          type: array
          uniqueItems: true
        enabled:
          type: boolean
        type:
          type: string
        ruleDetails:
          additionalProperties:
            type: object
        attributesOperator:
          enum:
          - "AND, OR"
          type: string
      required:
      - attributesOperator
      - ruleName
      - sendCase
    UpdateLaunchRQ:
      example:
        mode: "DEFAULT, DEBUG"
        description: description
        attributes:
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
      properties:
        mode:
          enum:
          - "DEFAULT, DEBUG"
          type: string
        description:
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
          maxItems: 256
          minItems: 0
          type: array
          uniqueItems: true
    BulkRQLongUpdateLaunchRQ:
      example:
        entities:
          key:
            mode: "DEFAULT, DEBUG"
            description: description
            attributes:
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
      properties:
        entities:
          additionalProperties:
            $ref: '#/components/schemas/UpdateLaunchRQ'
      required:
      - entities
    BulkRQLongFinishExecutionRQ:
      example:
        entities:
          key:
            description: description
            attributes:
            - system: false
              value: value
              key: key
            - system: false
              value: value
              key: key
            - system: false
              value: value
              key: key
            - system: false
              value: value
              key: key
            - system: false
              value: value
              key: key
            endTime: 2000-01-23T04:56:07.000+00:00
            status: "PASSED, FAILED, STOPPED, SKIPPED, INTERRUPTED, CANCELLED, INFO,\
              \ WARN"
      properties:
        entities:
          additionalProperties:
            $ref: '#/components/schemas/FinishExecutionRQ'
      required:
      - entities
    BulkInfoUpdateRQ:
      example:
        ids:
        - 0
        - 0
        - 0
        - 0
        - 0
        description:
          action: DELETE
          comment: comment
        attributes:
        - action: DELETE
          from:
            value: value
            key: key
          to:
            value: value
            key: key
        - action: DELETE
          from:
            value: value
            key: key
          to:
            value: value
            key: key
      properties:
        ids:
          items:
            format: int64
            type: integer
          maxItems: 2147483647
          minItems: 1
          type: array
        description:
          $ref: '#/components/schemas/Description'
        attributes:
          items:
            $ref: '#/components/schemas/UpdateItemAttributeRQ'
          type: array
      required:
      - ids
    Description:
      example:
        action: DELETE
        comment: comment
      properties:
        comment:
          type: string
        action:
          enum:
          - DELETE
          - UPDATE
          - CREATE
          type: string
    UpdateItemAttributeRQ:
      example:
        action: DELETE
        from:
          value: value
          key: key
        to:
          value: value
          key: key
      properties:
        from:
          $ref: '#/components/schemas/ItemAttributeResource'
        to:
          $ref: '#/components/schemas/ItemAttributeResource'
        action:
          enum:
          - DELETE
          - UPDATE
          - CREATE
          type: string
    DefineIssueRQ:
      example:
        issues:
        - issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          testItemId: 0
        - issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          testItemId: 0
        - issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          testItemId: 0
        - issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          testItemId: 0
        - issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          testItemId: 0
      properties:
        issues:
          items:
            $ref: '#/components/schemas/IssueDefinition'
          maxItems: 300
          minItems: 0
          type: array
      required:
      - issues
    IssueDefinition:
      example:
        issue:
          issueType: issueType
          autoAnalyzed: true
          ignoreAnalyzer: true
          comment: comment
          externalSystemIssues:
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
        testItemId: 0
      properties:
        testItemId:
          format: int64
          type: integer
        issue:
          $ref: '#/components/schemas/Issue'
      required:
      - issue
      - testItemId
    UpdateTestItemRQ:
      example:
        description: description
        attributes:
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        status: status
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
          maxItems: 256
          minItems: 0
          type: array
          uniqueItems: true
        description:
          type: string
        status:
          type: string
    SuggestInfo:
      example:
        relevantLogId: 7
        userChoice: 1
        relevantItem: 2
        minShouldMatch: 1
        testItem: 6
        testItemLogId: 1
        project: 0
        modelFeatureValues: modelFeatureValues
        methodName: methodName
        usedLogLines: 7
        clusterId: 6
        modelFeatureNames: modelFeatureNames
        processedTime: 1.0246457
        launchNumber: 5
        issueType: issueType
        isMergedLog: true
        launchId: 5
        launchName: launchName
        matchScore: 9.301444
        esPosition: 4
        modelInfo: modelInfo
        resultPosition: 3
        esScore: 2.027123
      properties:
        project:
          format: int64
          type: integer
        testItem:
          format: int64
          type: integer
        testItemLogId:
          format: int64
          type: integer
        launchId:
          format: int64
          type: integer
        launchName:
          type: string
        launchNumber:
          format: int64
          type: integer
        issueType:
          type: string
        relevantItem:
          format: int64
          type: integer
        relevantLogId:
          format: int64
          type: integer
        isMergedLog:
          type: boolean
        matchScore:
          format: float
          type: number
        resultPosition:
          format: int32
          type: integer
        esScore:
          format: float
          type: number
        esPosition:
          format: int32
          type: integer
        modelFeatureNames:
          type: string
        modelFeatureValues:
          type: string
        modelInfo:
          type: string
        usedLogLines:
          format: int32
          type: integer
        minShouldMatch:
          format: int32
          type: integer
        processedTime:
          format: float
          type: number
        userChoice:
          format: int32
          type: integer
        methodName:
          type: string
        clusterId:
          format: int64
          type: integer
    UnlinkExternalIssueRQ:
      example:
        testItemIds:
        - 0
        - 0
        - 0
        - 0
        - 0
        ticketIds:
        - ticketIds
        - ticketIds
        - ticketIds
        - ticketIds
        - ticketIds
      properties:
        testItemIds:
          items:
            format: int64
            type: integer
          maxItems: 300
          minItems: 0
          type: array
        ticketIds:
          items:
            type: string
          maxItems: 300
          minItems: 0
          type: array
      required:
      - testItemIds
      - ticketIds
    LinkExternalIssueRQ:
      example:
        testItemIds:
        - 0
        - 0
        - 0
        - 0
        - 0
        issues:
          pluginName: pluginName
          btsProject: btsProject
          submitDate: 2000-01-23T04:56:07.000+00:00
          btsUrl: btsUrl
          ticketId: ticketId
          url: url
      properties:
        testItemIds:
          items:
            format: int64
            type: integer
          maxItems: 300
          minItems: 0
          type: array
        issues:
          $ref: '#/components/schemas/ExternalSystemIssue'
      required:
      - issues
      - testItemIds
    BulkUpdateFilterRQ:
      example:
        name: name
        description: description
        orders:
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        id: id
        type: "launch, testitem, log"
        conditions:
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
      properties:
        description:
          maxLength: 1500
          minLength: 0
          type: string
        name:
          type: string
        type:
          enum:
          - "launch, testitem, log"
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/UserFilterCondition'
          maxItems: 20
          minItems: 1
          type: array
          uniqueItems: true
        orders:
          items:
            $ref: '#/components/schemas/Order'
          maxItems: 2147483647
          minItems: 1
          type: array
        id:
          type: string
      required:
      - conditions
      - id
      - name
      - orders
      - type
    CollectionsRQBulkUpdateFilterRQ:
      example:
        elements:
        - name: name
          description: description
          orders:
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          id: id
          type: "launch, testitem, log"
          conditions:
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
        - name: name
          description: description
          orders:
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          id: id
          type: "launch, testitem, log"
          conditions:
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
      properties:
        elements:
          items:
            $ref: '#/components/schemas/BulkUpdateFilterRQ'
          type: array
      required:
      - elements
    Order:
      example:
        sortingColumn: sortingColumn
        isAsc: true
      properties:
        sortingColumn:
          type: string
        isAsc:
          type: boolean
      required:
      - isAsc
      - sortingColumn
    UserFilterCondition:
      example:
        condition: condition
        filteringField: filteringField
        value: value
      properties:
        filteringField:
          type: string
        condition:
          type: string
        value:
          type: string
      required:
      - condition
      - filteringField
      - value
    UpdateUserFilterRQ:
      example:
        name: name
        description: description
        orders:
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        type: "launch, testitem, log"
        conditions:
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
      properties:
        description:
          maxLength: 1500
          minLength: 0
          type: string
        name:
          type: string
        type:
          enum:
          - "launch, testitem, log"
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/UserFilterCondition'
          maxItems: 20
          minItems: 1
          type: array
          uniqueItems: true
        orders:
          items:
            $ref: '#/components/schemas/Order'
          maxItems: 2147483647
          minItems: 1
          type: array
      required:
      - conditions
      - name
      - orders
      - type
    Position:
      example:
        positionY: 2
        positionX: 5
      properties:
        positionX:
          format: int32
          type: integer
        positionY:
          format: int32
          type: integer
    Size:
      example:
        width: 1
        height: 5
      properties:
        width:
          format: int32
          type: integer
        height:
          format: int32
          type: integer
    UpdateDashboardRQ:
      example:
        name: name
        description: description
        updateWidgets:
        - widgetName: widgetName
          widgetOptions:
            key: "{}"
          widgetId: 6
          widgetSize:
            width: 1
            height: 5
          widgetPosition:
            positionY: 2
            positionX: 5
          widgetType: widgetType
        - widgetName: widgetName
          widgetOptions:
            key: "{}"
          widgetId: 6
          widgetSize:
            width: 1
            height: 5
          widgetPosition:
            positionY: 2
            positionX: 5
          widgetType: widgetType
      properties:
        description:
          maxLength: 1500
          minLength: 0
          type: string
        name:
          type: string
        updateWidgets:
          items:
            $ref: '#/components/schemas/WidgetObjectModel'
          type: array
      required:
      - name
    WidgetObjectModel:
      example:
        widgetName: widgetName
        widgetOptions:
          key: "{}"
        widgetId: 6
        widgetSize:
          width: 1
          height: 5
        widgetPosition:
          positionY: 2
          positionX: 5
        widgetType: widgetType
      properties:
        widgetName:
          type: string
        widgetId:
          format: int64
          type: integer
        widgetType:
          type: string
        widgetSize:
          $ref: '#/components/schemas/Size'
        widgetPosition:
          $ref: '#/components/schemas/Position'
        widgetOptions:
          additionalProperties:
            type: object
      required:
      - widgetId
    AddWidgetRq:
      example:
        addWidget:
          widgetName: widgetName
          widgetOptions:
            key: "{}"
          widgetId: 6
          widgetSize:
            width: 1
            height: 5
          widgetPosition:
            positionY: 2
            positionX: 5
          widgetType: widgetType
      properties:
        addWidget:
          $ref: '#/components/schemas/WidgetObjectModel'
      required:
      - addWidget
    UpdateSettingsRq:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
    ProjectConfigurationUpdate:
      example:
        attributes:
          key: attributes
      properties:
        attributes:
          additionalProperties:
            type: string
      required:
      - attributes
    UpdateProjectRQ:
      example:
        configuration:
          attributes:
            key: attributes
        users:
          key: users
      properties:
        users:
          additionalProperties:
            type: string
        configuration:
          $ref: '#/components/schemas/ProjectConfigurationUpdate'
    UnassignUsersRQ:
      example:
        userNames:
        - userNames
        - userNames
      properties:
        userNames:
          items:
            type: string
          type: array
      required:
      - userNames
    ProjectNotificationConfigDTO:
      example:
        cases:
        - attributesOperator: "AND, OR"
          launchNames:
          - launchNames
          - launchNames
          recipients:
          - recipients
          - recipients
          ruleName: ruleName
          ruleDetails:
            key: "{}"
          sendCase: always
          attributes:
          - value: value
            key: key
          - value: value
            key: key
          id: 0
          type: type
          enabled: true
        - attributesOperator: "AND, OR"
          launchNames:
          - launchNames
          - launchNames
          recipients:
          - recipients
          - recipients
          ruleName: ruleName
          ruleDetails:
            key: "{}"
          sendCase: always
          attributes:
          - value: value
            key: key
          - value: value
            key: key
          id: 0
          type: type
          enabled: true
        enabled: true
      properties:
        enabled:
          type: boolean
        cases:
          items:
            $ref: '#/components/schemas/SenderCaseDTO'
          type: array
    AssignUsersRQ:
      example:
        userNames:
          key: userNames
      properties:
        userNames:
          additionalProperties:
            type: string
      required:
      - userNames
    UpdatePluginStateRQ:
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
    IntegrationRQ:
      example:
        integrationParameters:
          key: "{}"
        name: name
        enabled: true
      properties:
        name:
          type: string
        integrationParameters:
          additionalProperties:
            type: object
        enabled:
          type: boolean
    EditUserRQ:
      example:
        role: role
        accountType: "INTERNAL, SCIM"
        externalId: externalId
        active: true
        fullName: string
        email: email
      properties:
        email:
          type: string
        externalId:
          type: string
        active:
          type: boolean
        role:
          type: string
        accountType:
          enum:
          - "INTERNAL, SCIM"
          type: string
        fullName:
          example: string
          maxLength: 256
          minLength: 3
          pattern: "(\\s*[\\pL0-9-_\\.]+\\s*)+"
          type: string
      required:
      - fullName
    SuccessfulUpdate:
      example:
        message: The update was completed successfully.
      properties:
        message:
          example: The update was completed successfully.
          type: string
    Problem:
      description: "Problem Details for HTTP APIs [RFC 9457](https://tools.ietf.org/html/rfc9457).\
        \  A Problem JSON object uses the media type `application/problem+json`."
      example:
        instance: /some/uri-reference#specific-occurrence-context
        detail: some description for the error situation
        type: /problems/user-authorization-failed
        title: some title for the error situation
        status: 401
      properties:
        type:
          description: "A URI reference that uniquely identifies the problem type\
            \ only in the context of the provided API. Opposed to the specification\
            \ in RFC-9457, it is neither recommended to be dereferenceable and point\
            \ to a human-readable documentation nor globally unique for the problem\
            \ type. "
          example: /problems/user-authorization-failed
          type: string
        title:
          description: "A short summary of the problem type. Written in English and\
            \ readable for engineers, usually not suited for non technical stakeholders\
            \ and not localized. "
          example: some title for the error situation
          type: string
        status:
          description: 'The HTTP status code generated by the origin server for this
            occurrence of the problem. '
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        detail:
          description: "A human readable explanation specific to this occurrence of\
            \ the problem that is helpful to locate the problem and give advice on\
            \ how to proceed. Written in English and readable for engineers, usually\
            \ not suited for non technical stakeholders and not localized. "
          example: some description for the error situation
          type: string
        instance:
          description: "A URI reference that identifies the specific occurrence of\
            \ the problem, e.g. by adding a fragment identifier or sub-path to the\
            \ problem type. May be used to locate the root of this problem in the\
            \ source code. "
          example: /some/uri-reference#specific-occurrence-context
          type: string
    AddProjectToGroupByIdRequest:
      example:
        permission: PROJECT_MANAGER
      properties:
        permission:
          enum:
          - PROJECT_MANAGER
          - MEMBER
          - OPERATOR
          - CUSTOMER
          type: string
    UpdateGroupRequest:
      description: Update group request.
      example:
        name: name
        slug: slug
      properties:
        name:
          description: Display name.
          maxLength: 60
          minLength: 3
          pattern: "^[A-Za-z0-9.'_\\- ]+$"
          type: string
        slug:
          description: "A slug is used to identify a resource. It should be unique\
            \ and contain only lowercase letters, numbers, and hyphens. It should\
            \ not start or end with a hyphen."
          maxLength: 60
          minLength: 3
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
      required:
      - name
    File:
      example:
        name: name
      properties:
        name:
          type: string
    SaveLogRQ:
      example:
        file:
          name: name
        level: "error, warn, info, debug, trace, fatal, unknown"
        time: 2000-01-23T04:56:07.000+00:00
        launchUuid: launchUuid
        message: message
        uuid: uuid
        itemUuid: itemUuid
      properties:
        itemUuid:
          description: UUID of test item owned this log
          type: string
        uuid:
          type: string
        launchUuid:
          type: string
        time:
          format: date-time
          type: string
        message:
          type: string
        level:
          enum:
          - "error, warn, info, debug, trace, fatal, unknown"
          type: string
        file:
          $ref: '#/components/schemas/File'
      required:
      - launchUuid
      - time
    BatchElementCreatedRS:
      example:
        id: id
        stackTrace: stackTrace
        message: message
      properties:
        id:
          type: string
        message:
          type: string
        stackTrace:
          type: string
    BatchSaveOperatingRS:
      example:
        responses:
        - id: id
          stackTrace: stackTrace
          message: message
        - id: id
          stackTrace: stackTrace
          message: message
      properties:
        responses:
          items:
            $ref: '#/components/schemas/BatchElementCreatedRS'
          type: array
    EntryCreatedAsyncRS:
      example:
        id: id
      properties:
        id:
          type: string
    StartLaunchRQ:
      description: Start launch request body
      example:
        mode: DEFAULT
        rerunOf: rerunOf
        name: name
        description: description
        startTime: 2000-01-23T04:56:07.000+00:00
        attributes:
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        uuid: uuid
        rerun: true
      properties:
        startTime:
          format: date-time
          type: string
        name:
          type: string
        description:
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributesRQ'
          maxItems: 256
          minItems: 0
          type: array
          uniqueItems: true
        uuid:
          type: string
        mode:
          enum:
          - DEFAULT
          - DEBUG
          type: string
        rerun:
          type: boolean
        rerunOf:
          description: UUID of desired launch to rerun
          type: string
      required:
      - name
      - startTime
      - uuid
    StartLaunchRS:
      example:
        number: 0
        id: id
      properties:
        id:
          type: string
        number:
          format: int64
          type: integer
    MergeLaunchesRQ:
      description: Merge launches request body
      example:
        mode: DEFAULT
        extendSuitesDescription: true
        name: name
        mergeType: "BASIC, DEEP"
        description: description
        attributes:
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        launches:
        - 0
        - 0
      properties:
        name:
          type: string
        description:
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
          maxItems: 256
          minItems: 0
          type: array
          uniqueItems: true
        startTime:
          format: date-time
          type: string
        mode:
          enum:
          - DEFAULT
          - DEBUG
          type: string
        launches:
          description: A set of IDs of the launches to be merged.
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        endTime:
          format: date-time
          type: string
        mergeType:
          enum:
          - "BASIC, DEEP"
          type: string
        extendSuitesDescription:
          type: boolean
      required:
      - extendSuitesDescription
      - launches
      - mergeType
      - name
    LaunchResourceOld:
      example:
        owner: owner
        metadata:
          key: ""
        analysing:
        - analysing
        - analysing
        description: description
        uuid: uuid
        rerun: true
        mode: DEFAULT
        number: 6
        hasRetries: true
        name: name
        approximateDuration: 1.4658129805029452
        startTime: 2000-01-23T04:56:07.000+00:00
        attributes:
        - value: value
          key: key
        - value: value
          key: key
        id: 0
        endTime: 2000-01-23T04:56:07.000+00:00
        lastModified: 2000-01-23T04:56:07.000+00:00
        retentionPolicy: IMPORTANT
        status: status
        statistics:
          executions:
            key: 6
          defects:
            key:
              key: 1
      properties:
        owner:
          type: string
        description:
          maxLength: 2048
          minLength: 0
          type: string
        id:
          format: int64
          type: integer
        uuid:
          type: string
        name:
          maxLength: 256
          minLength: 3
          type: string
        number:
          format: int64
          type: integer
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        lastModified:
          format: date-time
          type: string
        status:
          type: string
        statistics:
          $ref: '#/components/schemas/StatisticsResource'
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
          type: array
          uniqueItems: true
        mode:
          enum:
          - DEFAULT
          - DEBUG
          type: string
        analysing:
          items:
            type: string
          type: array
          uniqueItems: true
        approximateDuration:
          format: double
          type: number
        hasRetries:
          type: boolean
        rerun:
          type: boolean
        metadata:
          additionalProperties: true
          type: object
        retentionPolicy:
          enum:
          - IMPORTANT
          - REGULAR
          type: string
      required:
      - id
      - name
      - number
      - startTime
      - status
      - uuid
    StatisticsResource:
      example:
        executions:
          key: 6
        defects:
          key:
            key: 1
      properties:
        executions:
          additionalProperties:
            format: int32
            type: integer
        defects:
          additionalProperties:
            additionalProperties:
              format: int32
              type: integer
    LaunchResource:
      example:
        owner: owner
        metadata:
          key: ""
        analysing:
        - analysing
        - analysing
        description: description
        uuid: uuid
        rerun: true
        mode: DEFAULT
        number: 6
        hasRetries: true
        name: name
        approximateDuration: 1.4658129805029452
        startTime: 2000-01-23T04:56:07.000+00:00
        attributes:
        - value: value
          key: key
        - value: value
          key: key
        id: 0
        endTime: 2000-01-23T04:56:07.000+00:00
        lastModified: 2000-01-23T04:56:07.000+00:00
        retentionPolicy: IMPORTANT
        status: status
        statistics:
          executions:
            key: 6
          defects:
            key:
              key: 1
      properties:
        owner:
          type: string
        description:
          maxLength: 2048
          minLength: 0
          type: string
        id:
          format: int64
          type: integer
        uuid:
          type: string
        name:
          maxLength: 256
          minLength: 3
          type: string
        number:
          format: int64
          type: integer
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        lastModified:
          format: date-time
          type: string
        status:
          type: string
        statistics:
          $ref: '#/components/schemas/StatisticsResource'
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
          type: array
          uniqueItems: true
        mode:
          enum:
          - DEFAULT
          - DEBUG
          type: string
        analysing:
          items:
            type: string
          type: array
          uniqueItems: true
        approximateDuration:
          format: double
          type: number
        hasRetries:
          type: boolean
        rerun:
          type: boolean
        metadata:
          additionalProperties: true
          type: object
        retentionPolicy:
          enum:
          - IMPORTANT
          - REGULAR
          type: string
      required:
      - id
      - name
      - number
      - startTime
      - status
      - uuid
    ParameterResource:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
    StartTestItemRQ:
      example:
        codeRef: codeRef
        retryOf: retryOf
        description: description
        type: "SUITE, STORY, TEST, SCENARIO, STEP, BEFORE_CLASS, BEFORE_GROUPS,BEFORE_METHOD,\
          \ BEFORE_SUITE, BEFORE_TEST, AFTER_CLASS, AFTER_GROUPS, AFTER_METHOD, AFTER_SUITE,\
          \ AFTER_TEST"
        uuid: uuid
        name: name
        startTime: 2000-01-23T04:56:07.000+00:00
        attributes:
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        - system: false
          value: value
          key: key
        launchUuid: launchUuid
        parameters:
        - value: value
          key: key
        - value: value
          key: key
        uniqueId: uniqueId
        retry: true
        hasStats: true
        testCaseId: testCaseId
      properties:
        startTime:
          format: date-time
          type: string
        launchUuid:
          description: UUID of parent launch
          type: string
        name:
          type: string
        description:
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributesRQ'
          maxItems: 256
          minItems: 0
          type: array
          uniqueItems: true
        uuid:
          type: string
        codeRef:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/ParameterResource'
          type: array
        uniqueId:
          maxLength: 1024
          minLength: 0
          type: string
        testCaseId:
          type: string
        type:
          enum:
          - "SUITE, STORY, TEST, SCENARIO, STEP, BEFORE_CLASS, BEFORE_GROUPS,BEFORE_METHOD,\
            \ BEFORE_SUITE, BEFORE_TEST, AFTER_CLASS, AFTER_GROUPS, AFTER_METHOD,\
            \ AFTER_SUITE, AFTER_TEST"
          type: string
        retry:
          type: boolean
        hasStats:
          type: boolean
        retryOf:
          type: string
      required:
      - launchUuid
      - name
      - startTime
      - type
      - uuid
    EntryCreatedRS:
      example:
        id: 0
      properties:
        id:
          format: int64
          type: integer
    WidgetPreviewRQ:
      example:
        filterIds:
        - 0
        - 0
        contentParameters:
          widgetOptions:
            key: "{}"
          contentFields:
          - contentFields
          - contentFields
          itemsCount: 6
        widgetType: "oldLineChart, investigatedTrend, launchStatistics, statisticTrend,\
          \ casesTrend, notPassed, overallStatistics, uniqueBugTable, bugTrend, activityStream,\
          \ launchesComparisonChart, launchesDurationChart, launchesTable, topTestCases,\
          \ flakyTestCases, passingRateSummary, passingRatePerLaunch, productStatus,\
          \ mostTimeConsuming, cumulative"
      properties:
        widgetType:
          enum:
          - "oldLineChart, investigatedTrend, launchStatistics, statisticTrend, casesTrend,\
            \ notPassed, overallStatistics, uniqueBugTable, bugTrend, activityStream,\
            \ launchesComparisonChart, launchesDurationChart, launchesTable, topTestCases,\
            \ flakyTestCases, passingRateSummary, passingRatePerLaunch, productStatus,\
            \ mostTimeConsuming, cumulative"
          type: string
        contentParameters:
          $ref: '#/components/schemas/ContentParameters'
        filterIds:
          items:
            format: int64
            type: integer
          type: array
      required:
      - widgetType
    CreateIssueSubTypeRQ:
      example:
        color: string
        shortName: string
        typeRef: typeRef
        longName: longName
      properties:
        typeRef:
          type: string
        longName:
          maxLength: 55
          minLength: 3
          type: string
        shortName:
          example: string
          maxLength: 4
          minLength: 1
          type: string
        color:
          example: string
          pattern: "#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
          type: string
      required:
      - color
      - longName
      - shortName
      - typeRef
    IssueSubTypeCreatedRS:
      example:
        id: 0
        locator: locator
      properties:
        id:
          format: int64
          type: integer
        locator:
          type: string
    CreatePatternTemplateRQ:
      example:
        name: name
        type: type
        value: value
        enabled: true
      properties:
        name:
          maxLength: 55
          minLength: 1
          type: string
        value:
          type: string
        type:
          type: string
        enabled:
          type: boolean
      required:
      - enabled
      - name
      - type
      - value
    GetLogsUnderRq:
      example:
        logLevel: "error, warn, info, debug, trace, fatal, unknown"
        itemIds:
        - 0
        - 0
      properties:
        itemIds:
          items:
            format: int64
            type: integer
          type: array
        logLevel:
          enum:
          - "error, warn, info, debug, trace, fatal, unknown"
          type: string
      required:
      - itemIds
      - logLevel
    BinaryContent:
      example:
        thumbnailId: thumbnailId
        id: id
        contentType: contentType
      properties:
        id:
          type: string
        thumbnailId:
          type: string
        contentType:
          type: string
      required:
      - contentType
      - id
      - thumbnailId
    LogResource:
      example:
        itemId: 6
        launchId: 1
        thumbnail: thumbnail
        level: "error, warn, info, debug, trace, fatal, unknown"
        id: 0
        time: 2000-01-23T04:56:07.000+00:00
        message: message
        uuid: uuid
        binaryContent:
          thumbnailId: thumbnailId
          id: id
          contentType: contentType
      properties:
        id:
          format: int64
          type: integer
        uuid:
          type: string
        time:
          format: date-time
          type: string
        message:
          type: string
        binaryContent:
          $ref: '#/components/schemas/BinaryContent'
        thumbnail:
          type: string
        level:
          enum:
          - "error, warn, info, debug, trace, fatal, unknown"
          type: string
        itemId:
          format: int64
          type: integer
        launchId:
          format: int64
          type: integer
      required:
      - id
      - uuid
    SearchLogRq:
      example:
        filterId: 0
        searchMode: "currentLaunch, launchName, filter"
      properties:
        filterId:
          format: int64
          type: integer
        searchMode:
          enum:
          - "currentLaunch, launchName, filter"
          type: string
      required:
      - searchMode
    ItemPathName:
      example:
        name: name
        id: 2
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
    LaunchPathName:
      example:
        number: 5
        name: name
      properties:
        name:
          type: string
        number:
          format: int32
          type: integer
    LogEntry:
      example:
        level: level
        message: message
      properties:
        message:
          type: string
        level:
          type: string
    PathNameResource:
      example:
        launchPathName:
          number: 5
          name: name
        itemPaths:
        - name: name
          id: 2
        - name: name
          id: 2
      properties:
        launchPathName:
          $ref: '#/components/schemas/LaunchPathName'
        itemPaths:
          items:
            $ref: '#/components/schemas/ItemPathName'
          type: array
    SearchLogRs:
      example:
        duration: 1.4658129805029452
        launchId: 0
        itemId: 6
        path: path
        itemName: itemName
        issue:
          issueType: issueType
          autoAnalyzed: true
          ignoreAnalyzer: true
          comment: comment
          externalSystemIssues:
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
        pathNames:
          launchPathName:
            number: 5
            name: name
          itemPaths:
          - name: name
            id: 2
          - name: name
            id: 2
        patternTemplates:
        - patternTemplates
        - patternTemplates
        logs:
        - level: level
          message: message
        - level: level
          message: message
        status: status
      properties:
        launchId:
          format: int64
          type: integer
        itemId:
          format: int64
          type: integer
        itemName:
          type: string
        path:
          type: string
        pathNames:
          $ref: '#/components/schemas/PathNameResource'
        duration:
          format: double
          type: number
        status:
          type: string
        issue:
          $ref: '#/components/schemas/Issue'
        patternTemplates:
          items:
            type: string
          type: array
          uniqueItems: true
        logs:
          items:
            $ref: '#/components/schemas/LogEntry'
          type: array
    CreateClustersRQ:
      example:
        launchId: 0
        removeNumbers: true
      properties:
        launchId:
          format: int64
          type: integer
        removeNumbers:
          type: boolean
      required:
      - launchId
    AnalyzeLaunchRQ:
      example:
        analyzerTypeName: "autoAnalyzer, patternAnalyzer"
        launchId: 0
        analyzeItemsMode:
        - analyzeItemsMode
        - analyzeItemsMode
        analyzerMode: "ALL, LAUNCH_NAME, CURRENT_LAUNCH, PREVIOUS_LAUNCH, CURRENT_AND_THE_SAME_NAME"
      properties:
        launchId:
          format: int64
          type: integer
        analyzerMode:
          enum:
          - "ALL, LAUNCH_NAME, CURRENT_LAUNCH, PREVIOUS_LAUNCH, CURRENT_AND_THE_SAME_NAME"
          type: string
        analyzerTypeName:
          enum:
          - "autoAnalyzer, patternAnalyzer"
          type: string
        analyzeItemsMode:
          items:
            type: string
          type: array
      required:
      - analyzeItemsMode
      - analyzerMode
      - analyzerTypeName
      - launchId
    CreateDashboardRQ:
      example:
        name: name
        description: description
      properties:
        description:
          maxLength: 1500
          minLength: 0
          type: string
        name:
          type: string
      required:
      - name
    DashboardConfigResource:
      example:
        widgets:
        - widgetResource:
            owner: owner
            appliedFilters:
            - owner: owner
              name: name
              description: description
              orders:
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              id: 1
              conditions:
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              type: type
            - owner: owner
              name: name
              description: description
              orders:
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              id: 1
              conditions:
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              type: type
            name: name
            description: description
            id: 0
            contentParameters:
              widgetOptions:
                key: "{}"
              contentFields:
              - contentFields
              - contentFields
              itemsCount: 6
            widgetType: "oldLineChart, investigatedTrend, launchStatistics, statisticTrend,\
              \ casesTrend, notPassed, overallStatistics, uniqueBugTable, bugTrend,\
              \ activityStream, launchesComparisonChart, launchesDurationChart, launchesTable,\
              \ topTestCases, flakyTestCases, passingRateSummary, passingRatePerLaunch,\
              \ productStatus, mostTimeConsuming, cumulative"
            content:
              key: "{}"
          widgetObject:
            widgetName: widgetName
            widgetOptions:
              key: "{}"
            widgetId: 6
            widgetSize:
              width: 1
              height: 5
            widgetPosition:
              positionY: 2
              positionX: 5
            widgetType: widgetType
        - widgetResource:
            owner: owner
            appliedFilters:
            - owner: owner
              name: name
              description: description
              orders:
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              id: 1
              conditions:
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              type: type
            - owner: owner
              name: name
              description: description
              orders:
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              - sortingColumn: sortingColumn
                isAsc: true
              id: 1
              conditions:
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              - condition: condition
                filteringField: filteringField
                value: value
              type: type
            name: name
            description: description
            id: 0
            contentParameters:
              widgetOptions:
                key: "{}"
              contentFields:
              - contentFields
              - contentFields
              itemsCount: 6
            widgetType: "oldLineChart, investigatedTrend, launchStatistics, statisticTrend,\
              \ casesTrend, notPassed, overallStatistics, uniqueBugTable, bugTrend,\
              \ activityStream, launchesComparisonChart, launchesDurationChart, launchesTable,\
              \ topTestCases, flakyTestCases, passingRateSummary, passingRatePerLaunch,\
              \ productStatus, mostTimeConsuming, cumulative"
            content:
              key: "{}"
          widgetObject:
            widgetName: widgetName
            widgetOptions:
              key: "{}"
            widgetId: 6
            widgetSize:
              width: 1
              height: 5
            widgetPosition:
              positionY: 2
              positionX: 5
            widgetType: widgetType
      properties:
        widgets:
          items:
            $ref: '#/components/schemas/WidgetConfigResource'
          type: array
    DashboardPreconfiguredRq:
      example:
        name: name
        description: description
        config:
          widgets:
          - widgetResource:
              owner: owner
              appliedFilters:
              - owner: owner
                name: name
                description: description
                orders:
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                id: 1
                conditions:
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                type: type
              - owner: owner
                name: name
                description: description
                orders:
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                id: 1
                conditions:
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                type: type
              name: name
              description: description
              id: 0
              contentParameters:
                widgetOptions:
                  key: "{}"
                contentFields:
                - contentFields
                - contentFields
                itemsCount: 6
              widgetType: "oldLineChart, investigatedTrend, launchStatistics, statisticTrend,\
                \ casesTrend, notPassed, overallStatistics, uniqueBugTable, bugTrend,\
                \ activityStream, launchesComparisonChart, launchesDurationChart,\
                \ launchesTable, topTestCases, flakyTestCases, passingRateSummary,\
                \ passingRatePerLaunch, productStatus, mostTimeConsuming, cumulative"
              content:
                key: "{}"
            widgetObject:
              widgetName: widgetName
              widgetOptions:
                key: "{}"
              widgetId: 6
              widgetSize:
                width: 1
                height: 5
              widgetPosition:
                positionY: 2
                positionX: 5
              widgetType: widgetType
          - widgetResource:
              owner: owner
              appliedFilters:
              - owner: owner
                name: name
                description: description
                orders:
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                id: 1
                conditions:
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                type: type
              - owner: owner
                name: name
                description: description
                orders:
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                - sortingColumn: sortingColumn
                  isAsc: true
                id: 1
                conditions:
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                - condition: condition
                  filteringField: filteringField
                  value: value
                type: type
              name: name
              description: description
              id: 0
              contentParameters:
                widgetOptions:
                  key: "{}"
                contentFields:
                - contentFields
                - contentFields
                itemsCount: 6
              widgetType: "oldLineChart, investigatedTrend, launchStatistics, statisticTrend,\
                \ casesTrend, notPassed, overallStatistics, uniqueBugTable, bugTrend,\
                \ activityStream, launchesComparisonChart, launchesDurationChart,\
                \ launchesTable, topTestCases, flakyTestCases, passingRateSummary,\
                \ passingRatePerLaunch, productStatus, mostTimeConsuming, cumulative"
              content:
                key: "{}"
            widgetObject:
              widgetName: widgetName
              widgetOptions:
                key: "{}"
              widgetId: 6
              widgetSize:
                width: 1
                height: 5
              widgetPosition:
                positionY: 2
                positionX: 5
              widgetType: widgetType
      properties:
        description:
          maxLength: 1500
          minLength: 0
          type: string
        name:
          type: string
        config:
          $ref: '#/components/schemas/DashboardConfigResource'
      required:
      - config
      - name
    UserFilterResource:
      example:
        owner: owner
        name: name
        description: description
        orders:
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        - sortingColumn: sortingColumn
          isAsc: true
        id: 1
        conditions:
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
        - condition: condition
          filteringField: filteringField
          value: value
        type: type
      properties:
        description:
          maxLength: 1500
          minLength: 1
          type: string
        owner:
          type: string
        id:
          format: int64
          type: integer
        name:
          maxLength: 128
          minLength: 3
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/UserFilterCondition'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
        orders:
          items:
            $ref: '#/components/schemas/Order'
          maxItems: 2147483647
          minItems: 1
          type: array
        type:
          type: string
      required:
      - conditions
      - id
      - name
      - orders
      - owner
      - type
    WidgetConfigResource:
      example:
        widgetResource:
          owner: owner
          appliedFilters:
          - owner: owner
            name: name
            description: description
            orders:
            - sortingColumn: sortingColumn
              isAsc: true
            - sortingColumn: sortingColumn
              isAsc: true
            - sortingColumn: sortingColumn
              isAsc: true
            - sortingColumn: sortingColumn
              isAsc: true
            - sortingColumn: sortingColumn
              isAsc: true
            id: 1
            conditions:
            - condition: condition
              filteringField: filteringField
              value: value
            - condition: condition
              filteringField: filteringField
              value: value
            - condition: condition
              filteringField: filteringField
              value: value
            - condition: condition
              filteringField: filteringField
              value: value
            - condition: condition
              filteringField: filteringField
              value: value
            type: type
          - owner: owner
            name: name
            description: description
            orders:
            - sortingColumn: sortingColumn
              isAsc: true
            - sortingColumn: sortingColumn
              isAsc: true
            - sortingColumn: sortingColumn
              isAsc: true
            - sortingColumn: sortingColumn
              isAsc: true
            - sortingColumn: sortingColumn
              isAsc: true
            id: 1
            conditions:
            - condition: condition
              filteringField: filteringField
              value: value
            - condition: condition
              filteringField: filteringField
              value: value
            - condition: condition
              filteringField: filteringField
              value: value
            - condition: condition
              filteringField: filteringField
              value: value
            - condition: condition
              filteringField: filteringField
              value: value
            type: type
          name: name
          description: description
          id: 0
          contentParameters:
            widgetOptions:
              key: "{}"
            contentFields:
            - contentFields
            - contentFields
            itemsCount: 6
          widgetType: "oldLineChart, investigatedTrend, launchStatistics, statisticTrend,\
            \ casesTrend, notPassed, overallStatistics, uniqueBugTable, bugTrend,\
            \ activityStream, launchesComparisonChart, launchesDurationChart, launchesTable,\
            \ topTestCases, flakyTestCases, passingRateSummary, passingRatePerLaunch,\
            \ productStatus, mostTimeConsuming, cumulative"
          content:
            key: "{}"
        widgetObject:
          widgetName: widgetName
          widgetOptions:
            key: "{}"
          widgetId: 6
          widgetSize:
            width: 1
            height: 5
          widgetPosition:
            positionY: 2
            positionX: 5
          widgetType: widgetType
      properties:
        widgetObject:
          $ref: '#/components/schemas/WidgetObjectModel'
        widgetResource:
          $ref: '#/components/schemas/WidgetResource'
      required:
      - widgetObject
      - widgetResource
    WidgetResource:
      example:
        owner: owner
        appliedFilters:
        - owner: owner
          name: name
          description: description
          orders:
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          id: 1
          conditions:
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          type: type
        - owner: owner
          name: name
          description: description
          orders:
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          id: 1
          conditions:
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          type: type
        name: name
        description: description
        id: 0
        contentParameters:
          widgetOptions:
            key: "{}"
          contentFields:
          - contentFields
          - contentFields
          itemsCount: 6
        widgetType: "oldLineChart, investigatedTrend, launchStatistics, statisticTrend,\
          \ casesTrend, notPassed, overallStatistics, uniqueBugTable, bugTrend, activityStream,\
          \ launchesComparisonChart, launchesDurationChart, launchesTable, topTestCases,\
          \ flakyTestCases, passingRateSummary, passingRatePerLaunch, productStatus,\
          \ mostTimeConsuming, cumulative"
        content:
          key: "{}"
      properties:
        description:
          maxLength: 1500
          minLength: 1
          type: string
        owner:
          type: string
        id:
          format: int64
          type: integer
        name:
          maxLength: 128
          minLength: 3
          type: string
        widgetType:
          enum:
          - "oldLineChart, investigatedTrend, launchStatistics, statisticTrend, casesTrend,\
            \ notPassed, overallStatistics, uniqueBugTable, bugTrend, activityStream,\
            \ launchesComparisonChart, launchesDurationChart, launchesTable, topTestCases,\
            \ flakyTestCases, passingRateSummary, passingRatePerLaunch, productStatus,\
            \ mostTimeConsuming, cumulative"
          type: string
        contentParameters:
          $ref: '#/components/schemas/ContentParameters'
        appliedFilters:
          items:
            $ref: '#/components/schemas/UserFilterResource'
          type: array
        content:
          additionalProperties:
            type: object
      required:
      - contentParameters
      - id
      - name
      - widgetType
    CreateProjectRQ:
      example:
        entryType: INTERNAL
        projectName: string
      properties:
        projectName:
          example: string
          maxLength: 256
          minLength: 3
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        entryType:
          enum:
          - INTERNAL
          type: string
      required:
      - entryType
      - projectName
    LaunchImportRQ:
      properties:
        startTime:
          format: date-time
          type: string
        name:
          maxLength: 256
          minLength: 1
          type: string
        description:
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributesRQ'
          maxItems: 256
          minItems: 0
          type: array
          uniqueItems: true
        mode:
          enum:
          - DEFAULT
          - DEBUG
          type: string
    DemoDataRq:
      example:
        createDashboard: true
      properties:
        createDashboard:
          type: boolean
    DemoDataRs:
      example:
        dashboardId: 0
        launchIds:
        - 6
        - 6
      properties:
        dashboardId:
          format: int64
          type: integer
        launchIds:
          items:
            format: int64
            type: integer
          type: array
    AllowedValue:
      example:
        valueId: valueId
        valueName: valueName
      properties:
        valueId:
          type: string
        valueName:
          type: string
    NamedValue:
      example:
        name: name
        id: 2
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
    PostFormField:
      example:
        definedValues:
        - valueId: valueId
          valueName: valueName
        - valueId: valueId
          valueName: valueName
        commandName: commandName
        fieldName: fieldName
        namedValue:
        - name: name
          id: 2
        - name: name
          id: 2
        description: description
        id: id
        fieldType: fieldType
        value:
        - value
        - value
        required: true
      properties:
        fieldName:
          type: string
        description:
          type: string
        id:
          type: string
        fieldType:
          type: string
        required:
          type: boolean
        value:
          items:
            type: string
          type: array
        namedValue:
          items:
            $ref: '#/components/schemas/NamedValue'
          type: array
        commandName:
          type: string
        definedValues:
          items:
            $ref: '#/components/schemas/AllowedValue'
          type: array
      required:
      - id
      - required
    PostTicketRQ:
      example:
        logQuantity: 4
        password: password
        item: 6
        includeLogs: true
        backLinks:
          key: backLinks
        domain: domain
        fields:
        - definedValues:
          - valueId: valueId
            valueName: valueName
          - valueId: valueId
            valueName: valueName
          commandName: commandName
          fieldName: fieldName
          namedValue:
          - name: name
            id: 2
          - name: name
            id: 2
          description: description
          id: id
          fieldType: fieldType
          value:
          - value
          - value
          required: true
        - definedValues:
          - valueId: valueId
            valueName: valueName
          - valueId: valueId
            valueName: valueName
          commandName: commandName
          fieldName: fieldName
          namedValue:
          - name: name
            id: 2
          - name: name
            id: 2
          description: description
          id: id
          fieldType: fieldType
          value:
          - value
          - value
          required: true
        includeComments: true
        includeData: true
        username: username
        token: token
      properties:
        username:
          type: string
        password:
          type: string
        domain:
          type: string
        token:
          type: string
        fields:
          items:
            $ref: '#/components/schemas/PostFormField'
          type: array
        includeLogs:
          type: boolean
        includeData:
          type: boolean
        includeComments:
          type: boolean
        logQuantity:
          format: int32
          maximum: 50
          minimum: 0
          type: integer
        item:
          format: int64
          type: integer
        backLinks:
          additionalProperties:
            type: string
      required:
      - backLinks
      - fields
      - item
    Ticket:
      example:
        summary: summary
        pluginName: pluginName
        id: id
        url: url
        status: status
      properties:
        id:
          type: string
        summary:
          type: string
        status:
          type: string
        url:
          type: string
        pluginName:
          type: string
    SearchCriteria:
      example:
        filter_key: filter_key
        operation: "EQ, NE, CNT, NON_CNT, BTW, IN"
        value: value
      properties:
        filter_key:
          type: string
        operation:
          enum:
          - "EQ, NE, CNT, NON_CNT, BTW, IN"
          type: string
        value:
          type: string
      required:
      - filter_key
      - value
    SearchCriteriaRQ:
      example:
        search_criterias:
        - filter_key: filter_key
          operation: "EQ, NE, CNT, NON_CNT, BTW, IN"
          value: value
        - filter_key: filter_key
          operation: "EQ, NE, CNT, NON_CNT, BTW, IN"
          value: value
      properties:
        search_criterias:
          items:
            $ref: '#/components/schemas/SearchCriteria'
          type: array
          uniqueItems: true
      required:
      - search_criterias
    ActivityEventResource:
      example:
        subject_id: 1
        subject_type: user
        object_type: itemIssue
        project_id: 1
        object_name: Test item name
        subject_name: Username
        created_at: 2021-07-01T12:00:00Z
        event_name: updateItem
        details:
          history:
          - field: status
            newValue: FAILED
            oldValue: PASSED
        id: 1
        project_name: Project name
        object_id: 1
      properties:
        id:
          description: The unique ID of the activity
          example: 1
          format: int64
          type: integer
        created_at:
          description: The time the activity was created
          example: 2021-07-01T12:00:00Z
          format: date-time
          type: string
        event_name:
          description: The name of the event
          example: updateItem
          type: string
        object_id:
          description: The ID of the object on which activity was performed
          example: 1
          format: int64
          type: integer
        object_name:
          description: The name of the object on which activity was performed
          example: Test item name
          type: string
        object_type:
          description: The type of the object on which activity was performed
          example: itemIssue
          type: string
        project_id:
          description: The ID of the project
          example: 1
          format: int64
          type: integer
        project_name:
          description: The name of the project
          example: Project name
          type: string
        subject_name:
          description: The name of the subject who performed the activity
          example: Username
          type: string
        subject_type:
          description: The type of the subject who performed the activity
          example: user
          type: string
        subject_id:
          description: The ID of the subject who performed the activity
          example: 1
          type: string
        details:
          description: "The details of the activity, for example history of value"
          example:
            history:
            - field: status
              newValue: FAILED
              oldValue: PASSED
          type: object
      required:
      - created_at
      - event_name
      - id
      - object_id
      - object_name
      - object_type
      - project_id
      - project_name
      - subject_id
      - subject_name
      - subject_type
    PagedResponseActivityEventResource:
      example:
        offset: 0
        total_count: 1
        limit: 6
        sort: sort
        items:
        - subject_id: 1
          subject_type: user
          object_type: itemIssue
          project_id: 1
          object_name: Test item name
          subject_name: Username
          created_at: 2021-07-01T12:00:00Z
          event_name: updateItem
          details:
            history:
            - field: status
              newValue: FAILED
              oldValue: PASSED
          id: 1
          project_name: Project name
          object_id: 1
        - subject_id: 1
          subject_type: user
          object_type: itemIssue
          project_id: 1
          object_name: Test item name
          subject_name: Username
          created_at: 2021-07-01T12:00:00Z
          event_name: updateItem
          details:
            history:
            - field: status
              newValue: FAILED
              oldValue: PASSED
          id: 1
          project_name: Project name
          object_id: 1
        order: order
      properties:
        offset:
          format: int64
          type: integer
        limit:
          format: int32
          type: integer
        total_count:
          format: int64
          type: integer
        sort:
          type: string
        order:
          type: string
        items:
          items:
            $ref: '#/components/schemas/ActivityEventResource'
          type: array
      required:
      - items
      - limit
      - offset
      - order
      - sort
      - total_count
    CreateUserRQFull:
      example:
        password: password
        projectRole: "CUSTOMER, MEMBER, PROJECT_MANAGER"
        accountType: "INTERNAL, SCIM"
        active: "true"
        externalId: externalId
        fullName: string
        login: string
        accountRole: "USER, ADMINISTRATOR"
        defaultProject: defaultProject
        email: email
      properties:
        active:
          default: "true"
          type: boolean
        externalId:
          type: string
        accountType:
          enum:
          - "INTERNAL, SCIM"
          type: string
        login:
          example: string
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9-_.]+"
          type: string
        password:
          maxLength: 256
          minLength: 0
          pattern: "^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[^a-zA-Z\\d\\s])([^\\s]){8,256}$"
          type: string
        fullName:
          example: string
          maxLength: 256
          minLength: 3
          pattern: "[\\pL0-9-_ \\.]+"
          type: string
        email:
          type: string
        accountRole:
          enum:
          - "USER, ADMINISTRATOR"
          type: string
        projectRole:
          enum:
          - "CUSTOMER, MEMBER, PROJECT_MANAGER"
          type: string
        defaultProject:
          type: string
      required:
      - email
      - fullName
      - login
    CreateUserRS:
      example:
        accountType: accountType
        warning: warning
        fullName: fullName
        active: true
        externalId: externalId
        id: 0
        login: login
        accountRole: accountRole
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        warning:
          type: string
        id:
          format: int64
          type: integer
        uuid:
          format: uuid
          type: string
        login:
          type: string
        email:
          type: string
        fullName:
          type: string
        accountRole:
          type: string
        accountType:
          type: string
        active:
          type: boolean
        externalId:
          type: string
    ApiKeyRQ:
      example:
        name: name
      properties:
        name:
          pattern: "[A-Za-z0-9-._~+/]+$"
          type: string
      required:
      - name
    ApiKeyRS:
      example:
        last_used_at: 2000-01-23T04:56:07.000+00:00
        user_id: 6
        api_key: api_key
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        user_id:
          format: int64
          type: integer
        created_at:
          format: date-time
          type: string
        last_used_at:
          format: date-time
          type: string
        api_key:
          type: string
      required:
      - created_at
      - id
      - name
      - user_id
    CreateUserRQConfirm:
      example:
        password: password
        fullName: string
        login: string
        email: email
      properties:
        login:
          example: string
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9-_.]+"
          type: string
        password:
          maxLength: 256
          minLength: 8
          pattern: "^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[^a-zA-Z\\d\\s])([^\\s]){8,256}$"
          type: string
        fullName:
          example: string
          maxLength: 256
          minLength: 3
          pattern: "[\\pL0-9-_ \\.]+"
          type: string
        email:
          type: string
      required:
      - email
      - fullName
      - login
      - password
    RestorePasswordRQ:
      example:
        email: email
      properties:
        email:
          type: string
      required:
      - email
    ResetPasswordRQ:
      example:
        password: password
        uuid: uuid
      properties:
        password:
          maxLength: 256
          minLength: 8
          pattern: "^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[^a-zA-Z\\d\\s])([^\\s]){8,256}$"
          type: string
        uuid:
          type: string
      required:
      - password
      - uuid
    ChangePasswordRQ:
      example:
        oldPassword: oldPassword
        newPassword: newPassword
      properties:
        newPassword:
          maxLength: 256
          minLength: 8
          pattern: "^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[^a-zA-Z\\d\\s])([^\\s]){8,256}$"
          type: string
        oldPassword:
          type: string
      required:
      - newPassword
      - oldPassword
    CreateUserRQ:
      example:
        role: role
        defaultProject: defaultProject
        email: email
      properties:
        email:
          type: string
        role:
          type: string
        defaultProject:
          type: string
      required:
      - defaultProject
      - email
      - role
    CreateUserBidRS:
      example:
        backLink: backLink
        message: message
        bid: bid
      properties:
        message:
          type: string
        bid:
          type: string
        backLink:
          type: string
    GroupInfo:
      description: Group information.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 1
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: 6
        slug: slug
      properties:
        id:
          description: Resource identifier.
          format: int64
          minimum: 1
          type: integer
        uuid:
          description: Global identifier of the group.
          format: uuid
          type: string
        name:
          description: Display name.
          maxLength: 60
          minLength: 3
          pattern: "^[A-Za-z0-9.'_\\- ]+$"
          type: string
        slug:
          description: "A slug is used to identify a resource. It should be unique\
            \ and contain only lowercase letters, numbers, and hyphens. It should\
            \ not start or end with a hyphen."
          maxLength: 60
          minLength: 3
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        created_by:
          description: User ID of the user who created the group.
          format: int64
          type: integer
        created_at:
          description: Timestamp when group was created.
          format: date-time
          type: string
        updated_at:
          description: Timestamp when group was last updated.
          format: date-time
          type: string
    CreateGroupRequest:
      description: Create group request.
      example:
        name: name
        slug: slug
      properties:
        name:
          description: Display name.
          maxLength: 60
          minLength: 3
          pattern: "^[A-Za-z0-9.'_\\- ]+$"
          type: string
        slug:
          description: "A slug is used to identify a resource. It should be unique\
            \ and contain only lowercase letters, numbers, and hyphens. It should\
            \ not start or end with a hyphen."
          maxLength: 60
          minLength: 3
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
      required:
      - name
    PageMetadata:
      example:
        number: 3
        size: 2
        totalPages: 7
        hasNext: true
        totalElements: 4
      properties:
        number:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        totalElements:
          format: int64
          type: integer
        totalPages:
          format: int64
          type: integer
        hasNext:
          type: boolean
    PageObject:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - "{}"
        - "{}"
      properties:
        content:
          items:
            type: object
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    MultiValueMapStringString:
      additionalProperties:
        items:
          type: string
      properties:
        all:
          additionalProperties: {}
          writeOnly: true
        empty: {}
    IssueSubTypeResource:
      example:
        color: color
        id: 6
        shortName: shortName
        locator: locator
        typeRef: typeRef
        longName: longName
      properties:
        id:
          format: int64
          type: integer
        locator:
          type: string
        typeRef:
          type: string
        longName:
          type: string
        shortName:
          type: string
        color:
          type: string
    ProjectSettingsResource:
      example:
        project: 0
        subTypes:
          key:
          - color: color
            id: 6
            shortName: shortName
            locator: locator
            typeRef: typeRef
            longName: longName
          - color: color
            id: 6
            shortName: shortName
            locator: locator
            typeRef: typeRef
            longName: longName
      properties:
        project:
          format: int64
          type: integer
        subTypes:
          additionalProperties:
            items:
              $ref: '#/components/schemas/IssueSubTypeResource'
      required:
      - project
      - subTypes
    PageLogResource:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - itemId: 6
          launchId: 1
          thumbnail: thumbnail
          level: "error, warn, info, debug, trace, fatal, unknown"
          id: 0
          time: 2000-01-23T04:56:07.000+00:00
          message: message
          uuid: uuid
          binaryContent:
            thumbnailId: thumbnailId
            id: id
            contentType: contentType
        - itemId: 6
          launchId: 1
          thumbnail: thumbnail
          level: "error, warn, info, debug, trace, fatal, unknown"
          id: 0
          time: 2000-01-23T04:56:07.000+00:00
          message: message
          uuid: uuid
          binaryContent:
            thumbnailId: thumbnailId
            id: id
            contentType: contentType
      properties:
        content:
          items:
            $ref: '#/components/schemas/LogResource'
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedLogResource:
      example:
        itemId: 5
        launchId: 5
        thumbnail: thumbnail
        level: "error, warn, info, debug, trace, fatal, unknown"
        id: 1
        time: 2000-01-23T04:56:07.000+00:00
        message: message
        uuid: uuid
        binaryContent:
          thumbnailId: thumbnailId
          id: id
          contentType: contentType
        pagesLocation:
        - value: 0
          key: 6
        - value: 0
          key: 6
      properties:
        pagesLocation:
          items:
            $ref: '#/components/schemas/PagedLogResource_pagesLocation_inner'
          type: array
        id:
          format: int64
          type: integer
        uuid:
          type: string
        time:
          format: date-time
          type: string
        message:
          type: string
        binaryContent:
          $ref: '#/components/schemas/BinaryContent'
        thumbnail:
          type: string
        level:
          enum:
          - "error, warn, info, debug, trace, fatal, unknown"
          type: string
        itemId:
          format: int64
          type: integer
        launchId:
          format: int64
          type: integer
      required:
      - id
      - uuid
    PageLaunchResource:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - owner: owner
          metadata:
            key: ""
          analysing:
          - analysing
          - analysing
          description: description
          uuid: uuid
          rerun: true
          mode: DEFAULT
          number: 6
          hasRetries: true
          name: name
          approximateDuration: 1.4658129805029452
          startTime: 2000-01-23T04:56:07.000+00:00
          attributes:
          - value: value
            key: key
          - value: value
            key: key
          id: 0
          endTime: 2000-01-23T04:56:07.000+00:00
          lastModified: 2000-01-23T04:56:07.000+00:00
          retentionPolicy: IMPORTANT
          status: status
          statistics:
            executions:
              key: 6
            defects:
              key:
                key: 1
        - owner: owner
          metadata:
            key: ""
          analysing:
          - analysing
          - analysing
          description: description
          uuid: uuid
          rerun: true
          mode: DEFAULT
          number: 6
          hasRetries: true
          name: name
          approximateDuration: 1.4658129805029452
          startTime: 2000-01-23T04:56:07.000+00:00
          attributes:
          - value: value
            key: key
          - value: value
            key: key
          id: 0
          endTime: 2000-01-23T04:56:07.000+00:00
          lastModified: 2000-01-23T04:56:07.000+00:00
          retentionPolicy: IMPORTANT
          status: status
          statistics:
            executions:
              key: 6
            defects:
              key:
                key: 1
      properties:
        content:
          items:
            $ref: '#/components/schemas/LaunchResource'
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    ChartStatisticsContent:
      properties:
        id:
          format: int64
          type: integer
        number:
          format: int32
          type: integer
        name:
          type: string
        startTime:
          format: date-time
          type: string
        values:
          additionalProperties:
            type: string
    ClusterInfoResource:
      example:
        launchId: 1
        matchedTests: 5
        metadata:
          key: ""
        index: 6
        id: 0
        message: message
      properties:
        id:
          format: int64
          type: integer
        index:
          format: int64
          type: integer
        launchId:
          format: int64
          type: integer
        message:
          type: string
        metadata:
          additionalProperties: true
          type: object
        matchedTests:
          format: int64
          type: integer
    PageClusterInfoResource:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - launchId: 1
          matchedTests: 5
          metadata:
            key: ""
          index: 6
          id: 0
          message: message
        - launchId: 1
          matchedTests: 5
          metadata:
            key: ""
          index: 6
          id: 0
          message: message
      properties:
        content:
          items:
            $ref: '#/components/schemas/ClusterInfoResource'
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    PageTestItemResource:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - parent: 5
          testCaseHash: 9
          launchStatus: launchStatus
          issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          codeRef: codeRef
          pathNames:
            launchPathName:
              number: 5
              name: name
            itemPaths:
            - name: name
              id: 2
            - name: name
              id: 2
          hasChildren: true
          description: description
          type: type
          uuid: uuid
          launchId: 7
          path: path
          patternTemplates:
          - patternTemplates
          - patternTemplates
          name: name
          attributes:
          - value: value
            key: key
          - value: value
            key: key
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 0
          endTime: 2000-01-23T04:56:07.000+00:00
          parameters:
          - value: value
            key: key
          - value: value
            key: key
          hasStats: true
          uniqueId: uniqueId
          status: status
          statistics:
            executions:
              key: 6
            defects:
              key:
                key: 1
          testCaseId: testCaseId
        - parent: 5
          testCaseHash: 9
          launchStatus: launchStatus
          issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          codeRef: codeRef
          pathNames:
            launchPathName:
              number: 5
              name: name
            itemPaths:
            - name: name
              id: 2
            - name: name
              id: 2
          hasChildren: true
          description: description
          type: type
          uuid: uuid
          launchId: 7
          path: path
          patternTemplates:
          - patternTemplates
          - patternTemplates
          name: name
          attributes:
          - value: value
            key: key
          - value: value
            key: key
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 0
          endTime: 2000-01-23T04:56:07.000+00:00
          parameters:
          - value: value
            key: key
          - value: value
            key: key
          hasStats: true
          uniqueId: uniqueId
          status: status
          statistics:
            executions:
              key: 6
            defects:
              key:
                key: 1
          testCaseId: testCaseId
      properties:
        content:
          items:
            $ref: '#/components/schemas/TestItemResource'
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    TestItemResource:
      example:
        parent: 5
        testCaseHash: 9
        launchStatus: launchStatus
        issue:
          issueType: issueType
          autoAnalyzed: true
          ignoreAnalyzer: true
          comment: comment
          externalSystemIssues:
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
        codeRef: codeRef
        pathNames:
          launchPathName:
            number: 5
            name: name
          itemPaths:
          - name: name
            id: 2
          - name: name
            id: 2
        hasChildren: true
        description: description
        type: type
        uuid: uuid
        launchId: 7
        path: path
        patternTemplates:
        - patternTemplates
        - patternTemplates
        name: name
        attributes:
        - value: value
          key: key
        - value: value
          key: key
        startTime: 2000-01-23T04:56:07.000+00:00
        id: 0
        endTime: 2000-01-23T04:56:07.000+00:00
        parameters:
        - value: value
          key: key
        - value: value
          key: key
        hasStats: true
        uniqueId: uniqueId
        status: status
        statistics:
          executions:
            key: 6
          defects:
            key:
              key: 1
        testCaseId: testCaseId
      properties:
        id:
          format: int64
          type: integer
        uuid:
          type: string
        name:
          type: string
        codeRef:
          type: string
        description:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/ParameterResource'
          type: array
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
          type: array
          uniqueItems: true
        type:
          type: string
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        status:
          type: string
        statistics:
          $ref: '#/components/schemas/StatisticsResource'
        parent:
          format: int64
          type: integer
        pathNames:
          $ref: '#/components/schemas/PathNameResource'
        launchStatus:
          type: string
        issue:
          $ref: '#/components/schemas/Issue'
        hasChildren:
          type: boolean
        hasStats:
          type: boolean
        launchId:
          format: int64
          type: integer
        uniqueId:
          type: string
        testCaseId:
          type: string
        testCaseHash:
          format: int32
          type: integer
        patternTemplates:
          items:
            type: string
          type: array
          uniqueItems: true
        path:
          type: string
    TestItemResourceOld:
      example:
        parent: 6
        testCaseHash: 5
        codeRef: codeRef
        hasChildren: true
        description: description
        type: type
        uuid: uuid
        path: path
        patternTemplates:
        - patternTemplates
        - patternTemplates
        startTime: 2000-01-23T04:56:07.000+00:00
        id: 0
        hasStats: true
        launchStatus: launchStatus
        issue:
          issueType: issueType
          autoAnalyzed: true
          ignoreAnalyzer: true
          comment: comment
          externalSystemIssues:
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
          - pluginName: pluginName
            btsProject: btsProject
            submitDate: 2000-01-23T04:56:07.000+00:00
            btsUrl: btsUrl
            ticketId: ticketId
            url: url
        pathNames:
          launchPathName:
            number: 5
            name: name
          itemPaths:
          - name: name
            id: 2
          - name: name
            id: 2
        launchId: 1
        retries:
        - parent: 5
          testCaseHash: 9
          launchStatus: launchStatus
          issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          codeRef: codeRef
          pathNames:
            launchPathName:
              number: 5
              name: name
            itemPaths:
            - name: name
              id: 2
            - name: name
              id: 2
          hasChildren: true
          description: description
          type: type
          uuid: uuid
          launchId: 7
          path: path
          patternTemplates:
          - patternTemplates
          - patternTemplates
          name: name
          attributes:
          - value: value
            key: key
          - value: value
            key: key
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 0
          endTime: 2000-01-23T04:56:07.000+00:00
          parameters:
          - value: value
            key: key
          - value: value
            key: key
          hasStats: true
          uniqueId: uniqueId
          status: status
          statistics:
            executions:
              key: 6
            defects:
              key:
                key: 1
          testCaseId: testCaseId
        - parent: 5
          testCaseHash: 9
          launchStatus: launchStatus
          issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          codeRef: codeRef
          pathNames:
            launchPathName:
              number: 5
              name: name
            itemPaths:
            - name: name
              id: 2
            - name: name
              id: 2
          hasChildren: true
          description: description
          type: type
          uuid: uuid
          launchId: 7
          path: path
          patternTemplates:
          - patternTemplates
          - patternTemplates
          name: name
          attributes:
          - value: value
            key: key
          - value: value
            key: key
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 0
          endTime: 2000-01-23T04:56:07.000+00:00
          parameters:
          - value: value
            key: key
          - value: value
            key: key
          hasStats: true
          uniqueId: uniqueId
          status: status
          statistics:
            executions:
              key: 6
            defects:
              key:
                key: 1
          testCaseId: testCaseId
        name: name
        attributes:
        - value: value
          key: key
        - value: value
          key: key
        endTime: 2000-01-23T04:56:07.000+00:00
        parameters:
        - value: value
          key: key
        - value: value
          key: key
        uniqueId: uniqueId
        status: status
        statistics:
          executions:
            key: 6
          defects:
            key:
              key: 1
        testCaseId: testCaseId
      properties:
        id:
          format: int64
          type: integer
        uuid:
          type: string
        name:
          type: string
        codeRef:
          type: string
        description:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/ParameterResource'
          type: array
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
          type: array
          uniqueItems: true
        type:
          type: string
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        status:
          type: string
        statistics:
          $ref: '#/components/schemas/StatisticsResource'
        parent:
          format: int64
          type: integer
        pathNames:
          $ref: '#/components/schemas/PathNameResource'
        launchStatus:
          type: string
        issue:
          $ref: '#/components/schemas/Issue'
        hasChildren:
          type: boolean
        hasStats:
          type: boolean
        launchId:
          format: int64
          type: integer
        uniqueId:
          type: string
        testCaseId:
          type: string
        testCaseHash:
          format: int32
          type: integer
        patternTemplates:
          items:
            type: string
          type: array
          uniqueItems: true
        retries:
          items:
            $ref: '#/components/schemas/TestItemResource'
          type: array
        path:
          type: string
    SuggestedItem:
      example:
        suggestRs:
          relevantLogId: 7
          userChoice: 1
          relevantItem: 2
          minShouldMatch: 1
          testItem: 6
          testItemLogId: 1
          project: 0
          modelFeatureValues: modelFeatureValues
          methodName: methodName
          usedLogLines: 7
          clusterId: 6
          modelFeatureNames: modelFeatureNames
          processedTime: 1.0246457
          launchNumber: 5
          issueType: issueType
          isMergedLog: true
          launchId: 5
          launchName: launchName
          matchScore: 9.301444
          esPosition: 4
          modelInfo: modelInfo
          resultPosition: 3
          esScore: 2.027123
        testItemResource:
          parent: 5
          testCaseHash: 9
          launchStatus: launchStatus
          issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          codeRef: codeRef
          pathNames:
            launchPathName:
              number: 5
              name: name
            itemPaths:
            - name: name
              id: 2
            - name: name
              id: 2
          hasChildren: true
          description: description
          type: type
          uuid: uuid
          launchId: 7
          path: path
          patternTemplates:
          - patternTemplates
          - patternTemplates
          name: name
          attributes:
          - value: value
            key: key
          - value: value
            key: key
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 0
          endTime: 2000-01-23T04:56:07.000+00:00
          parameters:
          - value: value
            key: key
          - value: value
            key: key
          hasStats: true
          uniqueId: uniqueId
          status: status
          statistics:
            executions:
              key: 6
            defects:
              key:
                key: 1
          testCaseId: testCaseId
        logs:
        - itemId: 6
          launchId: 1
          thumbnail: thumbnail
          level: "error, warn, info, debug, trace, fatal, unknown"
          id: 0
          time: 2000-01-23T04:56:07.000+00:00
          message: message
          uuid: uuid
          binaryContent:
            thumbnailId: thumbnailId
            id: id
            contentType: contentType
        - itemId: 6
          launchId: 1
          thumbnail: thumbnail
          level: "error, warn, info, debug, trace, fatal, unknown"
          id: 0
          time: 2000-01-23T04:56:07.000+00:00
          message: message
          uuid: uuid
          binaryContent:
            thumbnailId: thumbnailId
            id: id
            contentType: contentType
      properties:
        testItemResource:
          $ref: '#/components/schemas/TestItemResource'
        logs:
          items:
            $ref: '#/components/schemas/LogResource'
          type: array
          uniqueItems: true
        suggestRs:
          $ref: '#/components/schemas/SuggestInfo'
    PageTestItemHistoryElement:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - groupingField: groupingField
          resources:
          - parent: 5
            testCaseHash: 9
            launchStatus: launchStatus
            issue:
              issueType: issueType
              autoAnalyzed: true
              ignoreAnalyzer: true
              comment: comment
              externalSystemIssues:
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
            codeRef: codeRef
            pathNames:
              launchPathName:
                number: 5
                name: name
              itemPaths:
              - name: name
                id: 2
              - name: name
                id: 2
            hasChildren: true
            description: description
            type: type
            uuid: uuid
            launchId: 7
            path: path
            patternTemplates:
            - patternTemplates
            - patternTemplates
            name: name
            attributes:
            - value: value
              key: key
            - value: value
              key: key
            startTime: 2000-01-23T04:56:07.000+00:00
            id: 0
            endTime: 2000-01-23T04:56:07.000+00:00
            parameters:
            - value: value
              key: key
            - value: value
              key: key
            hasStats: true
            uniqueId: uniqueId
            status: status
            statistics:
              executions:
                key: 6
              defects:
                key:
                  key: 1
            testCaseId: testCaseId
          - parent: 5
            testCaseHash: 9
            launchStatus: launchStatus
            issue:
              issueType: issueType
              autoAnalyzed: true
              ignoreAnalyzer: true
              comment: comment
              externalSystemIssues:
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
            codeRef: codeRef
            pathNames:
              launchPathName:
                number: 5
                name: name
              itemPaths:
              - name: name
                id: 2
              - name: name
                id: 2
            hasChildren: true
            description: description
            type: type
            uuid: uuid
            launchId: 7
            path: path
            patternTemplates:
            - patternTemplates
            - patternTemplates
            name: name
            attributes:
            - value: value
              key: key
            - value: value
              key: key
            startTime: 2000-01-23T04:56:07.000+00:00
            id: 0
            endTime: 2000-01-23T04:56:07.000+00:00
            parameters:
            - value: value
              key: key
            - value: value
              key: key
            hasStats: true
            uniqueId: uniqueId
            status: status
            statistics:
              executions:
                key: 6
              defects:
                key:
                  key: 1
            testCaseId: testCaseId
        - groupingField: groupingField
          resources:
          - parent: 5
            testCaseHash: 9
            launchStatus: launchStatus
            issue:
              issueType: issueType
              autoAnalyzed: true
              ignoreAnalyzer: true
              comment: comment
              externalSystemIssues:
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
            codeRef: codeRef
            pathNames:
              launchPathName:
                number: 5
                name: name
              itemPaths:
              - name: name
                id: 2
              - name: name
                id: 2
            hasChildren: true
            description: description
            type: type
            uuid: uuid
            launchId: 7
            path: path
            patternTemplates:
            - patternTemplates
            - patternTemplates
            name: name
            attributes:
            - value: value
              key: key
            - value: value
              key: key
            startTime: 2000-01-23T04:56:07.000+00:00
            id: 0
            endTime: 2000-01-23T04:56:07.000+00:00
            parameters:
            - value: value
              key: key
            - value: value
              key: key
            hasStats: true
            uniqueId: uniqueId
            status: status
            statistics:
              executions:
                key: 6
              defects:
                key:
                  key: 1
            testCaseId: testCaseId
          - parent: 5
            testCaseHash: 9
            launchStatus: launchStatus
            issue:
              issueType: issueType
              autoAnalyzed: true
              ignoreAnalyzer: true
              comment: comment
              externalSystemIssues:
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
              - pluginName: pluginName
                btsProject: btsProject
                submitDate: 2000-01-23T04:56:07.000+00:00
                btsUrl: btsUrl
                ticketId: ticketId
                url: url
            codeRef: codeRef
            pathNames:
              launchPathName:
                number: 5
                name: name
              itemPaths:
              - name: name
                id: 2
              - name: name
                id: 2
            hasChildren: true
            description: description
            type: type
            uuid: uuid
            launchId: 7
            path: path
            patternTemplates:
            - patternTemplates
            - patternTemplates
            name: name
            attributes:
            - value: value
              key: key
            - value: value
              key: key
            startTime: 2000-01-23T04:56:07.000+00:00
            id: 0
            endTime: 2000-01-23T04:56:07.000+00:00
            parameters:
            - value: value
              key: key
            - value: value
              key: key
            hasStats: true
            uniqueId: uniqueId
            status: status
            statistics:
              executions:
                key: 6
              defects:
                key:
                  key: 1
            testCaseId: testCaseId
      properties:
        content:
          items:
            $ref: '#/components/schemas/TestItemHistoryElement'
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    TestItemHistoryElement:
      example:
        groupingField: groupingField
        resources:
        - parent: 5
          testCaseHash: 9
          launchStatus: launchStatus
          issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          codeRef: codeRef
          pathNames:
            launchPathName:
              number: 5
              name: name
            itemPaths:
            - name: name
              id: 2
            - name: name
              id: 2
          hasChildren: true
          description: description
          type: type
          uuid: uuid
          launchId: 7
          path: path
          patternTemplates:
          - patternTemplates
          - patternTemplates
          name: name
          attributes:
          - value: value
            key: key
          - value: value
            key: key
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 0
          endTime: 2000-01-23T04:56:07.000+00:00
          parameters:
          - value: value
            key: key
          - value: value
            key: key
          hasStats: true
          uniqueId: uniqueId
          status: status
          statistics:
            executions:
              key: 6
            defects:
              key:
                key: 1
          testCaseId: testCaseId
        - parent: 5
          testCaseHash: 9
          launchStatus: launchStatus
          issue:
            issueType: issueType
            autoAnalyzed: true
            ignoreAnalyzer: true
            comment: comment
            externalSystemIssues:
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
            - pluginName: pluginName
              btsProject: btsProject
              submitDate: 2000-01-23T04:56:07.000+00:00
              btsUrl: btsUrl
              ticketId: ticketId
              url: url
          codeRef: codeRef
          pathNames:
            launchPathName:
              number: 5
              name: name
            itemPaths:
            - name: name
              id: 2
            - name: name
              id: 2
          hasChildren: true
          description: description
          type: type
          uuid: uuid
          launchId: 7
          path: path
          patternTemplates:
          - patternTemplates
          - patternTemplates
          name: name
          attributes:
          - value: value
            key: key
          - value: value
            key: key
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 0
          endTime: 2000-01-23T04:56:07.000+00:00
          parameters:
          - value: value
            key: key
          - value: value
            key: key
          hasStats: true
          uniqueId: uniqueId
          status: status
          statistics:
            executions:
              key: 6
            defects:
              key:
                key: 1
          testCaseId: testCaseId
      properties:
        groupingField:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/TestItemResource'
          type: array
    PageUserFilterResource:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - owner: owner
          name: name
          description: description
          orders:
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          id: 1
          conditions:
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          type: type
        - owner: owner
          name: name
          description: description
          orders:
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          id: 1
          conditions:
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          type: type
      properties:
        content:
          items:
            $ref: '#/components/schemas/UserFilterResource'
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    OwnedEntityResource:
      example:
        owner: owner
        name: name
        description: description
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        description:
          type: string
    PageOwnedEntityResource:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - owner: owner
          name: name
          description: description
          id: id
        - owner: owner
          name: name
          description: description
          id: id
      properties:
        content:
          items:
            $ref: '#/components/schemas/OwnedEntityResource'
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    DashboardResource:
      example:
        owner: owner
        name: name
        description: description
        id: 0
        widgets:
        - widgetName: widgetName
          widgetOptions:
            key: "{}"
          widgetId: 6
          widgetSize:
            width: 1
            height: 5
          widgetPosition:
            positionY: 2
            positionX: 5
          widgetType: widgetType
        - widgetName: widgetName
          widgetOptions:
            key: "{}"
          widgetId: 6
          widgetSize:
            width: 1
            height: 5
          widgetPosition:
            positionY: 2
            positionX: 5
          widgetType: widgetType
      properties:
        description:
          maxLength: 1500
          minLength: 1
          type: string
        owner:
          type: string
        id:
          format: int64
          type: integer
        name:
          maxLength: 128
          minLength: 3
          type: string
        widgets:
          items:
            $ref: '#/components/schemas/WidgetObjectModel'
          type: array
      required:
      - id
      - name
    PageDashboardResource:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - owner: owner
          name: name
          description: description
          id: 0
          widgets:
          - widgetName: widgetName
            widgetOptions:
              key: "{}"
            widgetId: 6
            widgetSize:
              width: 1
              height: 5
            widgetPosition:
              positionY: 2
              positionX: 5
            widgetType: widgetType
          - widgetName: widgetName
            widgetOptions:
              key: "{}"
            widgetId: 6
            widgetSize:
              width: 1
              height: 5
            widgetPosition:
              positionY: 2
              positionX: 5
            widgetType: widgetType
        - owner: owner
          name: name
          description: description
          id: 0
          widgets:
          - widgetName: widgetName
            widgetOptions:
              key: "{}"
            widgetId: 6
            widgetSize:
              width: 1
              height: 5
            widgetPosition:
              positionY: 2
              positionX: 5
            widgetType: widgetType
          - widgetName: widgetName
            widgetOptions:
              key: "{}"
            widgetId: 6
            widgetSize:
              width: 1
              height: 5
            widgetPosition:
              positionY: 2
              positionX: 5
            widgetType: widgetType
      properties:
        content:
          items:
            $ref: '#/components/schemas/DashboardResource'
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    ActivityResource:
      example:
        actionType: startLaunch
        objectName: Launch name
        details:
          history:
          - field: status
            newValue: FAILED
            oldValue: PASSED
        id: 1
        lastModified: 2021-07-01T12:00:00Z
        projectName: project
        user: user
        projectId: 1
        loggedObjectId: 1
        objectType: LAUNCH
      properties:
        id:
          description: The unique ID of the activity
          example: 1
          format: int64
          type: integer
        user:
          description: The user who performed the activity
          example: user
          type: string
        loggedObjectId:
          description: The ID of the object on which activity was performed
          example: 1
          format: int64
          type: integer
        lastModified:
          description: The time the activity was last modified
          example: 2021-07-01T12:00:00Z
          format: date-time
          type: string
        actionType:
          description: The type of action performed
          example: startLaunch
          type: string
        objectType:
          description: The type of object on which the activity was performed
          example: LAUNCH
          type: string
        projectId:
          description: The ID of the project in which the activity was performed
          example: 1
          format: int64
          type: integer
        projectName:
          description: The name of the project in which the activity was performed
          example: project
          type: string
        details:
          description: "The details of the activity, for example history of value"
          example:
            history:
            - field: status
              newValue: FAILED
              oldValue: PASSED
          type: object
        objectName:
          description: The name of the object on which the activity was performed
          example: Launch name
          type: string
      required:
      - actionType
      - id
      - lastModified
      - loggedObjectId
      - objectType
      - projectId
      - user
    ErrorRS:
      example:
        errorCode: INCORRECT_REQUEST
        stackTrace: stackTrace
        message: message
      properties:
        errorCode:
          enum:
          - INCORRECT_REQUEST
          - BINARY_DATA_CANNOT_BE_SAVED
          - ACCESS_DENIED
          - ADDRESS_LOCKED
          - PROJECT_NOT_FOUND
          - LAUNCH_NOT_FOUND
          - TEST_SUITE_NOT_FOUND
          - TEST_ITEM_NOT_FOUND
          - LOG_NOT_FOUND
          - ROLE_NOT_FOUND
          - USER_NOT_FOUND
          - WIDGET_NOT_FOUND
          - WIDGET_NOT_FOUND_IN_DASHBOARD
          - DASHBOARD_NOT_FOUND
          - USER_FILTER_NOT_FOUND
          - ACTIVITY_NOT_FOUND
          - UNABLE_TO_CREATE_WIDGET
          - INTEGRATION_NOT_FOUND
          - PROJECT_NOT_CONFIGURED
          - SERVER_SETTINGS_NOT_FOUND
          - ISSUE_TYPE_NOT_FOUND
          - PROJECT_SETTINGS_NOT_FOUND
          - TICKET_NOT_FOUND
          - AUTH_INTEGRATION_NOT_FOUND
          - WIDGET_NOT_FOUND_IN_PROJECT
          - USER_FILTER_NOT_FOUND_IN_PROJECT
          - DASHBOARD_NOT_FOUND_IN_PROJECT
          - PATTERN_TEMPLATE_NOT_FOUND_IN_PROJECT
          - TEST_ITEM_OR_LAUNCH_NOT_FOUND
          - ANALYZER_NOT_FOUND
          - ATTACHMENT_NOT_FOUND
          - UNABLE_TO_LOAD_BINARY_DATA
          - CLUSTER_NOT_FOUND
          - ORGANIZATION_NOT_FOUND
          - NOT_FOUND
          - INCORRECT_FILTER_PARAMETERS
          - INCORRECT_SORTING_PARAMETERS
          - INCORRECT_INTEGRATION_NAME
          - UNABLE_MODIFY_SHARABLE_RESOURCE
          - INCORRECT_AUTHENTICATION_TYPE
          - UNABLE_POST_TICKET
          - UNABLE_INTERACT_WITH_INTEGRATION
          - UNABLE_ASSIGN_UNASSIGN_USER_TO_PROJECT
          - EMAIL_CONFIGURATION_IS_INCORRECT
          - PROJECT_UPDATE_NOT_ALLOWED
          - UNABLE_TO_UPDATE_YOURSELF_ROLE
          - FORBIDDEN_OPERATION
          - RESOURCE_ALREADY_EXISTS
          - ROLE_ALREADY_EXISTS_ERROR
          - USER_ALREADY_EXISTS
          - USER_FILTER_ALREADY_EXISTS
          - PROJECT_ALREADY_EXISTS
          - DASHBOARD_UPDATE_ERROR
          - UNABLE_LOAD_WIDGET_CONTENT
          - UNABLE_ADD_TO_FAVORITE
          - INTEGRATION_ALREADY_EXISTS
          - SERVER_SETTINGS_ALREADY_EXISTS
          - UNABLE_REMOVE_FROM_FAVORITE
          - LAUNCH_IS_NOT_FINISHED
          - TEST_ITEM_IS_NOT_FINISHED
          - INCORRECT_FINISH_STATUS
          - BAD_REQUEST_ERROR
          - BAD_SAVE_LOG_REQUEST
          - REPORTING_ITEM_ALREADY_FINISHED
          - AMBIGUOUS_TEST_ITEM_STATUS
          - FAILED_TEST_ITEM_ISSUE_TYPE_DEFINITION
          - FINISH_TIME_EARLIER_THAN_START_TIME
          - FINISH_ITEM_NOT_ALLOWED
          - FINISH_LAUNCH_NOT_ALLOWED
          - START_ITEM_NOT_ALLOWED
          - CHILD_START_TIME_EARLIER_THAN_PARENT
          - UNSUPPORTED_TEST_ITEM_TYPE
          - LOGGING_IS_NOT_ALLOWED
          - BAD_SAVE_WIDGET_REQUEST
          - BAD_UPDATE_WIDGET_REQUEST
          - UNABLE_LOAD_TEST_ITEM_HISTORY
          - BAD_SAVE_USER_FILTER_REQUEST
          - RETRIES_HANDLER_ERROR
          - IMPORT_FILE_ERROR
          - PARSING_XML_ERROR
          - OBJECT_RETRIEVAL_ERROR
          - PLUGIN_UPLOAD_ERROR
          - PLUGIN_REMOVE_ERROR
          - UNABLE_TO_SAVE_CHILD_ITEM_FOR_THE_RETRY
          - PATTERN_ANALYSIS_ERROR
          - PROJECT_DOESNT_CONTAIN_USER
          - UNCLASSIFIED_REPORT_PORTAL_ERROR
          - BAD_UPDATE_PREFERENCE_REQUEST
          - UNSUPPORTED_MERGE_STRATEGY_TYPE
          - DEMO_DATA_GENERATION_ERROR
          - UNCLASSIFIED_ERROR
          type: string
        message:
          type: string
        stackTrace:
          type: string
    Page:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - "{}"
        - "{}"
      properties:
        content:
          items:
            type: object
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    IntegrationResource:
      example:
        creator: creator
        integrationType:
          groupType: groupType
          pluginType: pluginType
          name: name
          details:
            key: "{}"
          type: 2
          creationDate: 2000-01-23T04:56:07.000+00:00
          enabled: true
          authFlow: OAUTH
        integrationParameters:
          key: "{}"
        name: name
        id: 5
        creationDate: 2000-01-23T04:56:07.000+00:00
        projectId: 5
        enabled: true
      properties:
        id:
          format: int64
          type: integer
        projectId:
          format: int64
          type: integer
        name:
          type: string
        integrationType:
          $ref: '#/components/schemas/IntegrationTypeResource'
        integrationParameters:
          additionalProperties:
            type: object
        enabled:
          type: boolean
        creator:
          type: string
        creationDate:
          format: date-time
          type: string
    IntegrationTypeResource:
      example:
        groupType: groupType
        pluginType: pluginType
        name: name
        details:
          key: "{}"
        type: 2
        creationDate: 2000-01-23T04:56:07.000+00:00
        enabled: true
        authFlow: OAUTH
      properties:
        type:
          format: int64
          type: integer
        name:
          type: string
        enabled:
          type: boolean
        authFlow:
          enum:
          - OAUTH
          - BASIC
          - TOKEN
          - FORM
          - LDAP
          type: string
        creationDate:
          format: date-time
          type: string
        pluginType:
          type: string
        groupType:
          type: string
        details:
          additionalProperties:
            type: object
    PatternTemplateResource:
      example:
        name: name
        id: 1
        type: type
        value: value
        enabled: true
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        value:
          type: string
        type:
          type: string
        enabled:
          type: boolean
    ProjectConfiguration:
      example:
        notificationsConfiguration:
          cases:
          - attributesOperator: "AND, OR"
            launchNames:
            - launchNames
            - launchNames
            recipients:
            - recipients
            - recipients
            ruleName: ruleName
            ruleDetails:
              key: "{}"
            sendCase: always
            attributes:
            - value: value
              key: key
            - value: value
              key: key
            id: 0
            type: type
            enabled: true
          - attributesOperator: "AND, OR"
            launchNames:
            - launchNames
            - launchNames
            recipients:
            - recipients
            - recipients
            ruleName: ruleName
            ruleDetails:
              key: "{}"
            sendCase: always
            attributes:
            - value: value
              key: key
            - value: value
              key: key
            id: 0
            type: type
            enabled: true
          enabled: true
        patterns:
        - name: name
          id: 1
          type: type
          value: value
          enabled: true
        - name: name
          id: 1
          type: type
          value: value
          enabled: true
        attributes:
          key: attributes
        subTypes:
          key:
          - color: color
            id: 6
            shortName: shortName
            locator: locator
            typeRef: typeRef
            longName: longName
          - color: color
            id: 6
            shortName: shortName
            locator: locator
            typeRef: typeRef
            longName: longName
      properties:
        attributes:
          additionalProperties:
            type: string
        subTypes:
          additionalProperties:
            items:
              $ref: '#/components/schemas/IssueSubTypeResource'
        notificationsConfiguration:
          $ref: '#/components/schemas/ProjectNotificationConfigDTO'
        patterns:
          items:
            $ref: '#/components/schemas/PatternTemplateResource'
          type: array
      required:
      - attributes
    ProjectResource:
      example:
        entryType: entryType
        allocatedStorage: 7
        configuration:
          notificationsConfiguration:
            cases:
            - attributesOperator: "AND, OR"
              launchNames:
              - launchNames
              - launchNames
              recipients:
              - recipients
              - recipients
              ruleName: ruleName
              ruleDetails:
                key: "{}"
              sendCase: always
              attributes:
              - value: value
                key: key
              - value: value
                key: key
              id: 0
              type: type
              enabled: true
            - attributesOperator: "AND, OR"
              launchNames:
              - launchNames
              - launchNames
              recipients:
              - recipients
              - recipients
              ruleName: ruleName
              ruleDetails:
                key: "{}"
              sendCase: always
              attributes:
              - value: value
                key: key
              - value: value
                key: key
              id: 0
              type: type
              enabled: true
            enabled: true
          patterns:
          - name: name
            id: 1
            type: type
            value: value
            enabled: true
          - name: name
            id: 1
            type: type
            value: value
            enabled: true
          attributes:
            key: attributes
          subTypes:
            key:
            - color: color
              id: 6
              shortName: shortName
              locator: locator
              typeRef: typeRef
              longName: longName
            - color: color
              id: 6
              shortName: shortName
              locator: locator
              typeRef: typeRef
              longName: longName
        organization: organization
        projectName: projectName
        creationDate: 2000-01-23T04:56:07.000+00:00
        projectId: 0
        integrations:
        - creator: creator
          integrationType:
            groupType: groupType
            pluginType: pluginType
            name: name
            details:
              key: "{}"
            type: 2
            creationDate: 2000-01-23T04:56:07.000+00:00
            enabled: true
            authFlow: OAUTH
          integrationParameters:
            key: "{}"
          name: name
          id: 5
          creationDate: 2000-01-23T04:56:07.000+00:00
          projectId: 5
          enabled: true
        - creator: creator
          integrationType:
            groupType: groupType
            pluginType: pluginType
            name: name
            details:
              key: "{}"
            type: 2
            creationDate: 2000-01-23T04:56:07.000+00:00
            enabled: true
            authFlow: OAUTH
          integrationParameters:
            key: "{}"
          name: name
          id: 5
          creationDate: 2000-01-23T04:56:07.000+00:00
          projectId: 5
          enabled: true
        users:
        - projectRole: projectRole
          accountType: accountType
          login: login
          accountRole: accountRole
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
        - projectRole: projectRole
          accountType: accountType
          login: login
          accountRole: accountRole
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
      properties:
        projectId:
          format: int64
          type: integer
        projectName:
          type: string
        entryType:
          type: string
        configuration:
          $ref: '#/components/schemas/ProjectConfiguration'
        users:
          items:
            $ref: '#/components/schemas/ProjectUser'
          type: array
        integrations:
          items:
            $ref: '#/components/schemas/IntegrationResource'
          type: array
        organization:
          type: string
        allocatedStorage:
          format: int64
          type: integer
        creationDate:
          format: date-time
          type: string
      required:
      - configuration
      - creationDate
      - entryType
      - projectId
      - projectName
    ProjectUser:
      example:
        projectRole: projectRole
        accountType: accountType
        login: login
        accountRole: accountRole
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        uuid:
          format: uuid
          type: string
        login:
          type: string
        email:
          type: string
        projectRole:
          type: string
        accountRole:
          type: string
        accountType:
          type: string
    AssignedProject:
      example:
        entryType: entryType
        projectRole: projectRole
      properties:
        projectRole:
          type: string
        entryType:
          type: string
    PageUserResource:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - metadata: "{}"
          accountType: accountType
          externalId: externalId
          active: true
          photoId: photoId
          fullName: fullName
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: userId
          photoLoaded: true
          assignedProjects:
            key:
              entryType: entryType
              projectRole: projectRole
          id: 0
          userRole: userRole
          email: email
        - metadata: "{}"
          accountType: accountType
          externalId: externalId
          active: true
          photoId: photoId
          fullName: fullName
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: userId
          photoLoaded: true
          assignedProjects:
            key:
              entryType: entryType
              projectRole: projectRole
          id: 0
          userRole: userRole
          email: email
      properties:
        content:
          items:
            $ref: '#/components/schemas/UserResource'
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    UserResource:
      example:
        metadata: "{}"
        accountType: accountType
        externalId: externalId
        active: true
        photoId: photoId
        fullName: fullName
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userId: userId
        photoLoaded: true
        assignedProjects:
          key:
            entryType: entryType
            projectRole: projectRole
        id: 0
        userRole: userRole
        email: email
      properties:
        uuid:
          format: uuid
          type: string
        externalId:
          type: string
        active:
          type: boolean
        id:
          format: int64
          type: integer
        userId:
          type: string
        email:
          type: string
        photoId:
          type: string
        fullName:
          type: string
        accountType:
          type: string
        userRole:
          type: string
        photoLoaded:
          type: boolean
        metadata:
          type: object
        assignedProjects:
          additionalProperties:
            $ref: '#/components/schemas/AssignedProject'
      required:
      - email
      - id
      - userId
    PageSearchUserResource:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - externalId: externalId
          active: true
          fullName: fullName
          id: 0
          login: login
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
        - externalId: externalId
          active: true
          fullName: fullName
          id: 0
          login: login
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
      properties:
        content:
          items:
            $ref: '#/components/schemas/SearchUserResource'
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    SearchUserResource:
      example:
        externalId: externalId
        active: true
        fullName: fullName
        id: 0
        login: login
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        uuid:
          format: uuid
          type: string
        externalId:
          type: string
        active:
          type: boolean
        id:
          format: int64
          type: integer
        login:
          type: string
        email:
          type: string
        fullName:
          type: string
      required:
      - email
      - id
      - login
    PreferenceResource:
      example:
        filters:
        - owner: owner
          name: name
          description: description
          orders:
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          id: 1
          conditions:
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          type: type
        - owner: owner
          name: name
          description: description
          orders:
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          - sortingColumn: sortingColumn
            isAsc: true
          id: 1
          conditions:
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          - condition: condition
            filteringField: filteringField
            value: value
          type: type
        userId: 0
        projectId: 6
      properties:
        userId:
          format: int64
          type: integer
        projectId:
          format: int64
          type: integer
        filters:
          items:
            $ref: '#/components/schemas/UserFilterResource'
          type: array
      required:
      - projectId
    LaunchesPerUser:
      example:
        count: 5
        fullName: fullName
      properties:
        fullName:
          type: string
        count:
          format: int32
          type: integer
    PageProjectInfoResource:
      example:
        page:
          number: 3
          size: 2
          totalPages: 7
          hasNext: true
          totalElements: 4
        content:
        - launchesQuantity: 1
          entryType: entryType
          lastRun: 2000-01-23T04:56:07.000+00:00
          organization: organization
          launchesPerWeek: launchesPerWeek
          id: 0
          projectName: projectName
          uniqueTickets: 5
          creationDate: 2000-01-23T04:56:07.000+00:00
          usersQuantity: 6
          launchesPerUser:
          - count: 5
            fullName: fullName
          - count: 5
            fullName: fullName
        - launchesQuantity: 1
          entryType: entryType
          lastRun: 2000-01-23T04:56:07.000+00:00
          organization: organization
          launchesPerWeek: launchesPerWeek
          id: 0
          projectName: projectName
          uniqueTickets: 5
          creationDate: 2000-01-23T04:56:07.000+00:00
          usersQuantity: 6
          launchesPerUser:
          - count: 5
            fullName: fullName
          - count: 5
            fullName: fullName
      properties:
        content:
          items:
            $ref: '#/components/schemas/ProjectInfoResource'
          type: array
        page:
          $ref: '#/components/schemas/PageMetadata'
    ProjectInfoResource:
      example:
        launchesQuantity: 1
        entryType: entryType
        lastRun: 2000-01-23T04:56:07.000+00:00
        organization: organization
        launchesPerWeek: launchesPerWeek
        id: 0
        projectName: projectName
        uniqueTickets: 5
        creationDate: 2000-01-23T04:56:07.000+00:00
        usersQuantity: 6
        launchesPerUser:
        - count: 5
          fullName: fullName
        - count: 5
          fullName: fullName
      properties:
        id:
          format: int64
          type: integer
        projectName:
          type: string
        usersQuantity:
          format: int32
          type: integer
        launchesQuantity:
          format: int32
          type: integer
        launchesPerUser:
          items:
            $ref: '#/components/schemas/LaunchesPerUser'
          type: array
        uniqueTickets:
          format: int32
          type: integer
        launchesPerWeek:
          type: string
        lastRun:
          format: date-time
          type: string
        creationDate:
          format: date-time
          type: string
        entryType:
          type: string
        organization:
          type: string
      required:
      - creationDate
      - id
      - lastRun
      - launchesQuantity
      - projectName
      - usersQuantity
    ApiKeysRS:
      example:
        items:
        - last_used_at: 2000-01-23T04:56:07.000+00:00
          user_id: 6
          api_key: api_key
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        - last_used_at: 2000-01-23T04:56:07.000+00:00
          user_id: 6
          api_key: api_key
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
      properties:
        items:
          items:
            $ref: '#/components/schemas/ApiKeyRS'
          type: array
      required:
      - items
    UserBidRS:
      example:
        isActive: true
        uuid: uuid
        email: email
      properties:
        uuid:
          type: string
        isActive:
          type: boolean
        email:
          type: string
    YesNoRS:
      example:
        is: true
      properties:
        is:
          type: boolean
    ProjectGroupInfo:
      description: Information about project group.
      example:
        added_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        permission: PROJECT_MANAGER
        id: 1
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slug: slug
      properties:
        id:
          description: Resource identifier.
          format: int64
          minimum: 1
          type: integer
        uuid:
          description: Group identifier for external usage.
          format: uuid
          type: string
        name:
          description: Display name.
          maxLength: 60
          minLength: 3
          pattern: "^[A-Za-z0-9.'_\\- ]+$"
          type: string
        slug:
          description: "A slug is used to identify a resource. It should be unique\
            \ and contain only lowercase letters, numbers, and hyphens. It should\
            \ not start or end with a hyphen."
          maxLength: 60
          minLength: 3
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        permission:
          enum:
          - PROJECT_MANAGER
          - MEMBER
          - OPERATOR
          - CUSTOMER
          type: string
        added_at:
          description: Timestamp of project adding to group.
          format: date-time
          type: string
        updated_at:
          description: Timestamp of project updating in group.
          format: date-time
          type: string
    ProjectGroupsPage:
      example:
        offset: 0
        total_count: 0
        limit: 0
        sort: sort
        items:
        - added_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          permission: PROJECT_MANAGER
          id: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
        - added_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          permission: PROJECT_MANAGER
          id: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
        order: ASC
      properties:
        offset:
          description: The offset used for this page of results.
          format: int32
          minimum: 0
          type: integer
        limit:
          description: The limit used for this page of results. This will be the same
            as the limit query parameter unless it exceeded the maximum value allowed
            for this API endpoint.
          format: int32
          minimum: 0
          type: integer
        total_count:
          description: One greater than the offset of the last item in the entire
            collection. The total number of items in the collection may be less than
            total_count.
          format: int32
          minimum: 0
          type: integer
        sort:
          description: Field to define the sort field.
          type: string
        order:
          enum:
          - ASC
          - DESC
          type: string
        items:
          items:
            $ref: '#/components/schemas/ProjectGroupInfo'
          type: array
    GroupPage:
      description: Page of groups.
      example:
        offset: 0
        total_count: 0
        limit: 0
        sort: sort
        items:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: 6
          slug: slug
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: 6
          slug: slug
        order: ASC
      properties:
        offset:
          description: The offset used for this page of results.
          format: int32
          minimum: 0
          type: integer
        limit:
          description: The limit used for this page of results. This will be the same
            as the limit query parameter unless it exceeded the maximum value allowed
            for this API endpoint.
          format: int32
          minimum: 0
          type: integer
        total_count:
          description: One greater than the offset of the last item in the entire
            collection. The total number of items in the collection may be less than
            total_count.
          format: int32
          minimum: 0
          type: integer
        sort:
          description: Field to define the sort field.
          type: string
        order:
          enum:
          - ASC
          - DESC
          type: string
        items:
          description: List of groups.
          items:
            $ref: '#/components/schemas/GroupInfo'
          type: array
    GroupUserInfo:
      description: Information about a user as a group member.
      example:
        added_at: 2000-01-23T04:56:07.000+00:00
        account_type: INTERNAL
        full_name: full_name
        instance_role: ADMINISTRATOR
        active: true
        external_id: external_id
        id: 1
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        id:
          description: Resource identifier.
          format: int64
          minimum: 1
          type: integer
        uuid:
          description: User identifier for external systems.
          format: uuid
          type: string
        email:
          description: User email.
          type: string
        full_name:
          description: Display name.
          maxLength: 60
          minLength: 3
          pattern: "^[A-Za-z0-9.'_\\- ]+$"
          type: string
        external_id:
          description: External user identifier.
          type: string
        instance_role:
          enum:
          - ADMINISTRATOR
          - USER
          type: string
        active:
          description: User activity status.
          type: boolean
        account_type:
          enum:
          - INTERNAL
          - UPSA
          - GITHUB
          - LDAP
          - SAML
          - SCIM
          type: string
        added_at:
          description: Timestamp of user adding to group.
          format: date-time
          type: string
    GroupUsersPage:
      description: Page of group users.
      example:
        offset: 0
        total_count: 0
        limit: 0
        sort: sort
        items:
        - added_at: 2000-01-23T04:56:07.000+00:00
          account_type: INTERNAL
          full_name: full_name
          instance_role: ADMINISTRATOR
          active: true
          external_id: external_id
          id: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
        - added_at: 2000-01-23T04:56:07.000+00:00
          account_type: INTERNAL
          full_name: full_name
          instance_role: ADMINISTRATOR
          active: true
          external_id: external_id
          id: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
        order: ASC
      properties:
        offset:
          description: The offset used for this page of results.
          format: int32
          minimum: 0
          type: integer
        limit:
          description: The limit used for this page of results. This will be the same
            as the limit query parameter unless it exceeded the maximum value allowed
            for this API endpoint.
          format: int32
          minimum: 0
          type: integer
        total_count:
          description: One greater than the offset of the last item in the entire
            collection. The total number of items in the collection may be less than
            total_count.
          format: int32
          minimum: 0
          type: integer
        sort:
          description: Field to define the sort field.
          type: string
        order:
          enum:
          - ASC
          - DESC
          type: string
        items:
          description: List of group users.
          items:
            $ref: '#/components/schemas/GroupUserInfo'
          type: array
    GroupProjectInfo:
      description: Information about a project as a group member.
      example:
        added_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        permission: PROJECT_MANAGER
        id: 1
      properties:
        id:
          description: Resource identifier.
          format: int64
          minimum: 1
          type: integer
        name:
          description: Display name.
          maxLength: 60
          minLength: 3
          pattern: "^[A-Za-z0-9.'_\\- ]+$"
          type: string
        permission:
          enum:
          - PROJECT_MANAGER
          - MEMBER
          - OPERATOR
          - CUSTOMER
          type: string
        added_at:
          description: Timestamp of project adding to group.
          format: date-time
          type: string
        updated_at:
          description: Timestamp of project updating in group.
          format: date-time
          type: string
    GroupProjectsPage:
      description: Page of group projects.
      example:
        offset: 0
        total_count: 0
        limit: 0
        sort: sort
        items:
        - added_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          permission: PROJECT_MANAGER
          id: 1
        - added_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          permission: PROJECT_MANAGER
          id: 1
        order: ASC
      properties:
        offset:
          description: The offset used for this page of results.
          format: int32
          minimum: 0
          type: integer
        limit:
          description: The limit used for this page of results. This will be the same
            as the limit query parameter unless it exceeded the maximum value allowed
            for this API endpoint.
          format: int32
          minimum: 0
          type: integer
        total_count:
          description: One greater than the offset of the last item in the entire
            collection. The total number of items in the collection may be less than
            total_count.
          format: int32
          minimum: 0
          type: integer
        sort:
          description: Field to define the sort field.
          type: string
        order:
          enum:
          - ASC
          - DESC
          type: string
        items:
          description: List of group projects.
          items:
            $ref: '#/components/schemas/GroupProjectInfo'
          type: array
    DeleteBulkRS:
      example:
        successfullyDeleted:
        - 0
        - 0
        notFound:
        - 6
        - 6
        errors:
        - errorCode: INCORRECT_REQUEST
          stackTrace: stackTrace
          message: message
        - errorCode: INCORRECT_REQUEST
          stackTrace: stackTrace
          message: message
      properties:
        successfullyDeleted:
          items:
            format: int64
            type: integer
          type: array
        notFound:
          items:
            format: int64
            type: integer
          type: array
        errors:
          items:
            $ref: '#/components/schemas/ErrorRS'
          type: array
    createLog_request:
      properties:
        json_request_part:
          items:
            $ref: '#/components/schemas/SaveLogRQ'
          type: array
      required:
      - json_request_part
    uploadPlugin_request:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
    executeImportPluginCommand_request:
      properties:
        file:
          format: binary
          type: string
        launchImportRq:
          $ref: '#/components/schemas/LaunchImportRQ'
      required:
      - file
    PagedLogResource_pagesLocation_inner:
      example:
        value: 0
        key: 6
      properties:
        value:
          format: int32
          type: integer
        key:
          format: int64
          type: integer
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      name: bearerAuth
      scheme: bearer
      type: http
