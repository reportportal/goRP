/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the BulkInfoUpdateRQ type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkInfoUpdateRQ{}

// BulkInfoUpdateRQ struct for BulkInfoUpdateRQ
type BulkInfoUpdateRQ struct {
	Ids         []int64                 `json:"ids"`
	Description *Description            `json:"description,omitempty"`
	Attributes  []UpdateItemAttributeRQ `json:"attributes,omitempty"`
}

type _BulkInfoUpdateRQ BulkInfoUpdateRQ

// NewBulkInfoUpdateRQ instantiates a new BulkInfoUpdateRQ object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkInfoUpdateRQ(ids []int64) *BulkInfoUpdateRQ {
	this := BulkInfoUpdateRQ{}
	this.Ids = ids
	return &this
}

// NewBulkInfoUpdateRQWithDefaults instantiates a new BulkInfoUpdateRQ object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkInfoUpdateRQWithDefaults() *BulkInfoUpdateRQ {
	this := BulkInfoUpdateRQ{}
	return &this
}

// GetIds returns the Ids field value
func (o *BulkInfoUpdateRQ) GetIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
func (o *BulkInfoUpdateRQ) GetIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ids, true
}

// SetIds sets field value
func (o *BulkInfoUpdateRQ) SetIds(v []int64) {
	o.Ids = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BulkInfoUpdateRQ) GetDescription() Description {
	if o == nil || IsNil(o.Description) {
		var ret Description
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkInfoUpdateRQ) GetDescriptionOk() (*Description, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BulkInfoUpdateRQ) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given Description and assigns it to the Description field.
func (o *BulkInfoUpdateRQ) SetDescription(v Description) {
	o.Description = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *BulkInfoUpdateRQ) GetAttributes() []UpdateItemAttributeRQ {
	if o == nil || IsNil(o.Attributes) {
		var ret []UpdateItemAttributeRQ
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkInfoUpdateRQ) GetAttributesOk() ([]UpdateItemAttributeRQ, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *BulkInfoUpdateRQ) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []UpdateItemAttributeRQ and assigns it to the Attributes field.
func (o *BulkInfoUpdateRQ) SetAttributes(v []UpdateItemAttributeRQ) {
	o.Attributes = v
}

func (o BulkInfoUpdateRQ) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkInfoUpdateRQ) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ids"] = o.Ids
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

func (o *BulkInfoUpdateRQ) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkInfoUpdateRQ := _BulkInfoUpdateRQ{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBulkInfoUpdateRQ)

	if err != nil {
		return err
	}

	*o = BulkInfoUpdateRQ(varBulkInfoUpdateRQ)

	return err
}

type NullableBulkInfoUpdateRQ struct {
	value *BulkInfoUpdateRQ
	isSet bool
}

func (v NullableBulkInfoUpdateRQ) Get() *BulkInfoUpdateRQ {
	return v.value
}

func (v *NullableBulkInfoUpdateRQ) Set(val *BulkInfoUpdateRQ) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkInfoUpdateRQ) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkInfoUpdateRQ) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkInfoUpdateRQ(val *BulkInfoUpdateRQ) *NullableBulkInfoUpdateRQ {
	return &NullableBulkInfoUpdateRQ{value: val, isSet: true}
}

func (v NullableBulkInfoUpdateRQ) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkInfoUpdateRQ) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
