/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the TestItemResourceOld type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestItemResourceOld{}

// TestItemResourceOld struct for TestItemResourceOld
type TestItemResourceOld struct {
	Id               *int64                  `json:"id,omitempty"`
	Uuid             *string                 `json:"uuid,omitempty"`
	Name             *string                 `json:"name,omitempty"`
	CodeRef          *string                 `json:"codeRef,omitempty"`
	Description      *string                 `json:"description,omitempty"`
	Parameters       []ParameterResource     `json:"parameters,omitempty"`
	Attributes       []ItemAttributeResource `json:"attributes,omitempty"`
	Type             *string                 `json:"type,omitempty"`
	StartTime        *time.Time              `json:"startTime,omitempty"`
	EndTime          *time.Time              `json:"endTime,omitempty"`
	Status           *string                 `json:"status,omitempty"`
	Statistics       *StatisticsResource     `json:"statistics,omitempty"`
	Parent           *int64                  `json:"parent,omitempty"`
	PathNames        *PathNameResource       `json:"pathNames,omitempty"`
	LaunchStatus     *string                 `json:"launchStatus,omitempty"`
	Issue            *Issue                  `json:"issue,omitempty"`
	HasChildren      *bool                   `json:"hasChildren,omitempty"`
	HasStats         *bool                   `json:"hasStats,omitempty"`
	LaunchId         *int64                  `json:"launchId,omitempty"`
	UniqueId         *string                 `json:"uniqueId,omitempty"`
	TestCaseId       *string                 `json:"testCaseId,omitempty"`
	TestCaseHash     *int32                  `json:"testCaseHash,omitempty"`
	PatternTemplates []string                `json:"patternTemplates,omitempty"`
	Retries          []TestItemResource      `json:"retries,omitempty"`
	Path             *string                 `json:"path,omitempty"`
}

// NewTestItemResourceOld instantiates a new TestItemResourceOld object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestItemResourceOld() *TestItemResourceOld {
	this := TestItemResourceOld{}
	return &this
}

// NewTestItemResourceOldWithDefaults instantiates a new TestItemResourceOld object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestItemResourceOldWithDefaults() *TestItemResourceOld {
	this := TestItemResourceOld{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *TestItemResourceOld) SetId(v int64) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *TestItemResourceOld) SetUuid(v string) {
	o.Uuid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TestItemResourceOld) SetName(v string) {
	o.Name = &v
}

// GetCodeRef returns the CodeRef field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetCodeRef() string {
	if o == nil || IsNil(o.CodeRef) {
		var ret string
		return ret
	}
	return *o.CodeRef
}

// GetCodeRefOk returns a tuple with the CodeRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetCodeRefOk() (*string, bool) {
	if o == nil || IsNil(o.CodeRef) {
		return nil, false
	}
	return o.CodeRef, true
}

// HasCodeRef returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasCodeRef() bool {
	if o != nil && !IsNil(o.CodeRef) {
		return true
	}

	return false
}

// SetCodeRef gets a reference to the given string and assigns it to the CodeRef field.
func (o *TestItemResourceOld) SetCodeRef(v string) {
	o.CodeRef = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TestItemResourceOld) SetDescription(v string) {
	o.Description = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetParameters() []ParameterResource {
	if o == nil || IsNil(o.Parameters) {
		var ret []ParameterResource
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetParametersOk() ([]ParameterResource, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []ParameterResource and assigns it to the Parameters field.
func (o *TestItemResourceOld) SetParameters(v []ParameterResource) {
	o.Parameters = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetAttributes() []ItemAttributeResource {
	if o == nil || IsNil(o.Attributes) {
		var ret []ItemAttributeResource
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetAttributesOk() ([]ItemAttributeResource, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []ItemAttributeResource and assigns it to the Attributes field.
func (o *TestItemResourceOld) SetAttributes(v []ItemAttributeResource) {
	o.Attributes = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TestItemResourceOld) SetType(v string) {
	o.Type = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *TestItemResourceOld) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *TestItemResourceOld) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TestItemResourceOld) SetStatus(v string) {
	o.Status = &v
}

// GetStatistics returns the Statistics field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetStatistics() StatisticsResource {
	if o == nil || IsNil(o.Statistics) {
		var ret StatisticsResource
		return ret
	}
	return *o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetStatisticsOk() (*StatisticsResource, bool) {
	if o == nil || IsNil(o.Statistics) {
		return nil, false
	}
	return o.Statistics, true
}

// HasStatistics returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasStatistics() bool {
	if o != nil && !IsNil(o.Statistics) {
		return true
	}

	return false
}

// SetStatistics gets a reference to the given StatisticsResource and assigns it to the Statistics field.
func (o *TestItemResourceOld) SetStatistics(v StatisticsResource) {
	o.Statistics = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetParent() int64 {
	if o == nil || IsNil(o.Parent) {
		var ret int64
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetParentOk() (*int64, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given int64 and assigns it to the Parent field.
func (o *TestItemResourceOld) SetParent(v int64) {
	o.Parent = &v
}

// GetPathNames returns the PathNames field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetPathNames() PathNameResource {
	if o == nil || IsNil(o.PathNames) {
		var ret PathNameResource
		return ret
	}
	return *o.PathNames
}

// GetPathNamesOk returns a tuple with the PathNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetPathNamesOk() (*PathNameResource, bool) {
	if o == nil || IsNil(o.PathNames) {
		return nil, false
	}
	return o.PathNames, true
}

// HasPathNames returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasPathNames() bool {
	if o != nil && !IsNil(o.PathNames) {
		return true
	}

	return false
}

// SetPathNames gets a reference to the given PathNameResource and assigns it to the PathNames field.
func (o *TestItemResourceOld) SetPathNames(v PathNameResource) {
	o.PathNames = &v
}

// GetLaunchStatus returns the LaunchStatus field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetLaunchStatus() string {
	if o == nil || IsNil(o.LaunchStatus) {
		var ret string
		return ret
	}
	return *o.LaunchStatus
}

// GetLaunchStatusOk returns a tuple with the LaunchStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetLaunchStatusOk() (*string, bool) {
	if o == nil || IsNil(o.LaunchStatus) {
		return nil, false
	}
	return o.LaunchStatus, true
}

// HasLaunchStatus returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasLaunchStatus() bool {
	if o != nil && !IsNil(o.LaunchStatus) {
		return true
	}

	return false
}

// SetLaunchStatus gets a reference to the given string and assigns it to the LaunchStatus field.
func (o *TestItemResourceOld) SetLaunchStatus(v string) {
	o.LaunchStatus = &v
}

// GetIssue returns the Issue field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetIssue() Issue {
	if o == nil || IsNil(o.Issue) {
		var ret Issue
		return ret
	}
	return *o.Issue
}

// GetIssueOk returns a tuple with the Issue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetIssueOk() (*Issue, bool) {
	if o == nil || IsNil(o.Issue) {
		return nil, false
	}
	return o.Issue, true
}

// HasIssue returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasIssue() bool {
	if o != nil && !IsNil(o.Issue) {
		return true
	}

	return false
}

// SetIssue gets a reference to the given Issue and assigns it to the Issue field.
func (o *TestItemResourceOld) SetIssue(v Issue) {
	o.Issue = &v
}

// GetHasChildren returns the HasChildren field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetHasChildren() bool {
	if o == nil || IsNil(o.HasChildren) {
		var ret bool
		return ret
	}
	return *o.HasChildren
}

// GetHasChildrenOk returns a tuple with the HasChildren field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetHasChildrenOk() (*bool, bool) {
	if o == nil || IsNil(o.HasChildren) {
		return nil, false
	}
	return o.HasChildren, true
}

// HasHasChildren returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasHasChildren() bool {
	if o != nil && !IsNil(o.HasChildren) {
		return true
	}

	return false
}

// SetHasChildren gets a reference to the given bool and assigns it to the HasChildren field.
func (o *TestItemResourceOld) SetHasChildren(v bool) {
	o.HasChildren = &v
}

// GetHasStats returns the HasStats field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetHasStats() bool {
	if o == nil || IsNil(o.HasStats) {
		var ret bool
		return ret
	}
	return *o.HasStats
}

// GetHasStatsOk returns a tuple with the HasStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetHasStatsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasStats) {
		return nil, false
	}
	return o.HasStats, true
}

// HasHasStats returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasHasStats() bool {
	if o != nil && !IsNil(o.HasStats) {
		return true
	}

	return false
}

// SetHasStats gets a reference to the given bool and assigns it to the HasStats field.
func (o *TestItemResourceOld) SetHasStats(v bool) {
	o.HasStats = &v
}

// GetLaunchId returns the LaunchId field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetLaunchId() int64 {
	if o == nil || IsNil(o.LaunchId) {
		var ret int64
		return ret
	}
	return *o.LaunchId
}

// GetLaunchIdOk returns a tuple with the LaunchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetLaunchIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LaunchId) {
		return nil, false
	}
	return o.LaunchId, true
}

// HasLaunchId returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasLaunchId() bool {
	if o != nil && !IsNil(o.LaunchId) {
		return true
	}

	return false
}

// SetLaunchId gets a reference to the given int64 and assigns it to the LaunchId field.
func (o *TestItemResourceOld) SetLaunchId(v int64) {
	o.LaunchId = &v
}

// GetUniqueId returns the UniqueId field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetUniqueId() string {
	if o == nil || IsNil(o.UniqueId) {
		var ret string
		return ret
	}
	return *o.UniqueId
}

// GetUniqueIdOk returns a tuple with the UniqueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetUniqueIdOk() (*string, bool) {
	if o == nil || IsNil(o.UniqueId) {
		return nil, false
	}
	return o.UniqueId, true
}

// HasUniqueId returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasUniqueId() bool {
	if o != nil && !IsNil(o.UniqueId) {
		return true
	}

	return false
}

// SetUniqueId gets a reference to the given string and assigns it to the UniqueId field.
func (o *TestItemResourceOld) SetUniqueId(v string) {
	o.UniqueId = &v
}

// GetTestCaseId returns the TestCaseId field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetTestCaseId() string {
	if o == nil || IsNil(o.TestCaseId) {
		var ret string
		return ret
	}
	return *o.TestCaseId
}

// GetTestCaseIdOk returns a tuple with the TestCaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetTestCaseIdOk() (*string, bool) {
	if o == nil || IsNil(o.TestCaseId) {
		return nil, false
	}
	return o.TestCaseId, true
}

// HasTestCaseId returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasTestCaseId() bool {
	if o != nil && !IsNil(o.TestCaseId) {
		return true
	}

	return false
}

// SetTestCaseId gets a reference to the given string and assigns it to the TestCaseId field.
func (o *TestItemResourceOld) SetTestCaseId(v string) {
	o.TestCaseId = &v
}

// GetTestCaseHash returns the TestCaseHash field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetTestCaseHash() int32 {
	if o == nil || IsNil(o.TestCaseHash) {
		var ret int32
		return ret
	}
	return *o.TestCaseHash
}

// GetTestCaseHashOk returns a tuple with the TestCaseHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetTestCaseHashOk() (*int32, bool) {
	if o == nil || IsNil(o.TestCaseHash) {
		return nil, false
	}
	return o.TestCaseHash, true
}

// HasTestCaseHash returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasTestCaseHash() bool {
	if o != nil && !IsNil(o.TestCaseHash) {
		return true
	}

	return false
}

// SetTestCaseHash gets a reference to the given int32 and assigns it to the TestCaseHash field.
func (o *TestItemResourceOld) SetTestCaseHash(v int32) {
	o.TestCaseHash = &v
}

// GetPatternTemplates returns the PatternTemplates field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetPatternTemplates() []string {
	if o == nil || IsNil(o.PatternTemplates) {
		var ret []string
		return ret
	}
	return o.PatternTemplates
}

// GetPatternTemplatesOk returns a tuple with the PatternTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetPatternTemplatesOk() ([]string, bool) {
	if o == nil || IsNil(o.PatternTemplates) {
		return nil, false
	}
	return o.PatternTemplates, true
}

// HasPatternTemplates returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasPatternTemplates() bool {
	if o != nil && !IsNil(o.PatternTemplates) {
		return true
	}

	return false
}

// SetPatternTemplates gets a reference to the given []string and assigns it to the PatternTemplates field.
func (o *TestItemResourceOld) SetPatternTemplates(v []string) {
	o.PatternTemplates = v
}

// GetRetries returns the Retries field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetRetries() []TestItemResource {
	if o == nil || IsNil(o.Retries) {
		var ret []TestItemResource
		return ret
	}
	return o.Retries
}

// GetRetriesOk returns a tuple with the Retries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetRetriesOk() ([]TestItemResource, bool) {
	if o == nil || IsNil(o.Retries) {
		return nil, false
	}
	return o.Retries, true
}

// HasRetries returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasRetries() bool {
	if o != nil && !IsNil(o.Retries) {
		return true
	}

	return false
}

// SetRetries gets a reference to the given []TestItemResource and assigns it to the Retries field.
func (o *TestItemResourceOld) SetRetries(v []TestItemResource) {
	o.Retries = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *TestItemResourceOld) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestItemResourceOld) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *TestItemResourceOld) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *TestItemResourceOld) SetPath(v string) {
	o.Path = &v
}

func (o TestItemResourceOld) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestItemResourceOld) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CodeRef) {
		toSerialize["codeRef"] = o.CodeRef
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Statistics) {
		toSerialize["statistics"] = o.Statistics
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.PathNames) {
		toSerialize["pathNames"] = o.PathNames
	}
	if !IsNil(o.LaunchStatus) {
		toSerialize["launchStatus"] = o.LaunchStatus
	}
	if !IsNil(o.Issue) {
		toSerialize["issue"] = o.Issue
	}
	if !IsNil(o.HasChildren) {
		toSerialize["hasChildren"] = o.HasChildren
	}
	if !IsNil(o.HasStats) {
		toSerialize["hasStats"] = o.HasStats
	}
	if !IsNil(o.LaunchId) {
		toSerialize["launchId"] = o.LaunchId
	}
	if !IsNil(o.UniqueId) {
		toSerialize["uniqueId"] = o.UniqueId
	}
	if !IsNil(o.TestCaseId) {
		toSerialize["testCaseId"] = o.TestCaseId
	}
	if !IsNil(o.TestCaseHash) {
		toSerialize["testCaseHash"] = o.TestCaseHash
	}
	if !IsNil(o.PatternTemplates) {
		toSerialize["patternTemplates"] = o.PatternTemplates
	}
	if !IsNil(o.Retries) {
		toSerialize["retries"] = o.Retries
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	return toSerialize, nil
}

type NullableTestItemResourceOld struct {
	value *TestItemResourceOld
	isSet bool
}

func (v NullableTestItemResourceOld) Get() *TestItemResourceOld {
	return v.value
}

func (v *NullableTestItemResourceOld) Set(val *TestItemResourceOld) {
	v.value = val
	v.isSet = true
}

func (v NullableTestItemResourceOld) IsSet() bool {
	return v.isSet
}

func (v *NullableTestItemResourceOld) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestItemResourceOld(val *TestItemResourceOld) *NullableTestItemResourceOld {
	return &NullableTestItemResourceOld{value: val, isSet: true}
}

func (v NullableTestItemResourceOld) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestItemResourceOld) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
