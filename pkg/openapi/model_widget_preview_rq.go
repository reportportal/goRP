/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WidgetPreviewRQ type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetPreviewRQ{}

// WidgetPreviewRQ struct for WidgetPreviewRQ
type WidgetPreviewRQ struct {
	WidgetType        string             `json:"widgetType"`
	ContentParameters *ContentParameters `json:"contentParameters,omitempty"`
	FilterIds         []int64            `json:"filterIds,omitempty"`
}

type _WidgetPreviewRQ WidgetPreviewRQ

// NewWidgetPreviewRQ instantiates a new WidgetPreviewRQ object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetPreviewRQ(widgetType string) *WidgetPreviewRQ {
	this := WidgetPreviewRQ{}
	this.WidgetType = widgetType
	return &this
}

// NewWidgetPreviewRQWithDefaults instantiates a new WidgetPreviewRQ object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetPreviewRQWithDefaults() *WidgetPreviewRQ {
	this := WidgetPreviewRQ{}
	return &this
}

// GetWidgetType returns the WidgetType field value
func (o *WidgetPreviewRQ) GetWidgetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WidgetType
}

// GetWidgetTypeOk returns a tuple with the WidgetType field value
// and a boolean to check if the value has been set.
func (o *WidgetPreviewRQ) GetWidgetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WidgetType, true
}

// SetWidgetType sets field value
func (o *WidgetPreviewRQ) SetWidgetType(v string) {
	o.WidgetType = v
}

// GetContentParameters returns the ContentParameters field value if set, zero value otherwise.
func (o *WidgetPreviewRQ) GetContentParameters() ContentParameters {
	if o == nil || IsNil(o.ContentParameters) {
		var ret ContentParameters
		return ret
	}
	return *o.ContentParameters
}

// GetContentParametersOk returns a tuple with the ContentParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetPreviewRQ) GetContentParametersOk() (*ContentParameters, bool) {
	if o == nil || IsNil(o.ContentParameters) {
		return nil, false
	}
	return o.ContentParameters, true
}

// HasContentParameters returns a boolean if a field has been set.
func (o *WidgetPreviewRQ) HasContentParameters() bool {
	if o != nil && !IsNil(o.ContentParameters) {
		return true
	}

	return false
}

// SetContentParameters gets a reference to the given ContentParameters and assigns it to the ContentParameters field.
func (o *WidgetPreviewRQ) SetContentParameters(v ContentParameters) {
	o.ContentParameters = &v
}

// GetFilterIds returns the FilterIds field value if set, zero value otherwise.
func (o *WidgetPreviewRQ) GetFilterIds() []int64 {
	if o == nil || IsNil(o.FilterIds) {
		var ret []int64
		return ret
	}
	return o.FilterIds
}

// GetFilterIdsOk returns a tuple with the FilterIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetPreviewRQ) GetFilterIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.FilterIds) {
		return nil, false
	}
	return o.FilterIds, true
}

// HasFilterIds returns a boolean if a field has been set.
func (o *WidgetPreviewRQ) HasFilterIds() bool {
	if o != nil && !IsNil(o.FilterIds) {
		return true
	}

	return false
}

// SetFilterIds gets a reference to the given []int64 and assigns it to the FilterIds field.
func (o *WidgetPreviewRQ) SetFilterIds(v []int64) {
	o.FilterIds = v
}

func (o WidgetPreviewRQ) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetPreviewRQ) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["widgetType"] = o.WidgetType
	if !IsNil(o.ContentParameters) {
		toSerialize["contentParameters"] = o.ContentParameters
	}
	if !IsNil(o.FilterIds) {
		toSerialize["filterIds"] = o.FilterIds
	}
	return toSerialize, nil
}

func (o *WidgetPreviewRQ) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"widgetType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWidgetPreviewRQ := _WidgetPreviewRQ{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWidgetPreviewRQ)

	if err != nil {
		return err
	}

	*o = WidgetPreviewRQ(varWidgetPreviewRQ)

	return err
}

type NullableWidgetPreviewRQ struct {
	value *WidgetPreviewRQ
	isSet bool
}

func (v NullableWidgetPreviewRQ) Get() *WidgetPreviewRQ {
	return v.value
}

func (v *NullableWidgetPreviewRQ) Set(val *WidgetPreviewRQ) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetPreviewRQ) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetPreviewRQ) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetPreviewRQ(val *WidgetPreviewRQ) *NullableWidgetPreviewRQ {
	return &NullableWidgetPreviewRQ{value: val, isSet: true}
}

func (v NullableWidgetPreviewRQ) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetPreviewRQ) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
