/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateLaunchRQ type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLaunchRQ{}

// UpdateLaunchRQ struct for UpdateLaunchRQ
type UpdateLaunchRQ struct {
	Mode        *string                 `json:"mode,omitempty"`
	Description *string                 `json:"description,omitempty"`
	Attributes  []ItemAttributeResource `json:"attributes,omitempty"`
}

// NewUpdateLaunchRQ instantiates a new UpdateLaunchRQ object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLaunchRQ() *UpdateLaunchRQ {
	this := UpdateLaunchRQ{}
	return &this
}

// NewUpdateLaunchRQWithDefaults instantiates a new UpdateLaunchRQ object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLaunchRQWithDefaults() *UpdateLaunchRQ {
	this := UpdateLaunchRQ{}
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *UpdateLaunchRQ) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLaunchRQ) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *UpdateLaunchRQ) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *UpdateLaunchRQ) SetMode(v string) {
	o.Mode = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateLaunchRQ) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLaunchRQ) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateLaunchRQ) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateLaunchRQ) SetDescription(v string) {
	o.Description = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *UpdateLaunchRQ) GetAttributes() []ItemAttributeResource {
	if o == nil || IsNil(o.Attributes) {
		var ret []ItemAttributeResource
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLaunchRQ) GetAttributesOk() ([]ItemAttributeResource, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *UpdateLaunchRQ) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []ItemAttributeResource and assigns it to the Attributes field.
func (o *UpdateLaunchRQ) SetAttributes(v []ItemAttributeResource) {
	o.Attributes = v
}

func (o UpdateLaunchRQ) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateLaunchRQ) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableUpdateLaunchRQ struct {
	value *UpdateLaunchRQ
	isSet bool
}

func (v NullableUpdateLaunchRQ) Get() *UpdateLaunchRQ {
	return v.value
}

func (v *NullableUpdateLaunchRQ) Set(val *UpdateLaunchRQ) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLaunchRQ) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLaunchRQ) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLaunchRQ(val *UpdateLaunchRQ) *NullableUpdateLaunchRQ {
	return &NullableUpdateLaunchRQ{value: val, isSet: true}
}

func (v NullableUpdateLaunchRQ) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLaunchRQ) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
