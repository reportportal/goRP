/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PageTestItemResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageTestItemResource{}

// PageTestItemResource struct for PageTestItemResource
type PageTestItemResource struct {
	Content []TestItemResource `json:"content,omitempty"`
	Page    *PageMetadata      `json:"page,omitempty"`
}

// NewPageTestItemResource instantiates a new PageTestItemResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageTestItemResource() *PageTestItemResource {
	this := PageTestItemResource{}
	return &this
}

// NewPageTestItemResourceWithDefaults instantiates a new PageTestItemResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageTestItemResourceWithDefaults() *PageTestItemResource {
	this := PageTestItemResource{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *PageTestItemResource) GetContent() []TestItemResource {
	if o == nil || IsNil(o.Content) {
		var ret []TestItemResource
		return ret
	}
	return o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTestItemResource) GetContentOk() ([]TestItemResource, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *PageTestItemResource) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given []TestItemResource and assigns it to the Content field.
func (o *PageTestItemResource) SetContent(v []TestItemResource) {
	o.Content = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *PageTestItemResource) GetPage() PageMetadata {
	if o == nil || IsNil(o.Page) {
		var ret PageMetadata
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTestItemResource) GetPageOk() (*PageMetadata, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *PageTestItemResource) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given PageMetadata and assigns it to the Page field.
func (o *PageTestItemResource) SetPage(v PageMetadata) {
	o.Page = &v
}

func (o PageTestItemResource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageTestItemResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	return toSerialize, nil
}

type NullablePageTestItemResource struct {
	value *PageTestItemResource
	isSet bool
}

func (v NullablePageTestItemResource) Get() *PageTestItemResource {
	return v.value
}

func (v *NullablePageTestItemResource) Set(val *PageTestItemResource) {
	v.value = val
	v.isSet = true
}

func (v NullablePageTestItemResource) IsSet() bool {
	return v.isSet
}

func (v *NullablePageTestItemResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageTestItemResource(val *PageTestItemResource) *NullablePageTestItemResource {
	return &NullablePageTestItemResource{value: val, isSet: true}
}

func (v NullablePageTestItemResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageTestItemResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
