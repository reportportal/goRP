/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the LaunchImportRQ type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LaunchImportRQ{}

// LaunchImportRQ struct for LaunchImportRQ
type LaunchImportRQ struct {
	StartTime   *time.Time         `json:"startTime,omitempty"`
	Name        *string            `json:"name,omitempty"`
	Description *string            `json:"description,omitempty"`
	Attributes  []ItemAttributesRQ `json:"attributes,omitempty"`
	Mode        *string            `json:"mode,omitempty"`
}

// NewLaunchImportRQ instantiates a new LaunchImportRQ object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLaunchImportRQ() *LaunchImportRQ {
	this := LaunchImportRQ{}
	return &this
}

// NewLaunchImportRQWithDefaults instantiates a new LaunchImportRQ object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLaunchImportRQWithDefaults() *LaunchImportRQ {
	this := LaunchImportRQ{}
	return &this
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *LaunchImportRQ) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchImportRQ) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *LaunchImportRQ) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *LaunchImportRQ) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LaunchImportRQ) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchImportRQ) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LaunchImportRQ) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LaunchImportRQ) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LaunchImportRQ) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchImportRQ) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LaunchImportRQ) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LaunchImportRQ) SetDescription(v string) {
	o.Description = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *LaunchImportRQ) GetAttributes() []ItemAttributesRQ {
	if o == nil || IsNil(o.Attributes) {
		var ret []ItemAttributesRQ
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchImportRQ) GetAttributesOk() ([]ItemAttributesRQ, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *LaunchImportRQ) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []ItemAttributesRQ and assigns it to the Attributes field.
func (o *LaunchImportRQ) SetAttributes(v []ItemAttributesRQ) {
	o.Attributes = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *LaunchImportRQ) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LaunchImportRQ) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *LaunchImportRQ) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *LaunchImportRQ) SetMode(v string) {
	o.Mode = &v
}

func (o LaunchImportRQ) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LaunchImportRQ) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	return toSerialize, nil
}

type NullableLaunchImportRQ struct {
	value *LaunchImportRQ
	isSet bool
}

func (v NullableLaunchImportRQ) Get() *LaunchImportRQ {
	return v.value
}

func (v *NullableLaunchImportRQ) Set(val *LaunchImportRQ) {
	v.value = val
	v.isSet = true
}

func (v NullableLaunchImportRQ) IsSet() bool {
	return v.isSet
}

func (v *NullableLaunchImportRQ) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLaunchImportRQ(val *LaunchImportRQ) *NullableLaunchImportRQ {
	return &NullableLaunchImportRQ{value: val, isSet: true}
}

func (v NullableLaunchImportRQ) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLaunchImportRQ) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
