/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SearchLogRs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchLogRs{}

// SearchLogRs struct for SearchLogRs
type SearchLogRs struct {
	LaunchId         *int64            `json:"launchId,omitempty"`
	ItemId           *int64            `json:"itemId,omitempty"`
	ItemName         *string           `json:"itemName,omitempty"`
	Path             *string           `json:"path,omitempty"`
	PathNames        *PathNameResource `json:"pathNames,omitempty"`
	Duration         *float64          `json:"duration,omitempty"`
	Status           *string           `json:"status,omitempty"`
	Issue            *Issue            `json:"issue,omitempty"`
	PatternTemplates []string          `json:"patternTemplates,omitempty"`
	Logs             []LogEntry        `json:"logs,omitempty"`
}

// NewSearchLogRs instantiates a new SearchLogRs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchLogRs() *SearchLogRs {
	this := SearchLogRs{}
	return &this
}

// NewSearchLogRsWithDefaults instantiates a new SearchLogRs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchLogRsWithDefaults() *SearchLogRs {
	this := SearchLogRs{}
	return &this
}

// GetLaunchId returns the LaunchId field value if set, zero value otherwise.
func (o *SearchLogRs) GetLaunchId() int64 {
	if o == nil || IsNil(o.LaunchId) {
		var ret int64
		return ret
	}
	return *o.LaunchId
}

// GetLaunchIdOk returns a tuple with the LaunchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchLogRs) GetLaunchIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LaunchId) {
		return nil, false
	}
	return o.LaunchId, true
}

// HasLaunchId returns a boolean if a field has been set.
func (o *SearchLogRs) HasLaunchId() bool {
	if o != nil && !IsNil(o.LaunchId) {
		return true
	}

	return false
}

// SetLaunchId gets a reference to the given int64 and assigns it to the LaunchId field.
func (o *SearchLogRs) SetLaunchId(v int64) {
	o.LaunchId = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *SearchLogRs) GetItemId() int64 {
	if o == nil || IsNil(o.ItemId) {
		var ret int64
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchLogRs) GetItemIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *SearchLogRs) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given int64 and assigns it to the ItemId field.
func (o *SearchLogRs) SetItemId(v int64) {
	o.ItemId = &v
}

// GetItemName returns the ItemName field value if set, zero value otherwise.
func (o *SearchLogRs) GetItemName() string {
	if o == nil || IsNil(o.ItemName) {
		var ret string
		return ret
	}
	return *o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchLogRs) GetItemNameOk() (*string, bool) {
	if o == nil || IsNil(o.ItemName) {
		return nil, false
	}
	return o.ItemName, true
}

// HasItemName returns a boolean if a field has been set.
func (o *SearchLogRs) HasItemName() bool {
	if o != nil && !IsNil(o.ItemName) {
		return true
	}

	return false
}

// SetItemName gets a reference to the given string and assigns it to the ItemName field.
func (o *SearchLogRs) SetItemName(v string) {
	o.ItemName = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SearchLogRs) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchLogRs) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SearchLogRs) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *SearchLogRs) SetPath(v string) {
	o.Path = &v
}

// GetPathNames returns the PathNames field value if set, zero value otherwise.
func (o *SearchLogRs) GetPathNames() PathNameResource {
	if o == nil || IsNil(o.PathNames) {
		var ret PathNameResource
		return ret
	}
	return *o.PathNames
}

// GetPathNamesOk returns a tuple with the PathNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchLogRs) GetPathNamesOk() (*PathNameResource, bool) {
	if o == nil || IsNil(o.PathNames) {
		return nil, false
	}
	return o.PathNames, true
}

// HasPathNames returns a boolean if a field has been set.
func (o *SearchLogRs) HasPathNames() bool {
	if o != nil && !IsNil(o.PathNames) {
		return true
	}

	return false
}

// SetPathNames gets a reference to the given PathNameResource and assigns it to the PathNames field.
func (o *SearchLogRs) SetPathNames(v PathNameResource) {
	o.PathNames = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *SearchLogRs) GetDuration() float64 {
	if o == nil || IsNil(o.Duration) {
		var ret float64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchLogRs) GetDurationOk() (*float64, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *SearchLogRs) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float64 and assigns it to the Duration field.
func (o *SearchLogRs) SetDuration(v float64) {
	o.Duration = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SearchLogRs) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchLogRs) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SearchLogRs) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SearchLogRs) SetStatus(v string) {
	o.Status = &v
}

// GetIssue returns the Issue field value if set, zero value otherwise.
func (o *SearchLogRs) GetIssue() Issue {
	if o == nil || IsNil(o.Issue) {
		var ret Issue
		return ret
	}
	return *o.Issue
}

// GetIssueOk returns a tuple with the Issue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchLogRs) GetIssueOk() (*Issue, bool) {
	if o == nil || IsNil(o.Issue) {
		return nil, false
	}
	return o.Issue, true
}

// HasIssue returns a boolean if a field has been set.
func (o *SearchLogRs) HasIssue() bool {
	if o != nil && !IsNil(o.Issue) {
		return true
	}

	return false
}

// SetIssue gets a reference to the given Issue and assigns it to the Issue field.
func (o *SearchLogRs) SetIssue(v Issue) {
	o.Issue = &v
}

// GetPatternTemplates returns the PatternTemplates field value if set, zero value otherwise.
func (o *SearchLogRs) GetPatternTemplates() []string {
	if o == nil || IsNil(o.PatternTemplates) {
		var ret []string
		return ret
	}
	return o.PatternTemplates
}

// GetPatternTemplatesOk returns a tuple with the PatternTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchLogRs) GetPatternTemplatesOk() ([]string, bool) {
	if o == nil || IsNil(o.PatternTemplates) {
		return nil, false
	}
	return o.PatternTemplates, true
}

// HasPatternTemplates returns a boolean if a field has been set.
func (o *SearchLogRs) HasPatternTemplates() bool {
	if o != nil && !IsNil(o.PatternTemplates) {
		return true
	}

	return false
}

// SetPatternTemplates gets a reference to the given []string and assigns it to the PatternTemplates field.
func (o *SearchLogRs) SetPatternTemplates(v []string) {
	o.PatternTemplates = v
}

// GetLogs returns the Logs field value if set, zero value otherwise.
func (o *SearchLogRs) GetLogs() []LogEntry {
	if o == nil || IsNil(o.Logs) {
		var ret []LogEntry
		return ret
	}
	return o.Logs
}

// GetLogsOk returns a tuple with the Logs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchLogRs) GetLogsOk() ([]LogEntry, bool) {
	if o == nil || IsNil(o.Logs) {
		return nil, false
	}
	return o.Logs, true
}

// HasLogs returns a boolean if a field has been set.
func (o *SearchLogRs) HasLogs() bool {
	if o != nil && !IsNil(o.Logs) {
		return true
	}

	return false
}

// SetLogs gets a reference to the given []LogEntry and assigns it to the Logs field.
func (o *SearchLogRs) SetLogs(v []LogEntry) {
	o.Logs = v
}

func (o SearchLogRs) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchLogRs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LaunchId) {
		toSerialize["launchId"] = o.LaunchId
	}
	if !IsNil(o.ItemId) {
		toSerialize["itemId"] = o.ItemId
	}
	if !IsNil(o.ItemName) {
		toSerialize["itemName"] = o.ItemName
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.PathNames) {
		toSerialize["pathNames"] = o.PathNames
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Issue) {
		toSerialize["issue"] = o.Issue
	}
	if !IsNil(o.PatternTemplates) {
		toSerialize["patternTemplates"] = o.PatternTemplates
	}
	if !IsNil(o.Logs) {
		toSerialize["logs"] = o.Logs
	}
	return toSerialize, nil
}

type NullableSearchLogRs struct {
	value *SearchLogRs
	isSet bool
}

func (v NullableSearchLogRs) Get() *SearchLogRs {
	return v.value
}

func (v *NullableSearchLogRs) Set(val *SearchLogRs) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchLogRs) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchLogRs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchLogRs(val *SearchLogRs) *NullableSearchLogRs {
	return &NullableSearchLogRs{value: val, isSet: true}
}

func (v NullableSearchLogRs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchLogRs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
