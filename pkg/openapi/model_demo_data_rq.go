/*
ReportPortal

ReportPortal API documentation

API version: develop-322
Contact: support@reportportal.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DemoDataRq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DemoDataRq{}

// DemoDataRq struct for DemoDataRq
type DemoDataRq struct {
	CreateDashboard *bool `json:"createDashboard,omitempty"`
}

// NewDemoDataRq instantiates a new DemoDataRq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDemoDataRq() *DemoDataRq {
	this := DemoDataRq{}
	return &this
}

// NewDemoDataRqWithDefaults instantiates a new DemoDataRq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDemoDataRqWithDefaults() *DemoDataRq {
	this := DemoDataRq{}
	return &this
}

// GetCreateDashboard returns the CreateDashboard field value if set, zero value otherwise.
func (o *DemoDataRq) GetCreateDashboard() bool {
	if o == nil || IsNil(o.CreateDashboard) {
		var ret bool
		return ret
	}
	return *o.CreateDashboard
}

// GetCreateDashboardOk returns a tuple with the CreateDashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemoDataRq) GetCreateDashboardOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateDashboard) {
		return nil, false
	}
	return o.CreateDashboard, true
}

// HasCreateDashboard returns a boolean if a field has been set.
func (o *DemoDataRq) HasCreateDashboard() bool {
	if o != nil && !IsNil(o.CreateDashboard) {
		return true
	}

	return false
}

// SetCreateDashboard gets a reference to the given bool and assigns it to the CreateDashboard field.
func (o *DemoDataRq) SetCreateDashboard(v bool) {
	o.CreateDashboard = &v
}

func (o DemoDataRq) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DemoDataRq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateDashboard) {
		toSerialize["createDashboard"] = o.CreateDashboard
	}
	return toSerialize, nil
}

type NullableDemoDataRq struct {
	value *DemoDataRq
	isSet bool
}

func (v NullableDemoDataRq) Get() *DemoDataRq {
	return v.value
}

func (v *NullableDemoDataRq) Set(val *DemoDataRq) {
	v.value = val
	v.isSet = true
}

func (v NullableDemoDataRq) IsSet() bool {
	return v.isSet
}

func (v *NullableDemoDataRq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDemoDataRq(val *DemoDataRq) *NullableDemoDataRq {
	return &NullableDemoDataRq{value: val, isSet: true}
}

func (v NullableDemoDataRq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDemoDataRq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
